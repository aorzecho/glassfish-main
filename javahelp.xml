<?xml version="1.0" encoding="iso-8859-1"?>

<project name="JavaHelp source integration" default="build" basedir=".">

  <import file="build.xml"/>
  <import file="build-taskdefs.xml"/>

  <target name="build" depends="jdic.checkout, javahelp.build" />

  <target name="javahelp.build" depends="copy.javahelp.dependencies">
    <echo message="Building javahelp." />
    <ant antfile="${external.dir}/javahelp/javahelp_nbproject/build.xml"
        inheritall="false" />
    <copy file="${external.dir}/javahelp/javahelp_nbproject/dist/lib/jhall.jar"
        tofile="${external.dir}/javahelp/javahelp_nbproject/dist/lib/javahelp.jar" />
    <mvn.publish.local
        jar="${external.dir}/javahelp/javahelp_nbproject/dist/lib/javahelp.jar"
        mvngroup="javax.help"
        mvnartid="javahelp"
        mvnversion="2.0.02" />
  </target>

  <target name="copy.javahelp.dependencies" depends="javahelp.checkout">
    <!-- grab from local repo -->
    <mkdir dir="${external.dir}/javahelp/javahelp_nbproject/lib" />
    <copy file="${maven.repo.local}/javax/servlet/jsp/jsp-api/2.2/jsp-api-2.2.jar"
        tofile="${external.dir}/javahelp/javahelp_nbproject/lib/jsp-api.jar" />
    <copy file="${maven.repo.local}/${servlet.mvn.path}"
        tofile="${external.dir}/javahelp/javahelp_nbproject/lib/servlet-api.jar"/>

    <!--
      Workaround for bugs in javahelp's build.xml. Even though the
      servlet and jsp jars are present, it will still try to download
      tomcat.zip if it's not there. (It would then ignore the zip
      file since the jars are present.)
    -->
    <echo message="Touching file ${java.io.tmpdir}/apache-tomcat-5.5.20.zip to avoid javahelp downloading it." />
    <touch file="${java.io.tmpdir}/apache-tomcat-5.5.20.zip" />
  </target>

  <target name="javahelp.checkout" depends="init">
    <echo message="Checkout javahelp from ${javahelp.svn.url}."/>
    <exec executable="svn" dir="${external.dir}" failonerror="true" >
      <arg line="checkout" />
      <arg line="${javahelp.svn.url}" />
      <arg line="javahelp" />
    </exec>
  </target>

  <target name="jdic.checkout" depends="init">
    <echo message="Checking out jdic." />
    <cvs.checkout repo="${jdic.cvs.url}"
        tag="${jdic.cvs.tag}"
        module="jdic"
        dest="jdic" />
    <copy file="javahelp_jdic.txt"
        tofile="${external.dir}/jdic/GLASSFISH_SOURCE_README.txt" />
  </target>

</project>
