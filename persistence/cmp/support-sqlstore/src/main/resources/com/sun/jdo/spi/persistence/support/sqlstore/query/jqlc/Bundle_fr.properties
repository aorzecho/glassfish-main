#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# resource bundle for runtime messages
# key consists of: <subpackage>.<class>.<method>.<description>
# <subpackage> - is optional, package under runtime
# <class> - class name
# <method> - method name
# <description> - short description (use _ to represent space)
# all keys should be in lowercase
#
# The message ID for a message in persistence is derived as follows:
# JDO<2_digit_bundle_prefix><1_digit_section_number><2_digit_serial_number>
#
# The 2 digit prefix for this bundle is 79.
# 
# This file is divided into following sections. 
# 1. main compiler class
# 2. error message helper class
# 3. syntax error messages
# 4. semantic error messages
# 5. optimizer
# 6. code generation
# 7. Miscellaneous
#
# When adding a new message:
# 1. Please make sure that you add the message to the end of appropriate section.
# 2. Please add message ID to any user visible message.
# 3. The message ID for the new message = message ID for the last numbered 
#    message in a section + 1.
# 4. Please do not change the message ID for existing messages. These 
#    numbers are potentially mapped to more explanation about the message for 
#    the end user.
#

##############################################################################
#<main compiler class>
# Message ID Range: JDO79000 - JDO79099
#############################################################################

jqlc.jqlc.generic.nocandidateclass=JDO79000 : Les sp\u00e9cifications de la classe candidat manquent.
jqlc.jqlc.checkcandidates.memorycollection=JDO79001 : Les requ\u00eates sur les collections autres que de domaines ne sont pas prises en charge.
jqlc.jqlc.checkcandidates.mismatch=JDO79002 : La collection candidat ne correspond pas \u00e0 la classe candidat \u2019{0}\u2019.
# {0} - name of the compiler pass
LOG_JQLCStartPass=JDO79003 : JQLC d\u00e9marre {0}
# {0} - name of the compiler pass
LOG_JQLCDumpTree=JDO79004 : Arborescence de vidage JQLC {0}
LOG_JQLCReuseRetrieveDesc=JDO79005 : JQLC r\u00e9utilise RetrieveDesc mis en cache

#############################################################################
#<error message helper class>
#                  it is the last arg for each of them that contains the 
#                  actual message.
#############################################################################
jqlc.errormsg.generic.msg={0}: {1}
jqlc.errormsg.generic.msgcolumn={0} colonne({1}) : {2}
jqlc.errormsg.generic.msglinecolumn={0} ligne({1}) colonne({2}) : {3}

#############################################################################
#<syntax error messages>
# Message ID Range: JDO79100 - JDO79199
#############################################################################

jqlc.parser.syntaxerror=JDO79100 : Erreur de syntaxe.
jqlc.parser.syntaxerrorattoken=JDO79101 : Erreur de syntaxe \u00e0 \u2019{0}\u2019.
jqlc.parser.unexpectedtoken=JDO79102 : Jeton inattendu d\u2019erreur de syntaxe \u2019{0}\u2019.
jqlc.parser.unexpectedchar=JDO79103 : Caract\u00e8re inattendu d\u2019erreur de syntaxe \u2019{0}\u2019.
jqlc.parser.expectedfoundchar=JDO79104 : Caract\u00e8re attendu d\u2019erreur de syntaxe \u2019{0}\u2019, trouv\u00e9 \u2019{1}\u2019.
jqlc.parser.unexpectedEOF=JDO79105 : Fin inattendue du texte due \u00e0 une erreur de syntaxe.

#############################################################################
#<semantic error messages>
# Message ID Range: JDO7109200 - JDO79399
#############################################################################

# semantic error messages (unsupported operations)

jqlc.semantic.analysebitwiseexpr.exclusiveorop=JDO79200 : Exclusif ou op\u00e9rateur ^ non pris en charge.
jqlc.semantic.analysebitwiseexpr.integerbitwiseop=JDO79201 : Op\u00e9rateur au niveau du bit entier {0} non pris en charge.
jqlc.semantic.analysecollectioncall.unsupportedcollectionexpr=JDO79202 : Expression de collection \u2019{0}\u2019 non prise en charge.
jqlc.semantic.analysecollectioncall.nonvariable=JDO79203 : Variable attendue - la non variable contient des arguments qui ne sont pas pris en charge.
jqlc.semantic.generic.unsupportedconstraintop=JDO79204 : Op\u00e9ration \u2019{0}\u2019 non prise en charge pour une clause de contrainte variable.
jqlc.semantic.candidateclass.nonpc=JDO79205 : La classe \u2019{0}\u2019 n\u2019est pas capable de persistance. Les classes Candidat qui ne sont pas capables de persistance ne sont pas prises en charge pour la requ\u00eate.
jqlc.semantic.checkvalidorderingexpr.invalidordering=JDO79206 : Expression \u2019{0}\u2019 dans les sp\u00e9cifications de classement non prise en charge.
jqlc.semantic.checkvalidresultexpr.invalidresult=JDO79207 : L\u2019expression \u2019{0}\u2019 dans les sp\u00e9cifications de r\u00e9sultat n\u2019est pas prise en charge.

# semantic error messages (user errors)

jqlc.semantic.analysecollectioncall.typemismatch=JDO79208 : Le type d\u2019\u00e9l\u00e9ment de collection \u2019{0}\u2019 et le type de variable \u2019{1}\u2019 ne sont pas compatibles.
jqlc.semantic.analysecollectioncall.relationshipexpected=JDO79209 : Le champ de relation \u2019{0}\u2019est attendu.
jqlc.semantic.analysedotexpr.classexprexpected=JDO79210 : Une expression de type classe est attendue.
jqlc.semantic.analysefieldaccess.nonperistentfield=JDO79211 : Impossible d\u2019acc\u00e9der au champ non persistant \u2019{0}\u2019 de la classe capable de persistance \u2019{1}\u2019.
jqlc.semantic.analysefieldaccess.nonpublicfield=JDO79212 : Impossible d\u2019acc\u00e9der au champ non-public \u2019{0}\u2019 de la classe \u2019{1}\u2019qui n\u2019utilise pas la persistance.
jqlc.semantic.analysestaticfieldaccess.staticreference=JDO79213 : Impossible de faire une r\u00e9f\u00e9rence statique \u00e0 une variable non statique \u2019{0}\u2019 de la classe \u2019{1}\u2019.
jqlc.semantic.analysestaticfieldaccess.nonpublicfield=JDO79214 : Impossible d\u2019acc\u00e9der au champ statique non public \u2019{0}\u2019 de la classe \u2019{1}\u2019.
jqlc.semantic.analyserelationalexpr.notorderable=JDO79215 : Le type d\u2019op\u00e9rande \u2019{0}\u2019 de {1} ne peut pas \u00eatre tri\u00e9.
jqlc.semantic.expression.undefined=JDO79216 : Expression ind\u00e9finie \u2019{0}\u2019.
jqlc.semantic.filter.booleanexpected=JDO79217 : Expression bool\u00e9enne attendue, l\u2019expression filtre a le type \u2019{0}\u2019.
jqlc.semantic.generic.alreadydeclared=JDO79218 : \u2019{0}\u2019 d\u00e9j\u00e0 d\u00e9clar\u00e9 comme {1}.
jqlc.semantic.generic.arguments.numbermismatch=JDO79219 : Mauvais nombre d\u2019arguments.
jqlc.semantic.generic.arguments.typemismatch=JDO79220 : Type de param\u00e8tre effectif incompatible. Impossible de convertir \u2019{0}\u2019 en \u2019{1}\u2019.
jqlc.semantic.generic.arguments.invalid=JDO79221 : Les arguments de \u2019{0}\u2019ne sont pas valides.
jqlc.semantic.generic.invalidmethodcall=JDO79222 : Appel de m\u00e9thode incorrect.
jqlc.semantic.generic.unknownfield=JDO79223 : Le champ \u2019{0}\u2019 n\u2019est pas d\u00e9fini pour la classe \u2019{1}\u2019.
jqlc.semantic.generic.unknowntype=JDO79224 : Type \u2019{0}\u2019 inconnu.
jqlc.semantic.identifier.undefined=JDO79225 : Identificateur \u2019{0}\u2019 non d\u00e9fini.
jqlc.semantic.primary.invalidcast=JDO79226 : Impossible de convertir l\u2019expression de type \u2019{0}\u2019 en \u2019{1}\u2019.
jqlc.semantic.type.notype=JDO79227 : Type attendu, \u2019{0}\u2019 est d\u00e9fini comme {1}.
jqlc.semantic.analyseorderingexpression.notorderable=JDO79228 : Le type \u2019{0}\u2019 de l\u2019expression de classement ne peut pas \u00eatre tri\u00e9.
jqlc.semantic.checkvalidresultexpr.invalidavgsumexpr=JDO79229 : Le type \u2019{0}\u2019 de l\u2019expression regroup\u00e9e \u2019{1}\u2019 n\u2019est pas de type Nombre ou char.
jqlc.semantic.checkvalidresultexpr.invalidminmaxexpr=JDO79230 : Le type \u2019{0}\u2019 de l\u2019expression regroup\u00e9e \u2019{1}\u2019 ne peut pas \u00eatre tri\u00e9.
jqlc.semantic.checkresultordering.invalidorderingfordistinctresultfield=JDO79231 : L\u2019expression de champ de r\u00e9sultat \u2019{0}\u2019 n\u2019est pas compatible avec l\u2019expression de classement \u2019{1}\u2019.  Elles doivent \u00eatre identiques.
jqlc.semantic.checkresultordering.invalidorderingfordistinctresult=JDO79232 : L\u2019expression de r\u00e9sultat \u2019{0} distincte \u2019 n\u2019est pas compatible avec l\u2019expression de classement \u2019{1}\u2019.  Celles-ci doivent correspondre \u00e0 des champs d\u2019une m\u00eame classe et doivent utiliser la m\u00eame expression de navigation vers la classe.

# query parameter table

jqlc.parametertable.checkunboundparams.unboundparam=JDO79233 : Le param\u00e8tre de requ\u00eate \u2019{0}\u2019 n\u2019est pas li\u00e9.
jqlc.parametertable.definevaluebyname.undefinedparam=JDO79234 : Le param\u00e8tre de requ\u00eate \u2019{0}\u2019 n\u2019est pas d\u00e9fini.
jqlc.parametertable.definevaluebyindex.wrongnumberofargs=JDO79235 : Mauvais nombre d\u2019arguments.
jqlc.parametertable.definevaluebyindex.typemismatch=JDO79236 : Type de param\u00e8tre effectif incompatible. Impossible de convertir \u2019{0}\u2019 en \u2019{1}\u2019.

#############################################################################
#<optimizer>
# Message ID Range: JDO79400 - JDO79499
#############################################################################

jqlc.optimizer.staticfieldaccess.illegal=JDO79400 : Impossible d\u2019acc\u00e9der au champ statique \u2019{0}\u2019 de la classe \u2019{1}\u2019.
jqlc.optimizer.literal.invalid=JDO79401 : Litt\u00e9ral {0} \u2019{1}\u2019 non valide.

#############################################################################
#<code generation>
# Message ID Range: JDO79500 - JDO79599
#############################################################################

jqlc.codegeneration.fieldaccess.illegal=JDO79500 : Impossible d\u2019acc\u00e9der au champ \u2019{0}\u2019 de l\u2019objet \u2019{1}\u2019.
jqlc.codegeneration.collectioncomparison.nonnull=JDO79501 : Cette comparaison de collection avec une valeur non null n\u2019est pas prise en charge.
jqlc.codegeneration.generic.unsupportedop=JDO79502 : L\u2019op\u00e9ration \u2019{0}\u2019 n\u2019est pas prise en charge
jqlc.codegeneration.substring.beginnegative=JDO79503 : L\u2019index de d\u00e9but \u2019{0}\u2019 de la m\u00e9thode substring est n\u00e9gatif.
jqlc.codegeneration.substring.beginlargerend=JDO79504 : L\u2019index de d\u00e9but \u2019{0}\u2019de la m\u00e9thode substring est plus grand que l\u2019index de fin \u2019{1}\u2019.
jqlc.codegeneration.resultExpr.missingpkfields=JDO79505 : Expression COUNT non prise en charge. Le type d\u2019expression \u2019{0}\u2019 correspond \u00e0 une classe capable de persistance sans champ de cl\u00e9 primaire.

#############################################################################
#<Miscellaneous>
# Message ID Range: JDO79600 - JDO79699
#############################################################################
# {0} - RetrieveDesc info
LOG_JQLCDumpRD=JDO79600 : JQLC vide RetrieveDesc {0}

# variable table

jqlc.variabletable.markconstraint.multiple=JDO79601 : Contraintes multiples pour la variable \u2019{0}\u2019.
jqlc.variabletable.checkconstraint.unused=JDO79602 : La variable \u2019{0}\u2019 est d\u00e9finie mais pas utilis\u00e9e.
jqlc.variabletable.checkconstraint.cycle=JDO79603 : D\u00e9finition de la contrainte cyclique pour la variable \u2019{0}\u2019 non prise en charge.
jqlc.variabletable.merge.different=JDO79604 : Diff\u00e9rentes contraintes pour la m\u00eame variable \u2019{0}\u2019.


###############################################################################
# <NOI18N: These messages are used for JDOFatalInternalException. These are not
# for end user. There is no message ID.>
###############################################################################
#
# <NOI18N>
#
jqlc.jqlc.checkcandidates.nullpc=Persistence capable class of extent collection is null.

jqlc.parser.invalidunicodestr=JQLLexer.UNICODE_STR 

jqlc.parametertable.getvaluebyname.undefined=ParameterTable.getValueByName: undefined parameter {0}.
jqlc.parametertable.getvaluebyindex.wrongindex=ParameterTable.getValueByIndex: wrong index {0}.
jqlc.parametertable.definevaluebyindex.wrongindex=ParameterTable.defineValueByIndex: wrong index {0}.

jqlc.semantic.checkcandidateclass.unknowntype=Semantic.checkCandidateClass: unknown type {0}.
jqlc.semantic.analysedefinedidentifier.illegalident=Semantic.analyseDefinedIdentifier: illegal identifier definition {0}.
jqlc.semantic.getcollectionfield.missingchildren=Semantic.getCollectionField: invalid node structure children missing.

jqlc.optimizer.checkbinaryplusop.invalidtype=Optimizer.checkBinaryPlusOp: invalid type {0}.
jqlc.optimizer.checkbinaryminusop.invalidtype=Optimizer.checkBinaryMinusOp: invalid type {0}.
jqlc.optimizer.checkmultiplicationop.invalidtype=Optimizer.checkMultiplicationOp: invalid type {0}.
jqlc.optimizer.checkdivisionop.invalidtype=Optimizer.checkDivisionOp: invalid type {0}.
jqlc.optimizer.checkmodop.invalidtype=Optimizer.checkModOp: invalid type {0}.
jqlc.optimizer.checkunaryminusop.invalidtype=Optimizer.checkUnaryMinusOp: invalid type {0}.
jqlc.optimizer.getbigdecimalvalue.notnumber=Optimizer.getBigDecimalValue: expected number value {0}.
jqlc.optimizer.getbigintegervalue.notnumber=Optimizer.getBigIntegerValue: expected number value {0}.
jqlc.optimizer.isempty.requirecollection=Optimizer.isEmpty: requires collection value.

jqlc.codegeneration.generatesimplefieldvaluecomparison.invalidvalue=CodeGeneration.generateSimpleFieldValueComparison: invalid null value in relational operation.
jqlc.codegeneration.generateparametervaluecomparison.invalidvalue=CodeGeneration.generateParameterValueComparison: invalid null value in relational operation.
jqlc.codegeneration.getkeyfieldscomparisonbooleanop.invalidobj=CodeGeneration.getKeyFieldsComparisonBooleanOp: invalid object comparison operation {0}.
jqlc.codegeneration.filter.nonbooleanvalue=CodeGeneration.filter: invalid non boolean value {0}.
jqlc.codegeneration.primary.null=CodeGeneration.primary: invalid null value.

jqlc.variabletable.markused.varnotfound=VariableTable.markUsed variable {0} not found.
jqlc.variabletable.markused.multidep=VariableTable.markUsed multiple dependencies for variable {0} old: {1}, new: {2}.
jqlc.variabletable.markconstraint.varnotfound=VariableTable.markConstraint variable {0} not found.

jqlc.jdoqlparameterdeclarationparser.next.wrongtoken=ParameterDeclarationHelper.ParameterTypeIterator.next: wrong token type {0} expected PARAMETER_DEF node.

jqlc.queryvaluefetcher.getvalue.invalidparam=Invalid parameter index {0} parameter array has length {1}.
