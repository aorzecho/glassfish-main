#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# resource bundle for runtime messages
# key consists of: <subpackage>.<class>.<method>.<description>
# <subpackage> - is optional, package under runtime
# <class> - class name
# <method> - method name
# <description> - short description (use _ to represent space)
# all keys should be in lowercase
#
# The message ID for a message in persistence is derived as follows:
# JDO<2_digit_bundle_prefix><1_digit_section_number><2_digit_serial_number>
#
# The 2 digit prefix for this bundle is 77.
# 
# When adding a new message:
# 1. Please make sure that you add the message to the end of the file.
# 2. Please add message ID to any user visible message.
# 3. The message ID for the new message = message ID for the last numbered 
#    message in the file + 1.
# 4. Please do not change message number for existing messages. These numbers 
#    are potentially mapped to more explanation about the message for the end 
#    user.
#

###############################################################################
# <This bundle is not divided into sections.>
# Message ID Range: JDO77000 - JDO77999
###############################################################################
jdohelper.deleted_instance=JDO77000: \u7c7b {0} \u7684\u5df2\u5220\u9664\u5b9e\u4f8b
persistencemanagerfactoryimpl.notsupported=JDO77001: \u6b64\u53d1\u884c\u7248\u4e2d\u4e0d\u652f\u6301\u64cd\u4f5c\u3002
persistencemanagerfactoryimpl.configured=JDO77002: \u8bbe\u7f6e\u5b8c\u6210\u540e\u4e0d\u80fd\u66f4\u6539\u914d\u7f6e\u53c2\u6570\u3002
persistencemanagerfactoryimpl.initialcontext=JDO77003: setConnectionFactoryName() \u6ca1\u6709\u53ef\u7528\u7684 InitialContext\u3002
persistencemanagerfactoryimpl.lookup=JDO77004: \u67e5\u627e ConnectionFactoryName \u65f6\u53d1\u751f\u9519\u8bef\u3002
persistencemanagerfactoryimpl.wrongtype=JDO77005: \u8fde\u63a5\u5de5\u5382\u5fc5\u987b\u5c5e\u4e8e ConnectionFactory \u6216 java.sql.DataSource \u7c7b\u578b\u3002
connectionefactoryimpl.sqlexception=JDO77006: SQL \u5f02\u5e38: \u72b6\u6001 = {0}, \u9519\u8bef\u4ee3\u7801 = {1}\u3002
connectionefactoryimpl.getconnection=JDO77007: \u65e0\u6cd5\u83b7\u53d6\u8fde\u63a5\u3002
connectionefactoryimpl.isolationlevel_notsupported=JDO77008: \u6570\u636e\u5e93\u4e0d\u652f\u6301\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b {0}\u3002
sco.nulls_not_allowed=JDO77009: \u6b64\u96c6\u5408\u4e0d\u5141\u8bb8\u7a7a\u503c\u3002
sco.classcastexception=JDO77010: \u65b0\u5143\u7d20\u4e0d\u80fd\u88ab\u5f3a\u5236\u8f6c\u6362\u4e3a {0}\u3002
sco.not_supported=JDO77011: \u6b64\u53d1\u884c\u7248\u4e2d\u4e0d\u652f\u6301\u6309\u7d22\u5f15\u66f4\u65b0\u96c6\u5408\u3002
transaction.transactionimpl.setoptimistic.notallowed=JDO77012: \u4e0d\u80fd\u66f4\u6539\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u7684\u4e8b\u52a1\u7684\u7c7b\u578b\u3002
transaction.transactionimpl.begin.notnew=JDO77013: Transaction.begin() \u65e0\u6548\u3002\u8be5\u4e8b\u52a1\u4e0d\u662f\u65b0\u4e8b\u52a1\uff08\u72b6\u6001 = {0}\uff09\u3002
transaction.transactionimpl.rolledback=JDO77014: \u65e0\u6548\u4e8b\u52a1\u3002{0}(). \u8be5\u4e8b\u52a1\u5df2\u56de\u6eda\uff08\u72b6\u6001 = {1}\uff09\u3002
transaction.transactionimpl.commitbefore.rolledback=JDO77015: Transaction.commit() \u65e0\u6548\u3002\u8be5\u4e8b\u52a1\u5df2\u5728\u540c\u6b65\u901a\u77e5\u671f\u95f4\u56de\u6eda\u3002
transaction.transactionimpl.commit_rollback.notactive=JDO77016: \u65e0\u6548\u4e8b\u52a1\u3002{0}(). \u8be5\u4e8b\u52a1\u4e0d\u518d\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff08\u72b6\u6001 = {1}\uff09\u3002
transaction.transactionimpl.commitbefore.incommit=JDO77017: \u65e0\u6548\u4e8b\u52a1\u3002{0}(). \u8be5\u4e8b\u52a1\u5df2\u7ecf\u5f00\u59cb\u63d0\u4ea4\u3002
transaction.transactionimpl.commitbefore.rollbackonly_insync=JDO77018: Transaction.commit() \u65e0\u6548\u3002\u4e8b\u52a1\u5df2\u56de\u6eda\u3002\u8be5\u4e8b\u52a1\u5728\u540c\u6b65\u901a\u77e5\u671f\u95f4\u88ab\u6807\u8bb0\u4e3a\u53ea\u56de\u6eda\u3002
transaction.transactionimpl.commitbefore.rollbackonly=JDO77019: Transaction.commit() \u65e0\u6548\u3002\u4e8b\u52a1\u5df2\u56de\u6eda\u3002\u8be5\u4e8b\u52a1\u88ab\u6807\u8bb0\u4e3a\u53ea\u56de\u6eda\u3002
transaction.transactionimpl.commitprepare.wrongstatus=JDO77020: [\u5185\u90e8] \u65e0\u6548\u4e8b\u52a1\u3002{0}(). \u8be5\u4e8b\u52a1\u7684\u72b6\u6001\u4e0d\u662f {1}\uff08\u72b6\u6001 = {2}\uff09\u3002
transaction.transactionimpl.commitcomplete.error=JDO77021: Transaction.commitComplete() \u65e0\u6548\u3002\u8be5\u4e8b\u52a1\u5728\u63d0\u4ea4\u5b8c\u6210\u5904\u7406\u671f\u95f4\u56de\u6eda, \u5f02\u5e38\u4ee3\u7801\u4e3a {0}\u3002
transaction.transactionimpl.mgd=JDO77022: \u5728\u7ba1\u7406\u7684\u73af\u5883\u4e2d\u4e0d\u5141\u8bb8\u64cd\u4f5c {0}\u3002
transaction.transactionimpl.nonmgd=JDO77023: \u5728\u975e\u7ba1\u7406\u7684\u73af\u5883\u4e2d\u4e0d\u5141\u8bb8\u64cd\u4f5c {0}\u3002
transaction.transactionimpl.begin.failedlocaltx=JDO77024: \u65e0\u6cd5\u542f\u52a8\u672c\u5730\u4e8b\u52a1\u6216\u6ce8\u518c\u540c\u6b65\u3002
transaction.transactionimpl.begin.registersynchfailed=JDO77025: \u65e0\u6cd5\u6ce8\u518c\u540c\u6b65\u3002
transaction.transactionimpl.forget.connectionnotclosed=JDO77026: \u8fde\u63a5\u5c1a\u672a\u5173\u95ed\u3002
transaction.transactionimpl.getconnection.nullcf=JDO77027: ConnectionFactory \u4e3a\u7a7a\u3002
transaction.transactionimpl.syncmanager.aftercompletion=JDO77028: \u5bf9 SynchronizationManager \u8fdb\u884c afterCompletion \u8c03\u7528\u671f\u95f4\u51fa\u73b0\u95ee\u9898:\n{0}

#
# <NOI18N: VersionConsistencyCacheImpl>
#
jdo.versionconsistencycacheimpl.put.entering=JDO77029: VCCacheImpl.put entering: pcType={0} oid={1} sm={2}
jdo.versionconsistencycacheimpl.put.returning=JDO77030: VCCacheImpl.put returning: rc={0}
jdo.versionconsistencycacheimpl.get.entering=JDO77031: VCCacheImpl.get entering: pcType={0} oid={1}
jdo.versionconsistencycacheimpl.get.returning=JDO77032: VCCacheImpl.get returning: rc={0}
jdo.versionconsistencycacheimpl.remove.entering=JDO77033: VCCacheImpl.remove entering: pcType={0} oid={1}
jdo.versionconsistencycacheimpl.remove.returning=JDO77034: VCCacheImpl.remove returning: rc={0}
jdo.versionconsistencycacheimpl.addpctype=JDO77035: VCCacheImpl.addPCType: pcType={0}
jdo.versionconsistencycacheimpl.removepctype=JDO77036: VCCacheImpl.removePCType: pcType={0}
jdo.versionconsistencycacheimpl.usinghashmap=JDO77037: VCCacheImpl: Creating HashMap with bucketSize={0} initialCapacity={1} loadFactor={2}
jdo.versionconsistencycacheimpl.usinglrucache=JDO77038: VCCacheImpl: Creating LruCache with maxEntries={0} timeout={1} loadFactor={2}
jdo.versionconsistencycacheimpl.trimevent=JDO77039: VCCacheImpl:  got trimEvent.
jdo.versionconsistencycacheimpl.created=JDO77040: VCCacheImpl: created with: {0}

#
# Following messages *DO* need to be I18N'd.
#
jdo.versionconsistencycacheimpl.lrucachenotfound=JDO77041: \u65e0\u6cd5\u88c5\u5165 LRU \u7248\u672c\u4e00\u81f4\u6027\u9ad8\u901f\u7f13\u5b58\uff0c\u6539\u4e3a\u4f7f\u7528\u9ed8\u8ba4\u9ad8\u901f\u7f13\u5b58\u3002
jdo.versionconsistencycacheimpl.badconfigvalue=JDO77042: \u914d\u7f6e\u7248\u672c\u4e00\u81f4\u6027\u9ad8\u901f\u7f13\u5b58\u65f6\uff0c\u5bf9\u4e8e\u5c5e\u6027 {0}\uff0c\u83b7\u5f97\u503c {1}\uff0c\u8fd9\u662f\u4e00\u4e2a\u65e0\u6548\u503c\u3002
jdo.versionconsistencycacheimpl.unexpectedduringcreate=JDO77043: \u521d\u59cb\u5316\u7248\u672c\u4e00\u81f4\u6027\u9ad8\u901f\u7f13\u5b58\u65f6\u51fa\u73b0\u610f\u5916\u7684\u5f02\u5e38\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u7684\u9ad8\u901f\u7f13\u5b58\u5b9e\u73b0\u3002\u5f02\u5e38\u8be6\u7ec6\u4fe1\u606f: {0}
