#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# resource bundle for runtime messages
# key consists of: <subpackage>.<class>.<method>.<description>
# <subpackage> - is optional, package under runtime
# <class> - class name
# <method> - method name
# <description> - short description (use _ to represent space)
# all keys should be in lowercase
#
# The message ID for a message in persistence is derived as follows:
# JDO<2_digit_bundle_prefix><1_digit_section_number><2_digit_serial_number>
#
# The 2 digit prefix for this bundle is 79.
# 
# This file is divided into following sections. 
# 1. main compiler class
# 2. error message helper class
# 3. syntax error messages
# 4. semantic error messages
# 5. optimizer
# 6. code generation
# 7. Miscellaneous
#
# When adding a new message:
# 1. Please make sure that you add the message to the end of appropriate section.
# 2. Please add message ID to any user visible message.
# 3. The message ID for the new message = message ID for the last numbered 
#    message in a section + 1.
# 4. Please do not change the message ID for existing messages. These 
#    numbers are potentially mapped to more explanation about the message for 
#    the end user.
#

##############################################################################
#<main compiler class>
# Message ID Range: JDO79000 - JDO79099
#############################################################################

jqlc.jqlc.generic.nocandidateclass=JDO79000: \ud6c4\ubcf4 \ud074\ub798\uc2a4 \uc0ac\uc591\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.
jqlc.jqlc.checkcandidates.memorycollection=JDO79001: \ube44\ubc94\uc704 \ubaa8\uc74c\uc758 \ucffc\ub9ac\uac00 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
jqlc.jqlc.checkcandidates.mismatch=JDO79002: \ud6c4\ubcf4 \ubaa8\uc74c\uc774 \ud6c4\ubcf4 \ud074\ub798\uc2a4 ''{0}''\uacfc(\uc640) \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
# {0} - name of the compiler pass
LOG_JQLCStartPass=JDO79003: JQLC \uc2dc\uc791 {0}
# {0} - name of the compiler pass
LOG_JQLCDumpTree=JDO79004: JQLC\uc5d0\uc11c \ud2b8\ub9ac {0}\uc744(\ub97c) \ub364\ud504\ud569\ub2c8\ub2e4.
LOG_JQLCReuseRetrieveDesc=JDO79005: JQLC\uc5d0\uc11c \uce90\uc2dc\ub41c RetrieveDesc\ub97c \ub2e4\uc2dc \uc0ac\uc6a9\ud569\ub2c8\ub2e4.

#############################################################################
#<error message helper class>
#                  it is the last arg for each of them that contains the 
#                  actual message.
#############################################################################
jqlc.errormsg.generic.msg={0}: {1}
jqlc.errormsg.generic.msgcolumn={0} \uc5f4({1}): {2}
jqlc.errormsg.generic.msglinecolumn={0} \ud589({1}) \uc5f4({2}): {3}

#############################################################################
#<syntax error messages>
# Message ID Range: JDO79100 - JDO79199
#############################################################################

jqlc.parser.syntaxerror=JDO79100: \uad6c\ubb38 \uc624\ub958\uc785\ub2c8\ub2e4.
jqlc.parser.syntaxerrorattoken=JDO79101: ''{0}''\uc5d0 \uad6c\ubb38 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.
jqlc.parser.unexpectedtoken=JDO79102: \uad6c\ubb38 \uc624\ub958. \uc608\uae30\uce58 \uc54a\uc740 \ud1a0\ud070 ''{0}''.
jqlc.parser.unexpectedchar=JDO79103: \uad6c\ubb38 \uc624\ub958. \uc608\uae30\uce58 \uc54a\uc740 \ubb38\uc790 ''{0}''.
jqlc.parser.expectedfoundchar=JDO79104: \uad6c\ubb38 \uc624\ub958. \uc608\uc0c1 \ubb38\uc790 ''{0}'', \ucc3e\uc740 \ubb38\uc790 ''{1}''.
jqlc.parser.unexpectedEOF=JDO79105: \uc608\uae30\uce58 \uc54a\uc740 \ud14d\uc2a4\ud2b8 \uc885\ub8cc \uad6c\ubb38 \uc624\ub958

#############################################################################
#<semantic error messages>
# Message ID Range: JDO7109200 - JDO79399
#############################################################################

# semantic error messages (unsupported operations)

jqlc.semantic.analysebitwiseexpr.exclusiveorop=JDO79200: Exclusive \ub610\ub294 \uc5f0\uc0b0\uc790 ^\ub294 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
jqlc.semantic.analysebitwiseexpr.integerbitwiseop=JDO79201: \uc815\uc218 \ube44\ud2b8 \uc5f0\uc0b0\uc790 {0}\uc740(\ub294) \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
jqlc.semantic.analysecollectioncall.unsupportedcollectionexpr=JDO79202: \ubaa8\uc74c \ud45c\ud604\uc2dd ''{0}''\uc740(\ub294) \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
jqlc.semantic.analysecollectioncall.nonvariable=JDO79203: \ubcc0\uc218\uac00 \uc608\uc0c1\ub418\uc5c8\uc2b5\ub2c8\ub2e4. non \ubcc0\uc218\uc5d0 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\ub294 \uc778\uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4.
jqlc.semantic.generic.unsupportedconstraintop=JDO79204: \ubcc0\uc218 \uc81c\uc57d \uc870\uac74 \uc808\uc5d0 \uc791\uc5c5 ''{0}''\uc774(\uac00) \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
jqlc.semantic.candidateclass.nonpc=JDO79205: ''{0}'' \ud074\ub798\uc2a4\ub294 \uc9c0\uc18d\uc131\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \ube44\uc9c0\uc18d\uc131 \ud6c4\ubcf4 \ud074\ub798\uc2a4\ub294 \ucffc\ub9ac\uc5d0\uc11c \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
jqlc.semantic.checkvalidorderingexpr.invalidordering=JDO79206: \uc21c\uc11c \uc0ac\uc591\uc5d0 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\ub294 \ud45c\ud604\uc2dd ''{0}''\uc774(\uac00) \uc788\uc2b5\ub2c8\ub2e4.
jqlc.semantic.checkvalidresultexpr.invalidresult=JDO79207: \uacb0\uacfc \uc0ac\uc591\uc5d0 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\ub294 \ud45c\ud604\uc2dd ''{0}''\uc774(\uac00) \uc788\uc2b5\ub2c8\ub2e4.

# semantic error messages (user errors)

jqlc.semantic.analysecollectioncall.typemismatch=JDO79208: \ubaa8\uc74c \uc694\uc18c \uc720\ud615 ''{0}''\uacfc(\uc640) \ubcc0\uc218 \uc720\ud615 ''{1}''\uc740(\ub294) \ud638\ud658\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
jqlc.semantic.analysecollectioncall.relationshipexpected=JDO79209: \uad00\uacc4 \ud544\ub4dc\uc5d0 ''{0}''\uc774(\uac00) \uc608\uc0c1\ub429\ub2c8\ub2e4.
jqlc.semantic.analysedotexpr.classexprexpected=JDO79210: \ud074\ub798\uc2a4 \uc720\ud615\uc758 \ud45c\ud604\uc2dd\uc774 \uc608\uc0c1\ub429\ub2c8\ub2e4.
jqlc.semantic.analysefieldaccess.nonperistentfield=JDO79211: \uc9c0\uc18d\uc131\uc774 \uc788\ub294 \ud074\ub798\uc2a4 ''{1}''\uc758 \ube44\uc9c0\uc18d\uc131 \ud544\ub4dc ''{0}''\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
jqlc.semantic.analysefieldaccess.nonpublicfield=JDO79212: \uc9c0\uc18d\uc131\uc774 \uc5c6\ub294 \ud074\ub798\uc2a4 ''{1}''\uc758 \ube44\uacf5\uc6a9 \ud544\ub4dc ''{0}''\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
jqlc.semantic.analysestaticfieldaccess.staticreference=JDO79213: \ud074\ub798\uc2a4 ''{1}''\uc758 \ube44\uc815\uc801 \ubcc0\uc218 ''{0}''\uc5d0 \ub300\ud55c \uc815\uc801 \ucc38\uc870\ub97c \ub9cc\ub4e4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
jqlc.semantic.analysestaticfieldaccess.nonpublicfield=JDO79214: \ud074\ub798\uc2a4 ''{1}''\uc758 \ube44\uacf5\uc6a9 \uc815\uc801 \ud544\ub4dc ''{0}''\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
jqlc.semantic.analyserelationalexpr.notorderable=JDO79215: {1}\uc758 \ud53c\uc5f0\uc0b0\uc790 \uc720\ud615 ''{0}''\uc740(\ub294) \uc815\ub82c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
jqlc.semantic.expression.undefined=JDO79216: \ud45c\ud604\uc2dd ''{0}''\uc740(\ub294) \uc815\uc758\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.
jqlc.semantic.filter.booleanexpected=JDO79217: \ubd80\uc6b8 \ud45c\ud604\uc2dd\uc774 \uc608\uc0c1\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ud544\ud130 \ud45c\ud604\uc2dd\uc758 \uc720\ud615\uc740 ''{0}''\uc785\ub2c8\ub2e4.
jqlc.semantic.generic.alreadydeclared=JDO79218: ''{0}''\uc774(\uac00) \uc774\ubbf8 {1}(\uc73c)\ub85c \uc120\uc5b8\ub418\uc5c8\uc2b5\ub2c8\ub2e4.
jqlc.semantic.generic.arguments.numbermismatch=JDO79219: \uc778\uc218\uc758 \uc218\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4.
jqlc.semantic.generic.arguments.typemismatch=JDO79220: \ud638\ud658\ub418\uc9c0 \uc54a\ub294 \uc720\ud615\uc758 \uc2e4\uc81c \ub9e4\uac1c \ubcc0\uc218\uc785\ub2c8\ub2e4. ''{0}''\uc744(\ub97c) ''{1}''(\uc73c)\ub85c \ubcc0\ud658\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
jqlc.semantic.generic.arguments.invalid=JDO79221: ''{0}''\uc758 \uc778\uc218\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4.
jqlc.semantic.generic.invalidmethodcall=JDO79222: \uc798\ubabb\ub41c \uba54\uc18c\ub4dc \ud638\ucd9c\uc785\ub2c8\ub2e4.
jqlc.semantic.generic.unknownfield=JDO79223: \ud074\ub798\uc2a4 ''{1}''\uc5d0 \ud544\ub4dc ''{0}''\uc774(\uac00) \uc815\uc758\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.
jqlc.semantic.generic.unknowntype=JDO79224: \uc720\ud615 ''{0}''\uc744 \uc54c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
jqlc.semantic.identifier.undefined=JDO79225: \uc2dd\ubcc4\uc790 ''{0}''\uc774(\uac00) \uc815\uc758\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4.
jqlc.semantic.primary.invalidcast=JDO79226: \uc720\ud615 ''{0}''\uc758 \ud45c\ud604\uc2dd\uc744 \uc720\ud615 ''{1}''(\uc73c)\ub85c \uce90\uc2a4\ud2b8\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
jqlc.semantic.type.notype=JDO79227: \uc608\uc0c1\ub41c \uc720\ud615 ''{0}''\uc740(\ub294) {1}(\uc73c)\ub85c \uc815\uc758\ub418\uc5c8\uc2b5\ub2c8\ub2e4.
jqlc.semantic.analyseorderingexpression.notorderable=JDO79228: \uc21c\uc11c \ud45c\ud604\uc2dd\uc758 \uc720\ud615 ''{0}''\uc740(\ub294) \uc815\ub82c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
jqlc.semantic.checkvalidresultexpr.invalidavgsumexpr=JDO79229: \uc885\ud569 \ud45c\ud604\uc2dd ''{1}''\uc758 \uc720\ud615 ''{0}''\uc740(\ub294) \uc22b\uc790 \ub610\ub294 \ubb38\uc790 \uc720\ud615\uc774 \uc544\ub2d9\ub2c8\ub2e4.
jqlc.semantic.checkvalidresultexpr.invalidminmaxexpr=JDO79230: \uc885\ud569 \ud45c\ud604\uc2dd ''{1}''\uc758 \uc720\ud615 ''{0}''\uc740(\ub294) \uc815\ub82c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
jqlc.semantic.checkresultordering.invalidorderingfordistinctresultfield=JDO79231: distinct \uacb0\uacfc \ud544\ub4dc \ud45c\ud604\uc2dd ''{0}''\uacfc(\uc640) \uc21c\uc11c \ud45c\ud604\uc2dd ''{1}''\uc740(\ub294) \ud638\ud658\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uac19\uc740 \ud544\ub4dc\uc5ec\uc57c \ud569\ub2c8\ub2e4.
jqlc.semantic.checkresultordering.invalidorderingfordistinctresult=JDO79232: \uacb0\uacfc \ud45c\ud604\uc2dd ''distinct {0}''\uc640(\uacfc) ''{1}''\uc740(\ub294) \ud638\ud658\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud074\ub798\uc2a4\uc5d0 \ub300\ud55c \uac19\uc740 \ud0d0\uc0c9 \ud45c\ud604\uc2dd\uc744 \uc0ac\uc6a9\ud558\ub294 \uac19\uc740 \ud074\ub798\uc2a4\uc758 \ud544\ub4dc\uc5ec\uc57c \ud569\ub2c8\ub2e4.

# query parameter table

jqlc.parametertable.checkunboundparams.unboundparam=JDO79233: \ubc14\uc778\ub4dc\ub418\uc9c0 \uc54a\uc740 \ucffc\ub9ac \ub9e4\uac1c \ubcc0\uc218 ''{0}''\uc785\ub2c8\ub2e4.
jqlc.parametertable.definevaluebyname.undefinedparam=JDO79234: \uc815\uc758\ub418\uc9c0 \uc54a\uc740 \ucffc\ub9ac \ub9e4\uac1c \ubcc0\uc218 ''{0}''\uc785\ub2c8\ub2e4.
jqlc.parametertable.definevaluebyindex.wrongnumberofargs=JDO79235: \uc778\uc218\uc758 \uc218\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4.
jqlc.parametertable.definevaluebyindex.typemismatch=JDO79236: \ud638\ud658\ub418\uc9c0 \uc54a\ub294 \uc720\ud615\uc758 \uc2e4\uc81c \ub9e4\uac1c \ubcc0\uc218\uc785\ub2c8\ub2e4. ''{0}''\uc744(\ub97c) ''{1}''(\uc73c)\ub85c \ubcc0\ud658\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.

#############################################################################
#<optimizer>
# Message ID Range: JDO79400 - JDO79499
#############################################################################

jqlc.optimizer.staticfieldaccess.illegal=JDO79400: \ud074\ub798\uc2a4 ''{1}''\uc758 \uc815\uc801 \ud544\ub4dc ''{0}''\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
jqlc.optimizer.literal.invalid=JDO79401: {0} \ub9ac\ud130\ub7f4 ''{1}''\uc774(\uac00) \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4.

#############################################################################
#<code generation>
# Message ID Range: JDO79500 - JDO79599
#############################################################################

jqlc.codegeneration.fieldaccess.illegal=JDO79500: \uac1d\uccb4 ''{1}''\uc758 \ud544\ub4dc ''{0}''\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
jqlc.codegeneration.collectioncomparison.nonnull=JDO79501: \ubaa8\uc74c\uacfc null\uc774 \uc544\ub2cc \uac12\uc758 \ube44\uad50\ub294 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
jqlc.codegeneration.generic.unsupportedop=JDO79502: \uc791\uc5c5 ''{0}''\uc740(\ub294) \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
jqlc.codegeneration.substring.beginnegative=JDO79503: \ud558\uc704 \ubb38\uc790\uc5f4 \uba54\uc18c\ub4dc\uc758 \uc2dc\uc791 \uc0c9\uc778 ''{0}''\uc774(\uac00) \uc74c\uc218\uc785\ub2c8\ub2e4.
jqlc.codegeneration.substring.beginlargerend=JDO79504: \ud558\uc704 \ubb38\uc790\uc5f4 \uba54\uc18c\ub4dc\uc758 \uc2dc\uc791 \uc0c9\uc778 ''{0}''\uc774(\uac00) \uc885\ub8cc \uc0c9\uc778 ''{1}''\ubcf4\ub2e4 \ud07d\ub2c8\ub2e4.
jqlc.codegeneration.resultExpr.missingpkfields=JDO79505: COUNT \ud45c\ud604\uc2dd\uc740 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud45c\ud604\uc2dd \uc720\ud615 ''{0}''\uc740(\ub294) \uae30\ubcf8 \ud0a4 \ud544\ub4dc\uac00 \uc5c6\ub294 \uc9c0\uc18d\uc131\uc774 \uc788\ub294 \ud074\ub798\uc2a4\uc785\ub2c8\ub2e4.

#############################################################################
#<Miscellaneous>
# Message ID Range: JDO79600 - JDO79699
#############################################################################
# {0} - RetrieveDesc info
LOG_JQLCDumpRD=JDO79600: JQLC\uc5d0\uc11c RetrieveDesc {0}\uc744(\ub97c) \ub364\ud504\ud569\ub2c8\ub2e4.

# variable table

jqlc.variabletable.markconstraint.multiple=JDO79601: \ubcc0\uc218 ''{0}''\uc758 \ubcf5\uc218 \uc81c\uc57d \uc870\uac74\uc785\ub2c8\ub2e4.
jqlc.variabletable.checkconstraint.unused=JDO79602: \ubcc0\uc218 ''{0}''\uc774(\uac00) \uc815\uc758\ub418\uc5c8\uc9c0\ub9cc \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
jqlc.variabletable.checkconstraint.cycle=JDO79603: \ubcc0\uc218 ''{0}''\uc5d0 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\ub294 \uc21c\ud658 \uc81c\uc57d \uc870\uac74 \uc815\uc758\uac00 \uc788\uc2b5\ub2c8\ub2e4.
jqlc.variabletable.merge.different=JDO79604: \uac19\uc740 \ubcc0\uc218 ''{0}''\uc5d0 \ub2e4\ub978 \uc81c\uc57d \uc870\uac74\uc774 \uc788\uc2b5\ub2c8\ub2e4.


###############################################################################
# <NOI18N: These messages are used for JDOFatalInternalException. These are not
# for end user. There is no message ID.>
###############################################################################
#
# <NOI18N>
#
jqlc.jqlc.checkcandidates.nullpc=Persistence capable class of extent collection is null.

jqlc.parser.invalidunicodestr=JQLLexer.UNICODE_STR 

jqlc.parametertable.getvaluebyname.undefined=ParameterTable.getValueByName: undefined parameter {0}.
jqlc.parametertable.getvaluebyindex.wrongindex=ParameterTable.getValueByIndex: wrong index {0}.
jqlc.parametertable.definevaluebyindex.wrongindex=ParameterTable.defineValueByIndex: wrong index {0}.

jqlc.semantic.checkcandidateclass.unknowntype=Semantic.checkCandidateClass: unknown type {0}.
jqlc.semantic.analysedefinedidentifier.illegalident=Semantic.analyseDefinedIdentifier: illegal identifier definition {0}.
jqlc.semantic.getcollectionfield.missingchildren=Semantic.getCollectionField: invalid node structure children missing.

jqlc.optimizer.checkbinaryplusop.invalidtype=Optimizer.checkBinaryPlusOp: invalid type {0}.
jqlc.optimizer.checkbinaryminusop.invalidtype=Optimizer.checkBinaryMinusOp: invalid type {0}.
jqlc.optimizer.checkmultiplicationop.invalidtype=Optimizer.checkMultiplicationOp: invalid type {0}.
jqlc.optimizer.checkdivisionop.invalidtype=Optimizer.checkDivisionOp: invalid type {0}.
jqlc.optimizer.checkmodop.invalidtype=Optimizer.checkModOp: invalid type {0}.
jqlc.optimizer.checkunaryminusop.invalidtype=Optimizer.checkUnaryMinusOp: invalid type {0}.
jqlc.optimizer.getbigdecimalvalue.notnumber=Optimizer.getBigDecimalValue: expected number value {0}.
jqlc.optimizer.getbigintegervalue.notnumber=Optimizer.getBigIntegerValue: expected number value {0}.
jqlc.optimizer.isempty.requirecollection=Optimizer.isEmpty: requires collection value.

jqlc.codegeneration.generatesimplefieldvaluecomparison.invalidvalue=CodeGeneration.generateSimpleFieldValueComparison: invalid null value in relational operation.
jqlc.codegeneration.generateparametervaluecomparison.invalidvalue=CodeGeneration.generateParameterValueComparison: invalid null value in relational operation.
jqlc.codegeneration.getkeyfieldscomparisonbooleanop.invalidobj=CodeGeneration.getKeyFieldsComparisonBooleanOp: invalid object comparison operation {0}.
jqlc.codegeneration.filter.nonbooleanvalue=CodeGeneration.filter: invalid non boolean value {0}.
jqlc.codegeneration.primary.null=CodeGeneration.primary: invalid null value.

jqlc.variabletable.markused.varnotfound=VariableTable.markUsed variable {0} not found.
jqlc.variabletable.markused.multidep=VariableTable.markUsed multiple dependencies for variable {0} old: {1}, new: {2}.
jqlc.variabletable.markconstraint.varnotfound=VariableTable.markConstraint variable {0} not found.

jqlc.jdoqlparameterdeclarationparser.next.wrongtoken=ParameterDeclarationHelper.ParameterTypeIterator.next: wrong token type {0} expected PARAMETER_DEF node.

jqlc.queryvaluefetcher.getvalue.invalidparam=Invalid parameter index {0} parameter array has length {1}.
