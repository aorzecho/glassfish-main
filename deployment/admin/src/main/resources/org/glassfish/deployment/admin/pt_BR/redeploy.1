REDEPLOY(1)                                                        REDEPLOY(1)

NOME
       redeploy - reimplanta o componente especificado

SINOPSE
           redeploy [--help]
           --name component_name
           [--upload={true|false}]
           [--retrieve local_dirpath]
           [--dbvendorname dbvendorname]
           [--createtables={true|false}|--dropandcreatetables={true|false}]
           [--uniquetablenames={true|false}]
           [--deploymentplan deployment_plan]
           [--enabled={true|false}]
           [--generatermistubs={false|true}]
           [--contextroot context_root]
           [--precompilejsp={true|false}]
           [--verify={false|true}]
           [--virtualservers virtual_servers]
           [--availabilityenabled={false|true}]
           [--asyncreplication={true|false}]
           [--lbenabled={true|false}]
           [--keepstate={false|true}]
           [--libraries jar_file[,jar_file]*]
           [--target target]
           [--type pkg-type]
           [--properties(name=value)[:name=value]*]
           [file_archive|filepath]

DESCRIçãO
       O subcomando redeploy reimplanta uma aplicação enterprise, uma
       aplicação Web ou um módulo com base na especificação Enterprise
       JavaBeans (EJB) (módulo EJB), no módulo conector ou no módulo cliente
       da aplicação que já foi implantada ou já existe. O subcomando redeploy
       preserva as definições e outras opções com as quais a aplicação foi
       originalmente implantada. A aplicação já deve ter sido implantada. Caso
       contrário, ocorre um erro.

       Esse subcomando só é suportado no modo remoto.

OPçõES
       --help, -?
           Exibe o texto de ajuda do subcomando.

       --virtualservers
           Uma ou mais IDs de servidores virtuais. IDs múltiplas são separadas
           por vírgulas.

       --contextroot
           Válida apenas se o arquivo compactado for um módulo da Web. É
           ignorada para outros tipos de arquivo compactado, padrões para
           nomes de arquivo sem extensão.

       --precompilejsp
           Por default, essa opção não permite que o JSP seja pré-compilado
           durante a implantação. Em vez disso, JSPs são compilados durante o
           runtime. O default é false.

       --verify
           Se definido como verdadeiro e os pacotes verificadores necessários
           estão instalados a partir da Ferramenta de Atualização, a sintaxe e
           semântica do descritor de implantação são verificadas. O default é
           false.

       --name
           Nome do componente que pode ser implantado.

           O nome pode incluir um identificador de versão opcional, que segue
           o nome e é separado do nome por dois-pontos (:). O identificador de
           versão deve começar com uma letra ou número. Ela pode conter
           caracteres alfanuméricos e sublinhado (_), traço (-), e ponto (.).
           Para obter mais informações sobre versões de módulo e da aplicação,
           consulte "Module and Application Versions" no Oracle GlassFish
           Server Application Deployment Guide.

       --upload
           Especifica se o subcomando faz upload do arquivo no DAS. Na maioria
           das situações, esta opção pode ser omitida.

           Os valores válidos são:

           false
               O subcomando não faz upload do arquivo e tenta acessá-lo
               através do nome de arquivo especificado. Se o DAS não puder
               acessar o arquivo, o subcomando falhará.

               Por exemplo, o DAS pode estar sendo executado como um usuário
               diferente do que o usuário administrador e não tem acesso para
               leitura ao arquivo. Nesta situação, o subcomando falhará se a
               opção --upload for false.

           true
               O subcomando faz upload do arquivo no DAS por meio da conexão
               de rede.

           O valor default depende se o DAS está no host onde o subcomando é
           executado ou está em um host remoto.

           ·   Se o DAS está no host onde o subcomando é executado, o default
               é false.

           ·   Se o DAS está em um host remoto, o default é true.

           Se um diretório filepath for especificado, esta opção será
           ignorada.

       --retrieve
           Recupera o arquivo JAR fragmentado do cliente da máquina do
           servidor para o diretório local.

       --dbvendorname
           Especifica o nome do fornecedor do banco de dados para o qual
           tabelas são criadas. Os valores suportados incluem db2, mssql,
            oracle, derby, javadb, postgresql e sybase, case-insensitive. Se
           não for especificado, o valor do atributo database-vendor-name no
           glassfish-ejb-jar.xml é usado. Se nenhum valor for especificado, é
           feita uma conexão com o recurso especificado pelo subelemento
            jndi-name do elemento cmp-resource no arquivo
           glassfish-ejb-jar.xml , e o nome do fornecedor do banco de dados é
           lido. Se não for possível estabelecer a conexão, ou se o valor não
           for reconhecido, a conformidade com SQL-92 será presumida.

       --createtables
           Se especificado como verdadeiro, criará tabelas durante a
           implantação de uma aplicação com beans CMP não mapeados. Se
           especificado como falso, as tabelas não serão criadas. Se não for
           especificada, o valor da entrada create-tables-at-deploy no
           elemento cmp-resource do arquivo glassfish-ejb-jar.xml determina se
           as tabelas são ou não criadas. Nenhuma restrição única é criada
           para as tabelas.

       --dropandcreatetables
           Se especificado como verdadeiro quando o componente é reimplantado,
           as tabelas criadas pela implantação anterior são eliminadas antes
           da criação de novas tabelas. Aplica-se a aplicações implantadas com
           beans CMP não mapeados. Se especificado como falso, as tabelas não
           serão nem eliminadas nem criadas. Se não for especificado, as
           tabelas serão eliminadas se a entrada drop-tables-at-undeploy no
           elemento cmp-resource do arquivo glassfish-ejb-jar.xml estiver
           definida como verdadeira, e as novas tabelas serão criadas se a
           entrada create-tables-at-deploy no elemento cmp-resource do arquivo
            glassfish-ejb-jar.xml estiver definida como verdadeira.

       --uniquetablenames
           Garante nomes de tabela exclusivos para todos os beans e resulta em
           um código hash adicionado aos nomes das tabelas. Essa opção será
           útil se você tiver uma aplicação com nomes de beans que fazem
           distinção entre maiúsculas e minúsculas. Aplica-se a aplicações com
           beans CMP não mapeados.

       --deploymentplan
           Implanta o plano de implantação, que é um arquivo JAR que contém
           descritores do GlassFish Server. Especifique essa opção ao
           implantar um arquivo EAR puro. Um arquivo EAR puro é um EAR sem
           descritores do GlassFish Server.

       --enabled
           Permite aos usuários acessar a aplicação. Se esta opção for
           definida como false, os usuários não poderão acessar a aplicação.
           Essa opção ativa a aplicação na instância ou no cluster de destino
           especificado. Se você implantar no domain de destino, essa opção
           será ignorada, já que a implantação no domínio não implanta em uma
           instância ou cluster específico. O default é verdadeiro.

       --generatermistubs
           Se definido como true, fragmentos RMI-IIOP estáticos são gerados e
           colocados no client.jar. Se definido como false, os fragmentos não
           são gerados. O default é false.

       --availabilityenabled
           Essa opção controla se a alta disponibilidade está ativa para
           sessões Web e para checkpoint (SFSB) do bean de sessão de estado e
           para passivação potencial. Se esta opção estiver definida como
           falsa (default), todo os salvamentos de sessão Web e checkpoints
           SFSB serão desativados para a aplicação, a aplicação Web ou o
           módulo EJB especificado. Se esta opção estiver definida como
           verdadeira, a aplicação ou o módulo especificado será ativado para
           alta disponibilidade. Defina essa opção como verdadeira apenas se a
           alta disponibilidade estiver configurada e ativada em níveis mais
           altos, como os níveis do servidor e contêiner.

       --asyncreplication
           Essa opção controla se primeiro é feito o buffer e depois a
           replicação dos estados da sessão da Web e do SFSB, para os quais a
           alta disponibilidade está ativada, ao utilizar um thread assíncrono
           separado. Se definido como verdadeiro (default), o desempenho é
           melhorado, mas a disponibilidade é reduzida. Se a instância em que
           os estados são colocados em buffer, mas não ainda replicados a
           falhar, os estados serão perdidos. Se definido como falso, o
           desempenho será reduzido, mas a disponibilidade será garantida. Os
           estados não são colocados em buffer, mas imediatamente transmitidos
           para as outras instâncias do cluster.

       --lbenabled
           Essa opção controla se a aplicação implantada está disponível para
           balanceamento de carga. O default é verdadeiro.

       --keepstate
           Essa opção controla se as sessões Web, as instâncias SFSB e os
           timers EJB criados persistentemente são retidos entre as
           reimplantações.

           O default é falso. Esta opção somente é suportada na instância do
           servidor default, denominada servidor. Não é suportada e ignorada
           em nenhum outro destino.

           Algumas alterações em uma aplicação entre as reimplantações impedem
           que este recurso funcione apropriadamente. Por exemplo, não altere
           o conjunto de variáveis da instância na classe do bean SFSB.

           Para aplicações Web, este recurso somente é aplicável se no arquivo
           glassfish-web-app.xml o atributo persistence-type do elemento
           session-manager for file.

           Para instâncias do bean de sessão com estado, o tipo de
           persistência sem alta disponibilidade é definido no servidor (o
           atributo sfsb-persistence-type) e precisa ser definido como file,
           que é o default e o valor recomendado.

           Se qualquer sessão Web ativa, instância SFSB ou timer EJB falhar em
           ser preservado ou restaurado, nenhum deles estará disponível quando
           a reimplantação tiver sido concluída. Entretanto, a reimplantação
           continuará e uma advertência será registrada em log.

           Para preservar dados do estado ativo, o GlassFish Server serializa
           os dados e os salva na memória. Para restaurar os dados, o
           carregador de classe da aplicação recém-reimplantada desserializa
           todos os dados salvos anteriormente.

       --libraries
           Uma lista separada por vírgulas de arquivos JAR da biblioteca.
           Especifique os arquivos JAR da biblioteca com seus caminhos
           relativos ou absolutos. Especifique os caminhos relativos
           referentes aodomain-dir/lib/applibs. As bibliotecas são
           disponibilizadas para a aplicação na ordem especificada.

       --target
           Especifica o destino no qual você está implantando. Os valores
           válidos são:

           servidor
               Implanta o componente para a instância de servidor default
                server e é o valor default.

           domain
               Implanta o componente no domínio. Se domain for o destino para
               uma implantação inicial, a aplicação será implantada no
               domínio, mas nenhuma instância ou cluster do servidor fará
               referência à aplicação. Se o domínio for o destino para a
               reimplantação e a reconfiguração dinâmica estiver ativada para
               os clusters ou para as instâncias do servidor que referenciam a
               aplicação, os clusters ou instâncias do servidor que fazem a
               referência obterão automaticamente a nova versão da aplicação.
               Se a reimplantação e a configuração dinâmica estiverem
               desativadas, os clusters ou instâncias do servidor de
               referência não obterão a nova versão da aplicação até que as
               instâncias clusterizadas ou standalone do servidor sejam
               reiniciadas.

           cluster_name
               Implanta o componente em cada instância do servidor do cluster.

           instance_name
               Implanta o componente em uma determinada instância independente
               do servidor.

       --type
           O tipo de arquivo compactado que encapsula o componente que está
           sendo implantado. Os valores possíveis são:

           osgi
               O componente é encapsulado como um pacote OSGi Alliance.

           A opção --type é opcional. Se o componente for encapsulado como um
           arquivo compactado regular, omita essa opção.

       --properties ou --property
           Pares palavra-chave valor opcionais que especificam propriedades
           adicionais para a implantação. As propriedades disponíveis são
           determinadas pela implantação do componente que está sendo
           implantado ou reimplantado. A opção --properties e a opção
           --property são equivalentes. Você pode utilizar qualquer opção,
           independentemente do número de propriedades que especificar.

           Você pode especificar as seguintes propriedades para uma
           implantação:

           jar-signing-alias
               Especifica o alias para o certificado de segurança com o qual o
               arquivo JAR do contêiner do cliente da aplicação está assinado.
               O Java Web Start não irá executar código que requer permissões
               elevadas, a menos que ele resida em um arquivo JAR assinado com
               um certificado que o sistema do usuário confia. Para sua
               conveniência, o GlassFish Server assina o arquivo JAR
               automaticamente, utilizando o certificado com esse alias a
               partir do armazenamento de chave do domínio. O Java Web Start,
               em seguida, pergunta ao usuário se deve confiar no código e
               exibe as informações do certificado do GlassFish Server. Para
               assinar esse arquivo JAR com um certificado diferente, adicione
               o certificado ao armazenamento de chave do domínio e, em
               seguida, utilize essa propriedade. Por exemplo, você pode
               utilizar um certificado de uma autoridade confiável, o que
               evita o prompt do Java Web Start ou de sua própria empresa, que
               os usuários sabem que podem confiar. O default é s1as, o alias
               para o certificado de assinatura automática, criado para cada
               domínio.

           java-web-start-enabled
               Especifica se o acesso do Java Web Start é permitido para um
               módulo cliente da aplicação. O default é verdadeiro.

           compatibility
               Especifica a release do GlassFish Server com a qual deverá ter
               retrocompatibilidade em termos de requisitos de visibilidade
               JAR para aplicações. O único valor permitido é v2, que se
               refere a Sun Java System Servidor de Aplicações versão 2 ou Sun
               Java System Servidor de Aplicações versão 9.1 ou 9.1.1. A
               especificação da plataforma Java EE 6 impõe requisitos mais
               estritos que o Java EE 5, no qual os arquivos do JAR podem ser
               visíveis para diversos módulos em arquivos EAR.
               Especificamente, os clientes da aplicação não devem ter acesso
               a arquivos JAR EJB ou outros arquivos JAR no arquivo EAR, a
               menos que as referências utilizem os mecanismos EE Java padrão
               (extensões, por exemplo) ou o mecanismo biblioteca-diretório
               Java EE. Definir a propriedade como v2remove essas restrições
               Java EE 6.

           keepSessions={false|true}
               Precedido da opção --keepstate.

               Esta propriedade pode ser usada para especificar se as sessões
               ativas da aplicação que está sendo reimplantada serão
               preservadas e restauradas quando a reimplantação for
               completada. Aplica-se a sessões HTTP em um contêiner Web. O
               default é false.

               false
                   As sessões ativas da aplicação não são preservadas e
                   restauradas (default).

               true
                   As sessões ativas da aplicação são preservadas e
                   restauradas.

                   Se alguma sessão ativa da aplicação não for preservada ou
                   restaurada,
                    nenhuma das sessões será disponibilizada quando a
                   reimplantação for concluída. Entretanto, a reimplantação
                   continuará e uma advertência será registrada em log.

                   Para preservar sessões ativas, o GlassFish Server serializa
                   as sessões e as salva na memória. Para restaurar as
                   sessões, o carregador de classe da aplicação
                   recém-reimplantada desserializará todas as sessões
                   anteriormente salvas.

            preserveAppScopedResources
               Se definido como true, preserva quaisquer recursos de escopo de
               aplicação e os restaura durante a reimplantação. O default é
               false.

           Outras propriedades disponíveis são determinadas pela implantação
           do componente que está sendo reimplantado.

OPERANDOS
       file_archive|filepath
           O caminho para o arquivo compactado que contém a aplicação que está
           sendo reimplantada. O caminho pode ser relativo ou absoluto.

           O arquivo compactado pode estar nos seguintes formatos:

           ·   Um arquivo compactado, por exemplo, /export/JEE_apps/hello.war.

               Se a opção --upload for definida como true, este é o caminho
               para o arquivo implementável na máquina cliente local. Se a
               opção --upload for definida como false, este será o caminho
               absoluto para o arquivo na máquina servidora.

           ·   Um diretório que contém o formato detalhado do arquivo
               compactado implementável. Este é o caminho absoluto ao
               diretório na máquina do servidor.

               Se você especificar um diretório, a opção --upload será
               ignorada.

           A necessidade de utilizar esse operando depende de como a aplicação
           foi implantada originalmente:

           ·   Se a aplicação tiver sido implantada originalmente com base em
               um arquivo, o operando archive-path será necessário. O operando
               deve especificar um arquivo compactado.

           ·   Se a aplicação tiver sido implantada originalmente a partir de
               um diretório, o operando archive-path será opcional.

               O operando pode especificar um diretório ou arquivo compactado.

EXEMPLOS
       Exemplo 1, Reimplantando uma Aplicação Web com Base em um Arquivo
           Este exemplo reimplanta a aplicação Web hello no arquivo hello.war
           no diretório de trabalho atual. A aplicação foi implantada
           originalmente com base em um arquivo. As sessões ativas da
           aplicação serão preservadas e restauradas quando a reimplantação
           for concluída.

               asadmin> redeploy --name hello --properties keepSessions=true hello.war
               Application deployed successfully with name hello.
               Command redeploy executed successfully

       Exemplo 2, Reimplantando uma Aplicação Web com Base em um Diretório
           Este exemplo reimplanta a aplicação Web hellodir. A aplicação foi
           implantada originalmente com base em um diretório.

               asadmin> redeploy --name hellodir
               Application deployed successfully with name hellodir.
               Command redeploy executed successfully

STATUS DE SAíDA
       0
           subcomando executado com sucesso

       1
           erro ao executar o subcomando

CONSULTE TAMBéM
       implantar(1), undeploy(1), list-components(1)

       asadmin(1M)

       Oracle GlassFish Server Application Deployment Guide

                            23 de dezembro de 2010                 REDEPLOY(1)
