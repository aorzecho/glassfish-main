#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#EN add.resources=The add-resources command creates the resources named in the specified XML file. The xml_file_path is the path to the XML file containing the resources to  be  created.  The  DOCTYPE must be specified as in the resources.xml file.
add.resources=Il comando add-resources crea le risorse denominate nel file XML specificato. xml_file_path corrisponde al percorso del file XML contenente le risorse da creare. Il DOCTYPE deve essere specificato come nel file resources.xml.
#EN add.resources.target=Specifies the target  for  which you  are creating the resources.
add.resources.target=Specifica la destinazione per cui vengono create le risorse.
#EN add.resources.xml_file_name=The path to the XML file containing the resource(s) to be created. The XML file must reside in the <install-dir>/domains/domain1/config directory. If you specify a relative path or simply provide the name of the XML file, this command will prepend <install-dir>/domains/domain1/config  to this operand.
add.resources.xml_file_name=Percorso del file XML contenente la risorsa o le risorse da creare. Il file XML deve risiedere nella directory <dir-installazione>/domains/domain1/config. Se si specifica un percorso relativo o semplicemente si indica il nome del file XML, questo comando far\u00E0 precedere l'operando da <dir-installazione>/domains/domain1/config.
#EN add.resources.noJdbcConnectionPoolId=No pool name defined for JDBC Connection pool.
add.resources.noJdbcConnectionPoolId=Nessun nome di pool definito per il connection pool JDBC.
#EN add.resources.noDataSourceClassname=No datasourceclassname defined for JDBC Connection pool.
add.resources.noDataSourceClassname=Nessun nome classe origine dati definito per il connection pool JDBC.
#EN create.jdbc.resource=creates a JDBC resource with the specified JNDI name
create.jdbc.resource=crea una risorsa JDBC con il nome JNDI specificato
#EN create.jdbc.resource.connectionpoolid=The name of the JDBC connection pool. If two or more JDBC resource elements point to the same connection pool element, they use the same pool connection at runtime.
create.jdbc.resource.connectionpoolid=Nome del connection pool JDBC. Se due o pi\u00F9 elementi risorsa JDBC puntano allo stesso elemento connection pool, utilizzano la stessa connessione del pool in fase di esecuzione.
#EN create.jdbc.resource.description=Text providing descriptive details about the JDBC resource.
create.jdbc.resource.description=Testo in cui vengono forniti dettagli descrittivi sulla risorsa JDBC.
#EN create.jdbc.resource.jndi_name=The JNDI name of this JDBC resource.
create.jdbc.resource.jndi_name=Nome JNDI della risorsa JDBC.
#EN create.jdbc.resource.enabled=Determines whether the JDBC resource is enabled at runtime. The default value is true.
create.jdbc.resource.enabled=Determina se la risorsa JDBC \u00E8 abilitata in fase di esecuzione. Il valore predefinito \u00E8 true.
#EN create.jdbc.resource.success=JDBC resource {0} created successfully.
create.jdbc.resource.success=Creazione della risorsa JDBC {0} riuscita.
#EN create.jdbc.resource.duplicate=A resource named {0} already exists.
create.jdbc.resource.duplicate=Una risorsa denominata {0} esiste gi\u00E0.
#EN create.jdbc.resource.fail=Command create-jdbc-resource failed.
create.jdbc.resource.fail=Comando create-jdbc-resource non riuscito.
#EN create.jdbc.resource.connPoolNotFound=Attribute value (pool-name = {0}) is not found in list of jdbc connection pools.
create.jdbc.resource.connPoolNotFound=Valore di attributo (pool-name = {0}) non trovato nella lista di connection pool JDBC.
#EN delete.jdbc.resource=removes a JDBC resource with the specified JNDI name
delete.jdbc.resource=rimuove una risorsa JDBC con il nome JNDI specificato
#EN delete.jdbc.resource.jdbc_resource_name=The JNDI name of this JDBC resource to be removed.
delete.jdbc.resource.jdbc_resource_name=Nome JNDI della risorsa JDBC da rimuovere.
#EN delete.jdbc.resource.success=Command delete-jdbc-resource executed successfully.
delete.jdbc.resource.success=Esecuzione del comando ete-jdbc-resource riuscita.
#EN delete.jdbc.resource.fail=Command create-jdbc-resource failed.
delete.jdbc.resource.fail=Comando create-jdbc-resource non riuscito.
#EN delete.jdbc.resource.notfound=A JDBC resource named {0} does not exist.
delete.jdbc.resource.notfound=Una risorsa JDBC denominata {0} non esiste.
#EN delete.jdbc.resource.resource-ref.exist=jdbc-resource [ {0} ] is referenced in an instance/cluster target, Use delete-resource-ref on appropriate target.
delete.jdbc.resource.resource-ref.exist=Alla risorsa JDBC [{0}] si fa riferimento in una destinazione di istanza/cluster. Usare delete-resource-ref sulla destinazione appropriata.
#EN delete.jdbc.resource.multiple.resource-refs=jdbc-resource [ {0} ] is referenced in multiple instance/cluster targets, Use delete-resource-ref on appropriate target
delete.jdbc.resource.multiple.resource-refs=Alla risorsa JDBC [{0}] si fa riferimento in pi\u00F9 destinazioni di istanza/cluster. Usare delete-resource-ref sulla destinazione appropriata.
#EN delete.jdbc.resource.no.resource-ref=jdbc-resource [ {0} ] is not referenced in target [ {1} ]
delete.jdbc.resource.no.resource-ref=Alla risorsa JDBC [ {0} ] non si fa riferimento nella destinazione [ {1} ]
#EN list.jdbc.resources=gets all JDBC resources
list.jdbc.resources=ottiene tutte le risorse JDBC
#EN list.jdbc.resources.success=Command list-jdbc-resources executed successfully.
list.jdbc.resources.success=Esecuzione del comando list-jdbc-resources riuscita.
#EN list.jdbc.resources.fail=Command list-jdbc-resources failed.
list.jdbc.resources.fail=Comando list-jdbc-resources non riuscito.
#EN list.jdbc.resources.empty=Nothing to list.
list.jdbc.resources.empty=Nessun elemento da elencare.

#EN create.jdbc.connection.pool=registers the JDBC connection pool
create.jdbc.connection.pool=registra il connection pool JDBC
#EN create.jdbc.connection.pool.datasourceClassname=The name of the vendor\u2014supplied JDBC datasource resource manager.
create.jdbc.connection.pool.datasourceClassname=Nome del Resource Manager dell'origine dati JDBC specificato dal fornitore.
#EN create.jdbc.connection.pool.resType=The interface that the datasource class implements. Must be one of javax.sql.DataSource, javax.sql.ConnectionPoolDataSource or javax.sql.XADataSource. It leads to an error when this option has a legal value and the indicated interface is not implemented by the datasource class. This option has no default value.
create.jdbc.connection.pool.resType=Interfaccia implementata dalla classe dell'origine dati. Deve essere javax.sql.DataSource, javax.sql.ConnectionPoolDataSource o javax.sql.XADataSource. Causa un errore se l'opzione contiene un valore valido e l'interfaccia indicata non \u00E8 implementata dalla classe dell'origine dati. Per l'opzione non \u00E8 previsto un valore predefinito.
#EN create.jdbc.connection.pool.steadyPoolSize=The minimum and initial number of connections maintained in the pool. The default value is 8.
create.jdbc.connection.pool.steadyPoolSize=Numero minimo e iniziale di connessioni mantenute nel pool. Il valore predefinito \u00E8 8.
#EN create.jdbc.connection.pool.maxPoolSize=The maximum number of connections that can be created. The default value is 32.
create.jdbc.connection.pool.maxPoolSize=Numero massimo di connessioni che \u00E8 possibile creare. Il valore predefinito \u00E8 32.
#EN create.jdbc.connection.pool.maxWait=The amount of time a caller will wait before a connection timeout is sent. The default is 60 seconds. A value of 0 forces the caller to wait indefinitely.
create.jdbc.connection.pool.maxWait=Tempo di attesa del chiamante prima dell'invio di un timeout di connessione. Il valore predefinito \u00E8 60 secondi. Il valore 0 indica che il chiamante pu\u00F2 restare in attesa a tempo indeterminato.
#EN create.jdbc.connection.pool.poolResize=Quantity by which the pool will scale-up or scale-down the number of connections. Scale-up: When the pool has no free connections, pool will scale-up by this quantity. Scale-down: All the invalid and idle connections are removed, sometimes resulting in removing connections of quantity greater than this value. Steadypoolsize will be ensured. Possible values are from 0 to MAX_INTEGER. The default value is 2.
create.jdbc.connection.pool.poolResize=Incremento o decremento che il pool adotter\u00E0 per il numero di connessioni. Incremento: quando il pool non ha connessioni libere, aumenta il numero di questa quantit\u00E0. Decremento: tutte le connessioni non valide e inattive vengono rimosse, a volte comportando la rimozione di un numero di connessioni maggiore di questo valore. La dimensione del pool verr\u00E0 mantenuta costante. I valori possibili sono compresi tra 0 e MAX_INTEGER. Il valore predefinito \u00E8 2.
#EN create.jdbc.connection.pool.idleTimeout=The maximum time, in seconds, that a connection can remain idle in the pool. After this time, the implementation can close this connection. This timeout value must be kept shorter than the server side timeout value to prevent the accumulation of unusable connections in the application. The default value is 300.
create.jdbc.connection.pool.idleTimeout=Durata massima, in secondi, dell'inattivit\u00E0 di una connessione nel pool. Dopo questo periodo l'implementazione pu\u00F2 chiudere la connessione. Il valore di questo timeout deve essere pi\u00F9 breve del valore di timeout lato server in modo da impedire l'accumulo di connessioni non utilizzabili nell'applicazione. Il valore predefinito \u00E8 300.
#EN create.jdbc.connection.pool.initSql=Used to specify a SQL string by the user, to be executed whenever a connection is created from the pool (not the connections that are reused). This is executed to initialize the state of the connection. This is an optional attribute and should carry a value when a initialization SQL is to be executed.
create.jdbc.connection.pool.initSql=Usato per specificare una stringa SQL da parte dell'utente, da eseguire ogni volta che viene creata una connessione dal pool (escludendo le connessioni che vengono riutilizzate). L'esecuzione consente di inizializzare lo stato della connessione. Attributo facoltativo che deve avere un valore quando deve essere eseguito un comando SQL di inizializzazione.
#EN create.jdbc.connection.pool.isolationLevel=The transaction-isolation-level on the pooled database connections. This option does not have a default value. If not specified, the pool operates with the default isolation level that the JDBC driver provides. You can set a desired isolation level using one of the standard transaction isolation levels: read-uncommitted, read-committed, repeatable-read, serializable. Applications that change the isolation level on a pooled connection programmatically risk polluting the pool. This could lead to program errors.
create.jdbc.connection.pool.isolationLevel=Livello di isolamento della transazione nelle connessioni di database del pool. Per l'opzione non \u00E8 previsto un valore predefinito. Se tale opzione non viene specificata, il pool funziona con il livello di isolamento predefinito fornito dal driver JDBC. \u00C8 possibile impostare il livello di isolamento delle transazioni desiderato tra quelli standard: read-uncommitted, read-committed, repeatable-read, serializable. Le applicazioni che cambiano livello di isolamento per una connessione del pool a livello di programmazione rischiano di alterare il pool stesso e questo pu\u00F2 causare errori di programma.
#EN create.jdbc.connection.pool.isIsolationGuaranteed=This is applicable only when a particular isolation level is specified for transaction-isolation-level. The default value is true. This option assures that every time a connection is obtained from the pool, isolation level is set to the desired value. This could have some performance impact on some JDBC drivers. Administrators can set this to false when the application does not change --isolationlevel before returning the connection.
create.jdbc.connection.pool.isIsolationGuaranteed=Applicabile solo quando viene specificato un determinato livello di isolamento per transaction-isolation-level. Il valore predefinito \u00E8 true. Questa opzione garantisce che il livello di isolamento venga impostato sul valore desiderato ogni volta che si ottiene una connessione dal pool. Ci\u00F2 pu\u00F2 incidere sulle prestazioni di alcuni driver JDBC. Gli amministratori possono impostare questa opzione su false quando l'applicazione non cambia --isolationlevel prima di restituire la connessione.
#EN create.jdbc.connection.pool.isConnectValidatereq=If set to true, connections are validated or checked to see if they are usable before giving out to the application. The default value is false.
create.jdbc.connection.pool.isConnectValidatereq=Se si imposta su true, le connessioni vengono convalidate o verificate per stabilire se sono utilizzabili prima di essere fornite all'applicazione. Il valore predefinito \u00E8 false.
#EN create.jdbc.connection.pool.validationMethod=The name of the validation table used to perform a query to validate a connection. Valid settings are: auto-commit, meta-data, or table. The default value is auto-commit.
create.jdbc.connection.pool.validationMethod=Nome della tabella di convalida utilizzata per eseguire una query per convalidare una connessione. Le impostazioni valide sono: auto-commit, meta-data o table. Il valore predefinito \u00E8 auto-commit.
#EN create.jdbc.connection.pool.validationTable=The name of the validation table used to perform a query to validate a connection.
create.jdbc.connection.pool.validationTable=Nome della tabella di convalida utilizzata per eseguire una query per convalidare una connessione.
#EN create.jdbc.connection.pool.failConnection=If set to true, all connections in the pool must be closed when a single validation check fails. The default value is false. One attempt is made to re-establish failed connections.
create.jdbc.connection.pool.failConnection=Se si imposta su true, tutte le connessioni del pool devono essere chiuse quando un singolo controllo di convalida ha esito negativo. Il valore predefinito \u00E8 false. Viene effettuato un tentativo di ristabilire le connessioni non riuscite.
#EN create.jdbc.connection.pool.allowNonComponentCallers=A pool with this property set to true, can be used by non-J2EE components, that is, components other than EJBs or Servlets. The returned connection is enlisted automatically with the transaction context obtained from the transaction manager. 
create.jdbc.connection.pool.allowNonComponentCallers=Un pool in cui la propriet\u00E0 \u00E8 impostata su true pu\u00F2 essere utilizzato da componenti non J2EE, ovvero da componenti diversi da EJB e servlet. La connessione restituita viene integrata automaticamente nel contesto di transazione ottenuto dal Transaction Manager. 
#EN create.jdbc.connection.pool.nonTransactionalConnections=A pool with this property set to true returns non-transactional connections. This connection does not get automatically enlisted with the transaction manager.
create.jdbc.connection.pool.nonTransactionalConnections=Un pool con questa propriet\u00E0 impostata su true restituisce connessioni non transazionali. Tale connessione non viene integrata automaticamente nel Transaction Manager.
#EN create.jdbc.connection.pool.validateAtMostOncePeriod=Used to set the time-interval within which a connection is validated atmost once. Default is 0 which implies that it is not enabled.
create.jdbc.connection.pool.validateAtMostOncePeriod=Utilizzato per impostare l'intervallo di tempo entro il quale una connessione viene convalidata al massimo una volta. Il valore predefinito \u00E8 0, che indica che non \u00E8 abilitato.
#EN create.jdbc.connection.pool.leakTimeout=To aid user in detecting potential connection leaks by the application. When a connection is not returned back to the pool by the application within the specified period, it is assumed to be a potential leak and stack trace of the caller will be logged. Default is 0, which implies there is no leak detection, by default. A positive non-zero value turns on leak detection. Note however that, this attribute only detects if there is a connection leak. The connection can be reclaimed only if connection-leak-reclaim is set to true.
create.jdbc.connection.pool.leakTimeout=Per aiutare l'utente a rilevare possibili perdite di connessione da parte dell'applicazione. Quando una connessione non viene restituita al pool dall'applicazione entro il periodo specificato, si presume che sia una potenziale perdita e viene registrato uno stack trace del chiamante. Il valore predefinito \u00E8 0, che implica l'assenza di rilevamento di perdite per impostazione predefinita. Un valore positivo diverso da zero attiva il rilevamento delle perdite. Si noti tuttavia che questo attributo consente solo di rilevare se \u00E8 presente una perdita di connessione. La connessione pu\u00F2 essere recuperata solo se connection-leak-reclaim \u00E8 impostato su true.
#EN create.jdbc.connection.pool.leakReclaim=If enabled, connection will be reusable (put back into pool) after connection-leak-timeout-in-seconds occurs. Default value is false.
create.jdbc.connection.pool.leakReclaim=Se abilitato, la connessione \u00E8 riutilizzabile (reinserita nel pool) dopo il verificarsi di connection-leak-timeout-in-seconds. Il valore predefinito \u00E8 false.
#EN create.jdbc.connection.pool.creationRetryAttempts=The number of attempts to create a new connection. Default is 0, which implies no retries.
create.jdbc.connection.pool.creationRetryAttempts=Il numero di tentativi per la creazione di una nuova connessione. Il valore predefinito \u00E8 0, che implica l'assenza di nuovi tentativi.
#EN create.jdbc.connection.pool.creationRetryInterval=The time interval between retries while attempting to create a connection. Default is 10 seconds. Effective when connection-creation-retry-attempts is greater than 0.
create.jdbc.connection.pool.creationRetryInterval=L'intervallo di tempo tra tentativi durante il tentativo di creare una connessione. Il valore predefinito \u00E8 10 secondi. Attivo quando connection-creation-retry-attempts \u00E8 maggiore di 0.
#EN create.jdbc.connection.pool.statementTimeout=Sets the timeout property of a connection to enable termination of abnormally long running queries. Default value of -1 implies that it is not enabled.
create.jdbc.connection.pool.statementTimeout=Consente di impostare la propriet\u00E0 di timeout di una connessione per abilitare l'interruzione di query di durata anomala. Il valore predefinito di -1 implica che la propriet\u00E0 non \u00E8 abilitata.
#EN create.jdbc.connection.pool.lazyConnectionEnlistment=Enlist a resource to the transaction only when it is actually used in a method, which avoids enlistment of connections that are not used in a transaction. This also prevents unnecessary enlistment of connections cached in the calling components. Default value is false.
create.jdbc.connection.pool.lazyConnectionEnlistment=Inserire una risorsa nella transazione solo quando viene effettivamente utilizzata in un metodo, in modo da evitare la partecipazione alla transazione delle connessioni non utilizzate. Ci\u00F2 evita inoltre l'impegno non necessario di connessioni nella cache nei componenti chiamanti. Il valore predefinito \u00E8 false.
#EN create.jdbc.connection.pool.lazyConnectionAssociation=Connections are lazily associated when an operation is performed on them. Also, they are disassociated when the transaction is completed and a component method ends, which helps reuse of the physical connections. Default value is false.
create.jdbc.connection.pool.lazyConnectionAssociation=Le connessioni vengono associate in modo ritardato quando vi si esegue un'operazione. Ne viene inoltre annullata l'associazione quando la transazione \u00E8 completa e un metodo di un componente termina, in modo da facilitare il riutilizzo delle connessioni fisiche. Il valore predefinito \u00E8 false.
#EN create.jdbc.connection.pool.associateWithThread=Associate connection(s) with a thread such that when the same thread is in need of a connection, it can reuse the connections already associated with that thread, thereby not incurring the overhead of getting a connection from the pool. Default value is false. (see also associate-with-thread-connections-count)
create.jdbc.connection.pool.associateWithThread=Associare la connessione o le connessioni a un thread in modo tale che, quando occorre una connessione, lo stesso thread possa riutilizzare le connessioni gi\u00E0 associate, senza necessit\u00E0 di ottenere una connessione dal pool. Il valore predefinito \u00E8 false (vedere anche associate-with-thread-connections-count).
#EN create.jdbc.connection.pool.associateWithThreadConnectionsCount=Maximum number of connections to associate with a thread. Default value is 1. Takes effect only when associate-with-thread is true.
create.jdbc.connection.pool.associateWithThreadConnectionsCount=Numero massimo di connessioni da associare a un thread. Il valore predefinito \u00E8 1. Effettivo solo quando associate-with-thread \u00E8 impostato su true.
#EN create.jdbc.connection.pool.driverClassname=Name of the vendor supplied JDBC driver class name. The specified driver should implement the java.sql.Driver interface.
create.jdbc.connection.pool.driverClassname=Nome della classe di driver JDBC specificata dal fornitore. Il driver specificato deve implementare l'interfaccia java.sql.Driver.
#EN create.jdbc.connection.pool.matchConnections=To switch on/off connection matching for the pool. It can be set to false if the administrator knows that the connections in the pool will always be homogeneous and hence a connection picked from the pool need not be matched by the resource adapter. Default value is false.
create.jdbc.connection.pool.matchConnections=Consente di attivare/disattivare la corrispondenza delle connessioni per il pool. Pu\u00F2 essere impostato su false se l'amministratore sa che le connessioni del pool saranno sempre omogenee e che quindi non \u00E8 necessario che una connessione selezionata dal pool debba essere abbinata dal Resource Adapter. Il valore predefinito \u00E8 false.
#EN create.jdbc.connection.pool.maxConnectionUsageCount=When specified, connections will be re-used by the pool for the specified number of times after which it will be closed. This is useful for instance, to avoid statement-leaks. Default value is 0, which implies the feature is not enabled.
create.jdbc.connection.pool.maxConnectionUsageCount=Se specificato, le connessioni vengono riutilizzate dal pool per il numero di volte specificato, dopo di che viene chiuso. Ci\u00F2 \u00E8 utile ad esempio per evitare perdite di istruzioni. Il valore predefinito \u00E8 0, che implica che la funzione non \u00E8 abilitata.
#EN create.jdbc.connection.pool.ping=A pool with this attribute set to true is pinged during the pool creation or reconfiguration to identify and warn of any erroneous values for the its attributes. Default value of this attribute is false.
create.jdbc.connection.pool.ping=Un pool con questo attributo impostato su true riceve un ping durante la creazione o riconfigurazione del pool per identificare e segnalare eventuali valori errati per i relativi attributi. Il valore predefinito di questo attributo \u00E8 false.
#EN create.jdbc.connection.pool.pooling=When set to false, this attribute disables connection pooling. Default value of this attribute is true.
create.jdbc.connection.pool.pooling=Se viene impostato su false, questo attributo disabilita la funzione di connection pooling. Il valore predefinito \u00E8 true.
#EN create.jdbc.connection.pool.sqlTraceListeners=Used to set if the SQL statements executed by applications need to be traced. Aids administrators in analysing the statements. Multiple listeners can be specified as comma separated list of listener implementation class names.
create.jdbc.connection.pool.sqlTraceListeners=Usato per impostare il trace delle istruzioni SQL eseguite dalle applicazioni. \u00C8 di ausilio agli amministratori per l'analisi delle istruzioni. \u00C8 possibile specificare pi\u00F9 listener come lista di valori separati da virgole di nomi di classi di implementazione di listener.
#EN create.jdbc.connection.pool.statementCachesize=Used to set the number of statements to be cached using the default caching mechanism (Least Recently Used). Default value of 0 implies the statement caching is not enabled.
create.jdbc.connection.pool.statementCachesize=Utilizzato per impostare il numero di istruzioni da inserire nella cache mediante il meccanismo di inserimento nella cache predefinito (Utilizzato meno di recente). Il valore predefinito di 0 implica che l'inserimento delle istruzioni nella cache non \u00E8 abilitato.
#EN create.jdbc.connection.pool.wrapJdbcObjects=When set to true, application will get wrapped jdbc objects for Statement, PreparedStatement, CallableStatement, ResultSet, DatabaseMetaData. Defaults to true.
create.jdbc.connection.pool.wrapJdbcObjects=Se impostato su true, l'applicazione ottiene oggetti JDBC sottoposti a wrapping per Statement, PreparedStatement, CallableStatement, ResultSet, DatabaseMetaData. Il valore predefinito \u00E8 true.
#EN create.jdbc.connection.pool.validationClassname=Used to set the custom validation implementation class name implemented by the user. This parameter is mandatory if the connection-validation-type is set to custom-validation. The class name provided must be accessible to the application server.
create.jdbc.connection.pool.validationClassname=Utilizzato per impostare il nome della classe di implementazione di convalida personalizzata implementato dall'utente. Questo parametro \u00E8 obbligatorio se connection-validation-type \u00E8 impostato su custom-validation. Il nome della classe fornito deve essere accessibile all'application server.
#EN create.jdbc.connection.pool.description=Text providing details about the specified JDBC connection pool.
create.jdbc.connection.pool.description=Testo in cui vengono forniti dettagli relativi al connection pool JDBC specificato.
#EN create.jdbc.connection.pool.property=Optional attribute name/value pairs for configuring the connection pool.
create.jdbc.connection.pool.property=Coppie di nome/valore di attributo facoltative per la configurazione del connection pool.
#EN create.jdbc.connection.pool.jdbc_connection_pool_id=The name of the JDBC connection pool to be created.
create.jdbc.connection.pool.jdbc_connection_pool_id=Nome del connection pool JDBC da creare.
#EN create.jdbc.connection.pool.success=JDBC connection pool {0} created successfully.
create.jdbc.connection.pool.success=Creazione del connection pool JDBC {0} riuscita.
#EN create.jdbc.connection.pool.fail=JDBC connection pool {0} creation failed. {1}
create.jdbc.connection.pool.fail=Creazione del connection pool JDBC {0} non riuscita. {1}
#EN create.jdbc.connection.pool.duplicate=A resource named {0} already exists.
create.jdbc.connection.pool.duplicate=Una risorsa denominata {0} esiste gi\u00E0.
#EN create.jdbc.connection.pool.validationtable_required=--validationtable is required if --validationmethod=table and --isconnectvalidatereq=true.
create.jdbc.connection.pool.validationtable_required=--validationtable \u00E8 necessario se --validationmethod=table e --isconnectvalidatereq=true.
#EN delete.jdbc.connection.pool=removes the specified JDBC connection pool
delete.jdbc.connection.pool=rimuove il connection pool JDBC specificato
#EN delete.jdbc.connection.pool.cascade=If the option is set to true, all the JDBC resources associated with the pool, apart from the pool itself, are deleted. When set to false, the deletion of pool fails if any resources are associated with the pool. Resources must be deleted explicitly or the option must be set to true. By default, the option is false.
delete.jdbc.connection.pool.cascade=Se l'opzione viene impostata su true, vengono eliminate tutte le risorse JDBC associate al pool, tranne quest'ultimo. Se l'opzione viene impostata su false, l'eliminazione del pool non riesce se al pool sono associate risorse. Le risorse devono essere eliminate in modo esplicito oppure l'opzione deve essere impostata su true. Per impostazione predefinita, l'opzione \u00E8 false.
#EN delete.jdbc.connection.pool.jdbc_connection_pool_id=The name of the JDBC resource to be removed.
delete.jdbc.connection.pool.jdbc_connection_pool_id=Nome della risorsa JDBC da rimuovere.
#EN delete.jdbc.connection.pool.success=Command delete-jdbc-connection pool executed successfully.
delete.jdbc.connection.pool.success=Esecuzione del comando delete-jdbc-connection pool riuscita.
#EN delete.jdbc.connection.pool.fail=Command delete-jdbc-connection-pool failed.
delete.jdbc.connection.pool.fail=Comando delete-jdbc-connection-pool non riuscito.
#EN delete.jdbc.connection.pool.notfound=A JDBC connection pool named {0} does not exist.
delete.jdbc.connection.pool.notfound=Non esiste un connection pool JDBC denominato {0}.
#EN delete.jdbc.connection.pool.noJndiName=No id defined for JDBC Connection pool.
delete.jdbc.connection.pool.noJndiName=Nessun ID definito per il connection pool JDBC.
#EN delete.jdbc.connection.pool.pool_in_use=Some jdbc resources or persistence manager factory resources are referencing this connection pool. Use 'cascade' option to delete them as well.
delete.jdbc.connection.pool.pool_in_use=Alcune risorse JDBC o risorse factory del Persistence Manager fanno riferimento a questo connection pool. Utilizzare l'opzione 'cascade' per eliminarle.
#EN list.jdbc.connection.pools=lists all JDBC connection pools
list.jdbc.connection.pools=elenca tutti i connection pool JDBC
#EN list.jdbc.connection.pools.success=Command list-jdbc-connection-pools executed successfully.
list.jdbc.connection.pools.success=Esecuzione del comando list-jdbc-connection-pools riuscita.
#EN list.jdbc.connection.pools.fail=Command list-jdbc-connection-pools failed
list.jdbc.connection.pools.fail=Comando list-jdbc-connection-pools non riuscito
#EN list.jdbc.connection.pools.empty=Nothing to list.
list.jdbc.connection.pools.empty=Nessun elemento da elencare.
#EN ping.create.jdbc.connection.pool.fail=Attempting to ping during JDBC Connection Pool Creation : {0} - Failed.
ping.create.jdbc.connection.pool.fail=Tentativo non riuscito di eseguire il ping durante la creazione del connection pool JDBC: {0}.
#EN ping.create.jdbc.connection.pool.success=Attempting to ping during JDBC Connection Pool Creation : {0} - Succeeded.
ping.create.jdbc.connection.pool.success=Tentativo riuscito di eseguire il ping durante la creazione del connection pool JDBC: {0}.
