#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2012 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#


#EN add.resources=The add-resources command creates the resources named in the specified XML file. The xml_file_path is the path to the XML file containing the resources to  be  created.  The  DOCTYPE must be specified as in the resources.xml file.
add.resources=Der Befehl "add-resources" erstellt die in der angegebenen XML-Datei genannten Ressourcen. Der xml-Datei-Pfad ist der Pfad zu der XML-Datei, die die zu erstellenden Ressourcen enth\u00E4lt. Der DOCTYPE muss so wie in der Datei resources.xml angegeben werden.
#EN add.resources.target=Specifies the target  for  which you  are creating the resources.
add.resources.target=Gibt das Ziel an, f\u00FCr das Sie die Ressourcen erstellen.
#EN add.resources.xml_file_name=The path to the XML file containing the resource(s) to be created. The XML file must reside in the <install-dir>/domains/domain1/config directory. If you specify a relative path or simply provide the name of the XML file, this command will prepend <install-dir>/domains/domain1/config  to this operand.
add.resources.xml_file_name=Der Pfad zu der XML-Datei mit der/den zu erstellenden Ressource(n). Die XML-Datei muss sich im Verzeichnis <Installationsverzeichnis>/domains/domain1/config befinden. Wenn Sie einen relativen Pfad oder einfach den Namen der XML-Datei angeben, stellt dieser Befehl dem Operanden <Installationsverzeichnis>/domains/domain1/config voran.
#EN add.resources.noJdbcConnectionPoolId=No pool name defined for JDBC Connection pool.
add.resources.noJdbcConnectionPoolId=Kein Poolname f\u00FCr den JDBC-Connection Pool definiert.
#EN add.resources.noDataSourceClassname=No datasourceclassname defined for JDBC Connection pool.
add.resources.noDataSourceClassname=Kein datasourceclassname f\u00FCr den JDBC-Connection Pool definiert.
#EN create.jdbc.resource=creates a JDBC resource with the specified JNDI name
create.jdbc.resource=erstellt eine JDBC-Ressource mit dem angegebenen JNDI-Namen
#EN create.jdbc.resource.connectionpoolid=The name of the JDBC connection pool. If two or more JDBC resource elements point to the same connection pool element, they use the same pool connection at runtime.
create.jdbc.resource.connectionpoolid=Der Name des JDBC-Connection Pools. Wenn zwei oder mehr JDBC-Ressourcenelemente auf dasselbe Connection Poolelement verweisen, verwenden sie w\u00E4hrend der Laufzeit dieselbe Poolverbindung.
#EN create.jdbc.resource.description=Text providing descriptive details about the JDBC resource.
create.jdbc.resource.description=Text, der Beschreibungsdetails zur JDBC-Ressource angibt.
#EN create.jdbc.resource.jndi_name=The JNDI name of this JDBC resource.
create.jdbc.resource.jndi_name=Der JNDI-Name dieser JDBC-Ressource.
#EN create.jdbc.resource.enabled=Determines whether the JDBC resource is enabled at runtime. The default value is true.
create.jdbc.resource.enabled=Legt fest, ob die JDBC-Ressource w\u00E4hrend der Laufzeit aktiviert ist. Der Standardwert ist "True".
#EN create.jdbc.resource.success=JDBC resource {0} created successfully.
create.jdbc.resource.success=JDBC-Ressource {0} erfolgreich erstellt.
#EN create.jdbc.resource.duplicate=A resource named {0} already exists.
create.jdbc.resource.duplicate=Eine Ressource mit dem Namen {0} ist bereits vorhanden.
#EN create.jdbc.resource.fail=Command create-jdbc-resource failed.
create.jdbc.resource.fail=Befehl "create-jdbc-resource" nicht erfolgreich.
#EN create.jdbc.resource.connPoolNotFound=Attribute value (pool-name = {0}) is not found in list of jdbc connection pools.
create.jdbc.resource.connPoolNotFound=Attributwert (pool-name = {0}) wurde nicht in der Liste der JDBC-Connection Pools gefunden.
#EN delete.jdbc.resource=removes a JDBC resource with the specified JNDI name
delete.jdbc.resource=entfernt eine JDBC-Ressource mit dem angegebenen JNDI-Namen
#EN delete.jdbc.resource.jdbc_resource_name=The JNDI name of this JDBC resource to be removed.
delete.jdbc.resource.jdbc_resource_name=Der JNDI-Name der zu entfernenden JDBC-Ressource.
#EN delete.jdbc.resource.success=Command delete-jdbc-resource executed successfully.
delete.jdbc.resource.success=Befehl "delete-jdbc-resource" erfolgreich ausgef\u00FChrt.
#EN delete.jdbc.resource.fail=Command create-jdbc-resource failed.
delete.jdbc.resource.fail=Befehl "create-jdbc-resource" nicht erfolgreich.
#EN delete.jdbc.resource.notfound=A JDBC resource named {0} does not exist.
delete.jdbc.resource.notfound=Eine JDBC-Ressource mit dem Namen {0} ist nicht vorhanden.
#EN delete.jdbc.resource.resource-ref.exist=jdbc-resource [ {0} ] is referenced in an instance/cluster target, Use delete-resource-ref on appropriate target.
delete.jdbc.resource.resource-ref.exist=jdbc-resource [ {0} ] wird in einem Instanz/Cluster-Ziel referenziert. Verwenden Sie delete-resource-ref auf dem entsprechenden Ziel.
#EN delete.jdbc.resource.multiple.resource-refs=jdbc-resource [ {0} ] is referenced in multiple instance/cluster targets, Use delete-resource-ref on appropriate target
delete.jdbc.resource.multiple.resource-refs=jdbc-resource [ {0} ] wird in mehreren Instanz/Cluster-Zielen referenziert; verwenden Sie delete-resource-ref auf dem entsprechenden Ziel
#EN delete.jdbc.resource.no.resource-ref=jdbc-resource [ {0} ] is not referenced in target [ {1} ]
delete.jdbc.resource.no.resource-ref=jdbc-resource [ {0} ] wird nicht in Ziel [ {1} ] referenziert
#EN list.jdbc.resources=gets all JDBC resources
list.jdbc.resources=ruft alle JDBC-Ressourcen ab
#EN list.jdbc.resources.success=Command list-jdbc-resources executed successfully.
list.jdbc.resources.success=Befehl "list-jdbc-resources" erfolgreich ausgef\u00FChrt.
#EN list.jdbc.resources.fail=Command list-jdbc-resources failed.
list.jdbc.resources.fail=Befehl "list-jdbc-resources" nicht erfolgreich ausgef\u00FChrt.
#EN list.jdbc.resources.empty=Nothing to list.
list.jdbc.resources.empty=Nichts aufzulisten.

#EN create.jdbc.connection.pool=registers the JDBC connection pool
create.jdbc.connection.pool=registriert den JDBC-Connection Pool
#EN create.jdbc.connection.pool.datasourceClassname=The name of the vendor\u2014supplied JDBC datasource resource manager.
create.jdbc.connection.pool.datasourceClassname=Der Name des vom Hersteller bereitgestellten JDBC-Datenquellen-Ressourcenmanagers.
#EN create.jdbc.connection.pool.resType=The interface that the datasource class implements. Must be one of javax.sql.DataSource, javax.sql.ConnectionPoolDataSource or javax.sql.XADataSource. It leads to an error when this option has a legal value and the indicated interface is not implemented by the datasource class. This option has no default value.
create.jdbc.connection.pool.resType=Die Schnittstelle, die die Datenquellenklasse implementiert. Muss eines der folgenden Elemente sein: javax.sql.DataSource, javax.sql.ConnectionPoolDataSource oder javax.sql.XADataSource. Ein Fehler tritt auf, wenn diese Option einen zul\u00E4ssigen Wert aufweist und die angegebene Schnittstelle nicht von der Datenquellenklasse implementiert wird. F\u00FCr diese Option gibt es keinen Standardwert.
#EN create.jdbc.connection.pool.steadyPoolSize=The minimum and initial number of connections maintained in the pool. The default value is 8.
create.jdbc.connection.pool.steadyPoolSize=Die minimale und urspr\u00FCngliche Anzahl der Verbindungen, die im Pool beibehalten werden. Der Standardwert ist 8.
#EN create.jdbc.connection.pool.maxPoolSize=The maximum number of connections that can be created. The default value is 32.
create.jdbc.connection.pool.maxPoolSize=Die maximale Anzahl der Verbindungen, die erstellt werden k\u00F6nnen. Der Standardwert lautet 32.
#EN create.jdbc.connection.pool.maxWait=The amount of time a caller will wait before a connection timeout is sent. The default is 60 seconds. A value of 0 forces the caller to wait indefinitely.
create.jdbc.connection.pool.maxWait=Die Zeit, die ein Caller wartet, bevor ein Verbindungs-Timeout gesendet wird. Der Standardwert sind 60 Sekunden. Der Wert 0 zwingt den Caller, unbestimmte Zeit zu warten.
#EN create.jdbc.connection.pool.poolResize=Quantity by which the pool will scale-up or scale-down the number of connections. Scale-up: When the pool has no free connections, pool will scale-up by this quantity. Scale-down: All the invalid and idle connections are removed, sometimes resulting in removing connections of quantity greater than this value. Steadypoolsize will be ensured. Possible values are from 0 to MAX_INTEGER. The default value is 2.
create.jdbc.connection.pool.poolResize=Die Menge, um die der Pool die Anzahl der Verbindungen nach oben oder unten skaliert. Skalierung nach oben: Wenn der Pool keine freien Verbindungen besitzt, wird der Pool um diese Menge nach oben skaliert. Skalierung nach unten: Alle ung\u00FCltigen Verbindungen und Leerlaufverbindungen werden entfernt, was zuweilen zum Entfernen von einer gr\u00F6\u00DFeren Menge an Verbindungen f\u00FChrt, als durch diesen Wert angegeben. Steadypoolsize wird gew\u00E4hrleistet. Die m\u00F6glichen Werte reichen von 0 bis MAX_INTEGER. Der Standardwert ist 2.
#EN create.jdbc.connection.pool.idleTimeout=The maximum time, in seconds, that a connection can remain idle in the pool. After this time, the implementation can close this connection. This timeout value must be kept shorter than the server side timeout value to prevent the accumulation of unusable connections in the application. The default value is 300.
create.jdbc.connection.pool.idleTimeout=Die maximale Zeit in Sekunden, die sich eine Verbindung im Pool im Leerlauf befinden kann. Nach dieser Zeit kann die Implementierung diese Verbindung schlie\u00DFen. Dieser Timeout\u00FCberschreitungswert muss k\u00FCrzer gehalten werden als der Timeoutwert auf der Serverseite, um die Anh\u00E4ufung unbrauchbarer Verbindungen in der Anwendung zu vermeiden. Der Standardwert betr\u00E4gt 300.
#EN create.jdbc.connection.pool.initSql=Used to specify a SQL string by the user, to be executed whenever a connection is created from the pool (not the connections that are reused). This is executed to initialize the state of the connection. This is an optional attribute and should carry a value when a initialization SQL is to be executed.
create.jdbc.connection.pool.initSql=Dient zum Festlegen einer SQL-Zeichenfolge durch den Benutzer, die ausgef\u00FChrt wird, wenn eine Verbindung vom Pool hergestellt wird (gilt nicht f\u00FCr erneut verwendete Verbindungen). Bei der Ausf\u00FChrung wird der Status der Verbindung initialisiert. Es handelt sich um ein optionales Attribut und sollte einen Wert aufweisen, wenn eine Initialisierungs-SQL ausgef\u00FChrt werden soll. 
#EN create.jdbc.connection.pool.isolationLevel=The transaction-isolation-level on the pooled database connections. This option does not have a default value. If not specified, the pool operates with the default isolation level that the JDBC driver provides. You can set a desired isolation level using one of the standard transaction isolation levels: read-uncommitted, read-committed, repeatable-read, serializable. Applications that change the isolation level on a pooled connection programmatically risk polluting the pool. This could lead to program errors.
create.jdbc.connection.pool.isolationLevel=Die Transaktionsisolationsebene (transaction-isolation-level) bei den zusammengefassten (gepoolten) Datenbankverbindungen. F\u00FCr diese Option gibt es keinen Standardwert. Wenn diese Option nicht angegeben ist, arbeitet der Pool mit der vom JDBC-Treiber bereitgestellten Standardisolationsebene. Sie k\u00F6nnen eine gew\u00FCnschte Isolationsebene mit einer der Standardebenen f\u00FCr die Transaktionsisolation festlegen: read-uncommitted (nicht \u00DCbernommene lesen), read-committed (\u00DCbernommene lesen), repeatable-read (wiederholbarer Lesevorgang), serializable (serialisierbar). Anwendungen, die die Isolationsebene bei einer zusammengefassten (gepoolten) Verbindung \u00E4ndern, riskieren auf programmatische Weise eine Verseuchung des Pools. Die kann zu Programmfehlern f\u00FChren.
#EN create.jdbc.connection.pool.isIsolationGuaranteed=This is applicable only when a particular isolation level is specified for transaction-isolation-level. The default value is true. This option assures that every time a connection is obtained from the pool, isolation level is set to the desired value. This could have some performance impact on some JDBC drivers. Administrators can set this to false when the application does not change --isolationlevel before returning the connection.
create.jdbc.connection.pool.isIsolationGuaranteed=Dies gilt nur dann, wenn eine bestimmte Isolationsebene f\u00FCr transaction-isolation-level spezifisch ist. Der Standardwert ist "True". Diese Option stellt sicher, dass jedes Mal, wenn eine Verbindung vom Pool abgerufen wird, die Isolationsebene auf den gew\u00FCnschten Wert gesetzt wird. Dies kann bei einigen JDBC-Treibern gewisse Auswirkungen auf die Leistung haben. Die Administratoren k\u00F6nnen diesen Wert auf "False" setzen, wenn die Anwendung "-isolationlevel" nicht \u00E4ndert, bevor die Verbindung zur\u00FCckgegeben wird.
#EN create.jdbc.connection.pool.isConnectValidatereq=If set to true, connections are validated or checked to see if they are usable before giving out to the application. The default value is false.
create.jdbc.connection.pool.isConnectValidatereq=Wenn dieser Wert auf "True" gesetzt ist, werden Verbindungen validiert oder \u00FCberpr\u00FCft, um festzustellen, ob sie brauchbar sind, bevor sie an die Anwendung ausgegeben werden. Der Standardwert lautet "False".
#EN create.jdbc.connection.pool.validationMethod=The name of the validation table used to perform a query to validate a connection. Valid settings are: auto-commit, meta-data, or table. The default value is auto-commit.
create.jdbc.connection.pool.validationMethod=Der Name der Validierungstabelle, die zur Durchf\u00FChrung einer Abfrage zur Validierung einer Verbindung verwendet wird. Folgende Einstellungen sind zul\u00E4ssig: auto-commit, meta-data oder table. Der Standardwert ist "auto-commit"
#EN create.jdbc.connection.pool.validationTable=The name of the validation table used to perform a query to validate a connection.
create.jdbc.connection.pool.validationTable=Der Name der Validierungstabelle, die zur Durchf\u00FChrung einer Abfrage zur Validierung einer Verbindung verwendet wird.
#EN create.jdbc.connection.pool.failConnection=If set to true, all connections in the pool must be closed when a single validation check fails. The default value is false. One attempt is made to re-establish failed connections.
create.jdbc.connection.pool.failConnection=Falls dieser Wert auf "True" gesetzt ist, m\u00FCssen alle Verbindungen im Pool geschlossen sein, wenn eine einzelne Validierungspr\u00FCfung nicht erfolgreich verl\u00E4uft. Der Standardwert ist "False". Es wird ein einziger Versuch unternommen, nicht erfolgreiche Verbindungen wiederherzustellen.
#EN create.jdbc.connection.pool.allowNonComponentCallers=A pool with this property set to true, can be used by non-J2EE components, that is, components other than EJBs or Servlets. The returned connection is enlisted automatically with the transaction context obtained from the transaction manager. 
create.jdbc.connection.pool.allowNonComponentCallers=Ein Pool, bei dem diese Eigenschaft auf "True" gesetzt ist, kann nicht von Nicht-J2EE-Komponenten verwendet werden, also von anderen Komponenten als EJBs oder Servlets. Die zur\u00FCckgegebene Verbindung wird automatisch mit dem vom Transaktionsmanager erhaltenen Transaktionskontext eingetragen. 
#EN create.jdbc.connection.pool.nonTransactionalConnections=A pool with this property set to true returns non-transactional connections. This connection does not get automatically enlisted with the transaction manager.
create.jdbc.connection.pool.nonTransactionalConnections=Ein Pool, bei dem diese Eigenschaft auf "True" gesetzt ist, gibt Verbindungen zur\u00FCck, die nicht auf Transaktionen ausgelegt sind. Diese Verbindung wird nicht automatisch mit dem Transaktionsmanager eingetragen.
#EN create.jdbc.connection.pool.validateAtMostOncePeriod=Used to set the time-interval within which a connection is validated atmost once. Default is 0 which implies that it is not enabled.
create.jdbc.connection.pool.validateAtMostOncePeriod=Dient zum Einstellen des Zeitintervalls, in dem eine Verbindung h\u00F6chstens einmal validiert wird. Der Standardwert lautet 0, d.h. nicht aktiviert.
#EN create.jdbc.connection.pool.leakTimeout=To aid user in detecting potential connection leaks by the application. When a connection is not returned back to the pool by the application within the specified period, it is assumed to be a potential leak and stack trace of the caller will be logged. Default is 0, which implies there is no leak detection, by default. A positive non-zero value turns on leak detection. Note however that, this attribute only detects if there is a connection leak. The connection can be reclaimed only if connection-leak-reclaim is set to true.
create.jdbc.connection.pool.leakTimeout=Hilft dem Benutzer bei der Erkennung m\u00F6glicher Verbindungslecks durch die Anwendung. Wenn eine Verbindung von der Anwendung nicht innerhalb des angegebenen Zeitraums an den Pool zur\u00FCckgegeben wird, wird diese als m\u00F6gliches Leck betrachtet, und der Stack Trace des Callers wird protokolliert. Der Standardwert lautet 0, d.h. die Leckerkennung ist standardm\u00E4\u00DFig nicht aktiviert. Durch Angabe eines positiven Werts ungleich Null wird die Leckerkennung aktiviert. Beachten Sie dennoch, dass dieses Attribut nur dann zur Erkennung dient, wenn ein Verbindungsleck vorhanden ist. Die Verbindung kann nur dann zur\u00FCckgefordert werden, wenn connection-leak-reclaim auf "True" gesetzt ist.
#EN create.jdbc.connection.pool.leakReclaim=If enabled, connection will be reusable (put back into pool) after connection-leak-timeout-in-seconds occurs. Default value is false.
create.jdbc.connection.pool.leakReclaim=Wenn sie aktiviert ist, kann die Verbindung im Anschluss an connection-leak-timeout-in-seconds erneut verwendet (an den Pool zur\u00FCckgegeben) werden. Der Standardwert lautet "False".
#EN create.jdbc.connection.pool.creationRetryAttempts=The number of attempts to create a new connection. Default is 0, which implies no retries.
create.jdbc.connection.pool.creationRetryAttempts=Die Anzahl der Versuche zur Herstellung einer neuen Verbindung. Der Standardwert lautet 0, d.h. keine Neuversuche.
#EN create.jdbc.connection.pool.creationRetryInterval=The time interval between retries while attempting to create a connection. Default is 10 seconds. Effective when connection-creation-retry-attempts is greater than 0.
create.jdbc.connection.pool.creationRetryInterval=Das Zeitintervall zwischen Neuversuchen, w\u00E4hrend versucht wird, eine Verbindung herzustellen. Der Standardwert betr\u00E4gt 10 Sekunden. Tritt in Kraft, wenn connection-creation-retry-attempts gr\u00F6\u00DFer als 0 ist.
#EN create.jdbc.connection.pool.statementTimeout=Sets the timeout property of a connection to enable termination of abnormally long running queries. Default value of -1 implies that it is not enabled.
create.jdbc.connection.pool.statementTimeout=Legt die Timeouteigenschaft einer Verbindung fest, damit ungew\u00F6hnlich lang dauernde Abfragen beendet werden k\u00F6nnen. Der Standardwert ist -1, d.h. nicht aktiviert.
#EN create.jdbc.connection.pool.lazyConnectionEnlistment=Enlist a resource to the transaction only when it is actually used in a method, which avoids enlistment of connections that are not used in a transaction. This also prevents unnecessary enlistment of connections cached in the calling components. Default value is false.
create.jdbc.connection.pool.lazyConnectionEnlistment=Nimmt eine Ressource nur dann f\u00FCr die Transaktion in Anspruch, wenn sie tats\u00E4chlich in einer Methode verwendet wird, bei der keine Verbindungen in Anspruch genommen werden, die nicht in einer Transaktion verwendet werden. Dadurch wird auch die unn\u00F6tige Inanspruchnahme von Verbindungen verhindert, die in den Abrufkomponenten zwischengespeichert sind. Der Standardwert ist "False".
#EN create.jdbc.connection.pool.lazyConnectionAssociation=Connections are lazily associated when an operation is performed on them. Also, they are disassociated when the transaction is completed and a component method ends, which helps reuse of the physical connections. Default value is false.
create.jdbc.connection.pool.lazyConnectionAssociation=Verbindungen werden lose verkn\u00FCpft, wenn ein Vorgang f\u00FCr sie durchgef\u00FChrt wird. Die Verkn\u00FCpfung wird dar\u00FCber hinaus wieder aufgehoben, wenn die Transaktion abgeschlossen ist und eine Komponentenmethode beendet wird. Auf diese Weise wird die Wiederverwendung der physischen Verbindungen gef\u00F6rdert. Der Standardwert ist "False".
#EN create.jdbc.connection.pool.associateWithThread=Associate connection(s) with a thread such that when the same thread is in need of a connection, it can reuse the connections already associated with that thread, thereby not incurring the overhead of getting a connection from the pool. Default value is false. (see also associate-with-thread-connections-count)
create.jdbc.connection.pool.associateWithThread=Verkn\u00FCpfen Sie eine oder mehrere Verbindungen mit einem Thread. Wenn dieser Thread eine Verbindung ben\u00F6tigt, kann er die mit dem Thread verkn\u00FCpften Verbindungen verwenden und erzeugt keinen Overhead durch das Abrufen einer Verbindung aus dem Pool. Der Standardwert ist "False". (Weitere Informationen finden Sie unter "associate-with-thread-connections-count")
#EN create.jdbc.connection.pool.associateWithThreadConnectionsCount=Maximum number of connections to associate with a thread. Default value is 1. Takes effect only when associate-with-thread is true.
create.jdbc.connection.pool.associateWithThreadConnectionsCount=Maximale Anzahl mit einem Thread zu verkn\u00FCpfende Verbindungen. Der Standardwert ist 1. Wird nur dann wirksam, wenn associate-with-thread auf "True" gesetzt ist.
#EN create.jdbc.connection.pool.driverClassname=Name of the vendor supplied JDBC driver class name. The specified driver should implement the java.sql.Driver interface.
create.jdbc.connection.pool.driverClassname=Der vom Hersteller angegebene JDBC-Treiberklassenname. Der angegebene Treiber sollte die java.sql.Driver-Schnittstelle implementieren
#EN create.jdbc.connection.pool.matchConnections=To switch on/off connection matching for the pool. It can be set to false if the administrator knows that the connections in the pool will always be homogeneous and hence a connection picked from the pool need not be matched by the resource adapter. Default value is false.
create.jdbc.connection.pool.matchConnections=Ein-/Ausschalten der Verbindungsabgleichung f\u00FCr den Pool. Die Einstellung kann auf "False" gesetzt werden, wenn der Administrator wei\u00DF, dass die Verbindungen im Pool immer homogen sind und eine aus dem Pool abgerufene Verbindung nicht mit dem Ressourcenadapter abgeglichen werden muss. Der Standardwert ist "False".
#EN create.jdbc.connection.pool.maxConnectionUsageCount=When specified, connections will be re-used by the pool for the specified number of times after which it will be closed. This is useful for instance, to avoid statement-leaks. Default value is 0, which implies the feature is not enabled.
create.jdbc.connection.pool.maxConnectionUsageCount=Wenn angegeben, werden Verbindungen vom Pool mit der angegebenen H\u00E4ufigkeit wiederverwendet und anschlie\u00DFend geschlossen. Diese Einstellung eignet sich beispielsweise zur Vermeidung von Anweisungslecks. Der Standardwert lautet 0, d.h. die Funktion ist nicht aktiviert.
#EN create.jdbc.connection.pool.ping=A pool with this attribute set to true is pinged during the pool creation or reconfiguration to identify and warn of any erroneous values for the its attributes. Default value of this attribute is false.
create.jdbc.connection.pool.ping=An einen Pool, bei dem dieses Attribut auf "True" gesetzt ist, wird w\u00E4hrend der Erstellung oder Neukonfiguration ein Ping-Signal gesendet, um bei falschen Attributwerten eine Warnmeldung anzuzeigen. Der Standardwert dieses Attributs ist "False".
#EN create.jdbc.connection.pool.pooling=When set to false, this attribute disables connection pooling. Default value of this attribute is true.
create.jdbc.connection.pool.pooling=Ist der Wert auf "False" gesetzt, wird das Connection Pooling durch dieses Attribut deaktiviert. Der Standardwert dieses Attributs ist "True".
#EN create.jdbc.connection.pool.sqlTraceListeners=Used to set if the SQL statements executed by applications need to be traced. Aids administrators in analysing the statements. Multiple listeners can be specified as comma separated list of listener implementation class names.
create.jdbc.connection.pool.sqlTraceListeners=Dient zum Festlegen, ob die von den Anwendungen ausgef\u00FChrten SQL-Anweisungen verfolgt werden sollen. Unterst\u00FCtzt Administratoren bei der Analyse der Anweisungen. Es k\u00F6nnen mehrere Listener als eine durch Komma getrennte Liste mit Namen von Listener-Implementierungsklassen angegeben werden.
#EN create.jdbc.connection.pool.statementCachesize=Used to set the number of statements to be cached using the default caching mechanism (Least Recently Used). Default value of 0 implies the statement caching is not enabled.
create.jdbc.connection.pool.statementCachesize=Dient zum Festlegen der Anzahl der Anweisungen, die mit dem standardm\u00E4\u00DFigen Caching-Mechanismus (Least Recently Used, Zuletzt verwendet) gecacht werden sollen. Der Standardwert ist 0, d.h. das Caching von Anwendungen ist nicht aktiviert.
#EN create.jdbc.connection.pool.wrapJdbcObjects=When set to true, application will get wrapped jdbc objects for Statement, PreparedStatement, CallableStatement, ResultSet, DatabaseMetaData. Defaults to true.
create.jdbc.connection.pool.wrapJdbcObjects=Ist dieses Attribut auf "True" gesetzt, werden umschlossene JDBC-Objekte f\u00FCr Statement, PreparedStatement, CallableStatement, ResultSet und DatabaseMetaData erzeugt. Standardeinstellung: "True".
#EN create.jdbc.connection.pool.validationClassname=Used to set the custom validation implementation class name implemented by the user. This parameter is mandatory if the connection-validation-type is set to custom-validation. The class name provided must be accessible to the application server.
create.jdbc.connection.pool.validationClassname=Dient zum Festlegen des vom Benutzer implementierten Namens einer benutzerdefinierten Validierungsimplementierungsklasse. Dieses Parameter ist obligatorisch, wenn connection-validation-type auf "custom-validation" gesetzt ist. Der angegebene Klassenname muss f\u00FCr den Application Server zug\u00E4nglich sein.
#EN create.jdbc.connection.pool.description=Text providing details about the specified JDBC connection pool.
create.jdbc.connection.pool.description=Text, der Details zum angegebenen JDBC-Connection Pool enth\u00E4lt.
#EN create.jdbc.connection.pool.property=Optional attribute name/value pairs for configuring the connection pool.
create.jdbc.connection.pool.property=Optionale Name/Wert-Paare f\u00FCr Attribute zur Konfiguration des Connection Pools.
#EN create.jdbc.connection.pool.jdbc_connection_pool_id=The name of the JDBC connection pool to be created.
create.jdbc.connection.pool.jdbc_connection_pool_id=Der Name des zu erstellenden JDBC-Connection Pools.
#EN create.jdbc.connection.pool.success=JDBC connection pool {0} created successfully.
create.jdbc.connection.pool.success=JDBC-Connection Pool {0} erfolgreich erstellt.
#EN create.jdbc.connection.pool.fail=JDBC connection pool {0} creation failed. {1}
create.jdbc.connection.pool.fail=JDBC-Connection Pool {0} nicht erfolgreich erstellt. {1}
#EN create.jdbc.connection.pool.duplicate=A resource named {0} already exists.
create.jdbc.connection.pool.duplicate=Eine Ressource mit dem Namen {0} ist bereits vorhanden.
#EN create.jdbc.connection.pool.validationtable_required=--validationtable is required if --validationmethod=table and --isconnectvalidatereq=true.
create.jdbc.connection.pool.validationtable_required=--validationtable ist erforderlich, wenn --validationmethod=table und --isconnectvalidatereq=true.
#EN delete.jdbc.connection.pool=removes the specified JDBC connection pool
delete.jdbc.connection.pool=entfernt den angegebenen JDBC-Connection Pool.
#EN delete.jdbc.connection.pool.cascade=If the option is set to true, all the JDBC resources associated with the pool, apart from the pool itself, are deleted. When set to false, the deletion of pool fails if any resources are associated with the pool. Resources must be deleted explicitly or the option must be set to true. By default, the option is false.
delete.jdbc.connection.pool.cascade=Wenn die Option auf "True" gesetzt ist, werden alle mit dem Pool verkn\u00FCpften JDBC-Ressourcen, abgesehen vom Pool selbst, gel\u00F6scht. Wenn die Option auf "False" gesetzt ist, kann der Pool nicht gel\u00F6scht werden, wenn mit dem Pool Ressourcen verkn\u00FCpft sind. Die Ressourcen m\u00FCssen explizit gel\u00F6scht werden, oder die Option muss auf "True" gesetzt werden. Standardm\u00E4\u00DFig ist die Option auf "False" gesetzt.
#EN delete.jdbc.connection.pool.jdbc_connection_pool_id=The name of the JDBC resource to be removed.
delete.jdbc.connection.pool.jdbc_connection_pool_id=Der Name der zu entfernenden JDBC-Ressource.
#EN delete.jdbc.connection.pool.success=Command delete-jdbc-connection pool executed successfully.
delete.jdbc.connection.pool.success=Befehl "delete-jdbc-connection-pool" erfolgreich ausgef\u00FChrt.
#EN delete.jdbc.connection.pool.fail=Command delete-jdbc-connection-pool failed.
delete.jdbc.connection.pool.fail=Befehl "delete-jdbc-connection-pool" nicht erfolgreich.
#EN delete.jdbc.connection.pool.notfound=A JDBC connection pool named {0} does not exist.
delete.jdbc.connection.pool.notfound=Es ist kein JDBC-Connection Pool mit dem Namen {0} vorhanden.
#EN delete.jdbc.connection.pool.noJndiName=No id defined for JDBC Connection pool.
delete.jdbc.connection.pool.noJndiName=Keine ID f\u00FCr JDBC-Connection Pool definiert.
#EN delete.jdbc.connection.pool.pool_in_use=Some jdbc resources or persistence manager factory resources are referencing this connection pool. Use 'cascade' option to delete them as well.
delete.jdbc.connection.pool.pool_in_use=Dieser Connection Pool wird von einigen JDBC-Ressourcen oder Persistence Manager-Factory-Ressourcen referenziert. Verwenden Sie die Option 'cascade', um auch diese zu l\u00F6schen.
#EN list.jdbc.connection.pools=lists all JDBC connection pools
list.jdbc.connection.pools=listet alle JDBC-Verbindungspools auf
#EN list.jdbc.connection.pools.success=Command list-jdbc-connection-pools executed successfully.
list.jdbc.connection.pools.success=Befehl "list-jdbc-connection-pools" erfolgreich ausgef\u00FChrt.
#EN list.jdbc.connection.pools.fail=Command list-jdbc-connection-pools failed
list.jdbc.connection.pools.fail=Befehl "list-jdbc-connection-pools" nicht erfolgreich
#EN list.jdbc.connection.pools.empty=Nothing to list.
list.jdbc.connection.pools.empty=Nichts aufzulisten.
#EN ping.create.jdbc.connection.pool.fail=Attempting to ping during JDBC Connection Pool Creation : {0} - Failed.
ping.create.jdbc.connection.pool.fail=Versuch, w\u00E4hrend der Erstellung eines JDBC-Connection Pools ein Ping-Signal zu senden: {0} - Nicht erfolgreich.
#EN ping.create.jdbc.connection.pool.success=Attempting to ping during JDBC Connection Pool Creation : {0} - Succeeded.
ping.create.jdbc.connection.pool.success=Versuch, w\u00E4hrend der Erstellung eines JDBC-Connection Pools ein Ping-Signal zu senden: {0} - Erfolgreich.
