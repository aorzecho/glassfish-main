#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2012 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#
create.module.config=creates or show the default configuration for the given services in the given target.
create.module.config.success=Command executed successfully.
create.module.config.failure=Failed to execute the command due to {0}. For more details check the log file.
create.module.config.no.such.service=The service you specified, {0} does corresponds to any service available in the classpath.
create.module.config.service.name.ignored=You can only use --all or specify a service name. These two options are exclusive.
create.module.config.no.service.no.all=As no service name specified and the --all is not used either. Showing all default configurations not merged with domain configuration under target {0}.
create.module.config.show.all=Showing all default configurations not merged with domain configuration under target {0}.
create.module.config.creating.all=Creating all default configuration elements that are not present in the domain.xml under target {0}.
create.module.config.creating.for.service.name=Creating default configuration for {0} under the target {1}...
create.module.config.no.service.no.all.failed=Failed to show all default configurations not merged with domain configuration under target {0} due to {1}.
create.module.config.show.all.failed=Failed to show all default configurations not merged with domain configuration under target {0} due to {1}.
create.module.config.creating.all.failed=Failed to create all default configuration elements that are not present in the domain.xml under target {0} due to {1}.
create.module.config.creating.for.service.name.failed=Failed to create module configuration for {0} under the target {1} due to {2}.
create.module.config.not.such.a.service.found=A ConfigBean of type {0} which translates to your service name\'s configuration elements does not exist.
create.module.config.config.embedded.in.class=Note that the service configuration you asked for, {0} does not come form a snippet file. The default configuration is embedded in the code.
create.module.config.already.exists=Configuration for {0} already exists. The command didn't change the existing configuration.
create.module.config.dryRun=When specified the command will only show the default configuration and do not put the default configuration into the domain.xml.
create.module.config.all=When specified the command will operate on all config beans available in the classpath.
create.module.config.target=Command will operate on the configuration specific to the target. For example if it is cluster-01 that is used as target then the command will operate on the cluster-01 configuration only.
create.module.config.serviceName=Specifies which service you want to see its default configuration or merge its default configuration to the domain.xml.
delete.module.config.no.configuration=No customized configuration exist for this service nor the default configuration has been added to the domain.xml.
delete.module.config.failed.to.delete.config=Failed to delete the service configuration for {0} because of {1}. For more details check the server log file.
delete.module.config.target=Command will operate on the configuration specific to the target. For example if it is cluster-01 that is used as target then the command will operate on the cluster-01 configuration only.
delete.module.config.serviceName=Specifies which service you want to remove its configuration from the domain.xml.
delete.module.config=Deletes the configuration of the service specified as the main parameter from the target specified using the target param. If no target specified it will remove it from the server config.
delete.module.config.service.name.is.required=The service name is required, please specify which service you want to delete its default configuration.
delete.module.config.no.such.target=No such target exist on this domain.
create.module.config.no.such.target=No such target exist on this domain.
delete.module.config.not.such.a.service.found=Your service name does not match any service installed on this domain.
create.module.config.target.name.invalid=The target name you specified is invalid
delete.module.config.target.name.invalid=The target name you specified is invalid
get.active.config.target.name.invalid=The target name you specified is invalid
get.active.config.service.name.required=You need to specify a service name to get it's active configuration.
get.active.config.getting.active.config.for.service.failed=Failed to get active configuration for {0} under the target {1} due to {2}.
get.active.config.not.such.a.service.found=A ConfigBean of type {0} which translates to your service name\'s does not exist.
delete.module.config.failed.deleting.dependant=Failed to remove all configuration elements related to your service form domain.xml. You can use create-module-config --dryRun with your module name to see all relevant configurations and try removing the config elements
at.location=At location: