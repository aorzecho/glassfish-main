#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#EN create.jvm.options=creates JVM options in the Java configuration or profiler element of the domain.xml file.
create.jvm.options=domain.xml \u30d5\u30a1\u30a4\u30eb\u306e Java \u8a2d\u5b9a\u307e\u305f\u306f\u30d7\u30ed\u30d5\u30a1\u30a4\u30e9\u8981\u7d20\u5185\u306b JVM \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002
#EN create.jvm.options.jvm_option_name=The left side of the equal sign (=) is the JVM option name. The right side of the equal sign (=) is the JVM option value. A colon (:) is a delimiter for multiple options.
create.jvm.options.jvm_option_name=\u7b49\u53f7 (=) \u306e\u5de6\u5074\u306f JVM \u30aa\u30d7\u30b7\u30e7\u30f3\u540d\u3067\u3059\u3002\u7b49\u53f7 (=) \u306e\u53f3\u5074\u306f JVM \u30aa\u30d7\u30b7\u30e7\u30f3\u5024\u3067\u3059\u3002\u30b3\u30ed\u30f3 (:) \u306f \u8907\u6570\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306e\u533a\u5207\u308a\u6587\u5b57\u3067\u3059\u3002
#EN create.jvm.options.usagetext=create-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
create.jvm.options.usagetext=create-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
#EN delete.jvm.options=removes JVM options from the Java configuration or profiler elements of the domain.xml file
delete.jvm.options=domain.xml \u30d5\u30a1\u30a4\u30eb\u306e Java \u8a2d\u5b9a\u307e\u305f\u306f\u30d7\u30ed\u30d5\u30a1\u30a4\u30e9\u8981\u7d20\u304b\u3089 JVM \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u524a\u9664\u3057\u307e\u3059\u3002
#EN delete.jvm.options.jvm_option_name=The left side of the equal sign (=) is the JVM option name. The right side of the equal sign (=) is the JVM option value. A colon (:) is a delimiter for multiple options.
delete.jvm.options.jvm_option_name=\u7b49\u53f7 (=) \u306e\u5de6\u5074\u306f JVM \u30aa\u30d7\u30b7\u30e7\u30f3\u540d\u3067\u3059\u3002\u7b49\u53f7 (=) \u306e\u53f3\u5074\u306f JVM \u30aa\u30d7\u30b7\u30e7\u30f3\u5024\u3067\u3059\u3002\u30b3\u30ed\u30f3 (:) \u306f \u8907\u6570\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306e\u533a\u5207\u308a\u6587\u5b57\u3067\u3059\u3002
#EN delete.jvm.options.usagetext=delete-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
delete.jvm.options.usagetext=delete-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
#EN list.jvm.options=lists JVM options in the Java configuration or profiler element of the domain.xml file.
list.jvm.options=domain.xml \u30d5\u30a1\u30a4\u30eb\u306e Java \u8a2d\u5b9a\u307e\u305f\u306f\u30d7\u30ed\u30d5\u30a1\u30a4\u30e9\u8981\u7d20\u5185\u306e JVM \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4e00\u89a7\u8868\u793a\u3057\u307e\u3059\u3002
#EN list.jvm.options.success=Listing configured JVM Options and Java System Properties on given target successful
list.jvm.options.success=\u6307\u5b9a\u3057\u305f\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b JVM \u30aa\u30d7\u30b7\u30e7\u30f3\u3068 Java \u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u304c\u6b63\u5e38\u306b\u4e00\u89a7\u8868\u793a\u3055\u308c\u307e\u3057\u305f
#EN list.jvm.options.failed=Listing JVM options failed on given target for following reason: {0}
list.jvm.options.failed=\u6b21\u306e\u7406\u7531\u306b\u3088\u308a\u3001\u6307\u5b9a\u3057\u305f\u30bf\u30fc\u30b2\u30c3\u30c8\u306e JVM \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4e00\u89a7\u8868\u793a\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {0}
#EN create.jvm.options.success=Creating the given Option(s) on given target successful
create.jvm.options.success=\u6307\u5b9a\u3057\u305f\u30bf\u30fc\u30b2\u30c3\u30c8\u4e0a\u3067\u6307\u5b9a\u3057\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u6210\u529f\u3057\u307e\u3057\u305f
#EN delete.jvm.options.success=Deleting the given Option(s) on given target successful
delete.jvm.options.success=\u6307\u5b9a\u3055\u308c\u305f\u30bf\u30fc\u30b2\u30c3\u30c8\u4e0a\u3067\u6307\u5b9a\u3057\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u306b\u6210\u529f\u3057\u307e\u3057\u305f
#EN delete.jvm.options.failed=Deleting given option(s) on given target failed for following reason,\nthe current options in configuration have been retained
delete.jvm.options.failed=\u6b21\u306e\u7406\u7531\u306b\u3088\u308a\u3001\u6307\u5b9a\u3057\u305f\u30bf\u30fc\u30b2\u30c3\u30c8\u4e0a\u3067\u6307\u5b9a\u3057\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\n\u8a2d\u5b9a\u5185\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u73fe\u5728\u306e\u307e\u307e\u3067\u3059
#EN create.profiler.first=No profiler configured yet. Create a profiler first.
create.profiler.first=\u8a2d\u5b9a\u6e08\u307f\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30e9\u304c\u307e\u3060\u3042\u308a\u307e\u305b\u3093\u3002\u307e\u305a\u30d7\u30ed\u30d5\u30a1\u30a4\u30e9\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002
#EN created.message=Created {0} option(s)
created.message={0} \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f
#EN no.option.created=No jvm-options were created (perhaps they were already present)
no.option.created=jvm-options \u306f\u4f5c\u6210\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f (\u3059\u3067\u306b\u5b58\u5728\u3057\u3066\u3044\u305f\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059)
#EN deleted.message=Deleted {0} option(s)
deleted.message={0} \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u524a\u9664\u3057\u307e\u3057\u305f
#EN no.option.deleted=No jvm-options were deleted (perhaps they never existed in the configuration)
no.option.deleted=jvm-options \u306f\u524a\u9664\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f (\u8a2d\u5b9a\u306b\u5b58\u5728\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059)
#EN joe.exists=JVM option {0} already exists in the configuration.
joe.exists=JVM \u30aa\u30d7\u30b7\u30e7\u30f3 {0} \u306f\u3059\u3067\u306b\u8a2d\u5b9a\u306b\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002
#EN joe.invalid.start=JVM option {0} is invalid because it does not start with a ''-''
joe.invalid.start=JVM \u30aa\u30d7\u30b7\u30e7\u30f3 {0} \u306f\u3001''-'' \u3067\u59cb\u307e\u3063\u3066\u3044\u306a\u3044\u305f\u3081\u7121\u52b9\u3067\u3059
#EN joe.invalid.cmd.syntax=The command line:{0} does not satisfy the syntax.\nIn a nutshell, all options should start with a ''-'', multiple options are separated by a '':''.\nA '':'' inside an option should be escaped with a ''\\''.\nSince shell interprets command arguments, make sure you quote it.\n
joe.invalid.cmd.syntax=\u30b3\u30de\u30f3\u30c9\u884c: {0} \u306e\u69cb\u6587\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3064\u307e\u308a\u3001\u3059\u3079\u3066\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u300c-\u300d\u3067\u59cb\u3081\u3066\u3001\u8907\u6570\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u300c:\u300d\u3067\u533a\u5207\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u30aa\u30d7\u30b7\u30e7\u30f3\u5185\u306e\u300c:\u300d\u306f\u300c\\\u300d\u3067\u30a8\u30b9\u30b1\u30fc\u30d7\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30b3\u30de\u30f3\u30c9\u5f15\u6570\u306f\u30b7\u30a7\u30eb\u306b\u3088\u3063\u3066\u89e3\u91c8\u3055\u308c\u308b\u305f\u3081\u3001\u5f15\u7528\u7b26\u3067\u56f2\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n
#EN soft.invalid.xmx=It appears that given JVM option {0} represents invalid maximum heap for the JVM. Ensure that it is valid, by doing list-jvm-options.
soft.invalid.xmx=JVM \u30aa\u30d7\u30b7\u30e7\u30f3 {0} \u306f\u3001JVM \u306b\u5bfe\u3057\u3066\u7121\u52b9\u306a\u6700\u5927\u30d2\u30fc\u30d7\u3092\u8868\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002list-jvm-options \u3092\u5b9f\u884c\u3057\u3066\u3001\u6709\u52b9\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002
#EN soft.xmx.exists=The configuration already has maximum heap size specified: {0}. Verify the java configuration by doing list-jvm-options.
soft.xmx.exists=\u3059\u3067\u306b\u8a2d\u5b9a\u306b\u6700\u5927\u30d2\u30fc\u30d7\u30b5\u30a4\u30ba\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059: {0}\u3002list-jvm-options \u3092\u5b9f\u884c\u3057\u3066\u3001Java \u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002
#EN soft.xmx.smaller.than.xms=It appears that the maximum heap size specified: {0} is smaller than the minimum heap size in the configuration: {1}. JVM might not start. Ensure that this is valid, by doing doing list-jvm-options.
soft.xmx.smaller.than.xms=\u6307\u5b9a\u3057\u305f\u6700\u5927\u30d2\u30fc\u30d7\u30b5\u30a4\u30ba {0} \u306f\u3001\u8a2d\u5b9a\u306e\u6700\u5c0f\u30d2\u30fc\u30d7\u30b5\u30a4\u30ba\u3088\u308a\u3082\u5c0f\u3055\u3044\u3088\u3046\u3067\u3059: {1}\u3002JVM \u304c\u8d77\u52d5\u3057\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002list-jvm-options \u3092\u5b9f\u884c\u3057\u3066\u3001\u3053\u308c\u304c\u6709\u52b9\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002
#EN soft.invalid.xms=It appears that given JVM option {0} represents invalid initial heap for the JVM. Ensure that it is valid, by doing list-jvm-options.
soft.invalid.xms=JVM \u30aa\u30d7\u30b7\u30e7\u30f3 {0} \u306f\u3001JVM \u306b\u5bfe\u3057\u3066\u7121\u52b9\u306a\u521d\u671f\u30d2\u30fc\u30d7\u3092\u8868\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002list-jvm-options \u3092\u5b9f\u884c\u3057\u3066\u3001\u6709\u52b9\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002
#EN soft.xms.exists=The configuration already has initial heap size specified: {0}. Verify the java configuration by doing list-jvm-options.
soft.xms.exists=\u3059\u3067\u306b\u8a2d\u5b9a\u306b\u521d\u671f\u30d2\u30fc\u30d7\u30b5\u30a4\u30ba\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059: {0}\u3002list-jvm-options \u3092\u5b9f\u884c\u3057\u3066\u3001Java \u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002
#EN soft.xms.larger.than.xmx=It appears that the initial heap size specified: {0} is larger than the maximum heap size in the configuration: {1}. JVM might not start. Ensure that this is valid, by doing doing list-jvm-options.
soft.xms.larger.than.xmx=\u6307\u5b9a\u3057\u305f\u521d\u671f\u30d2\u30fc\u30d7\u30b5\u30a4\u30ba {0} \u306f\u3001\u8a2d\u5b9a\u306e\u6700\u5927\u30d2\u30fc\u30d7\u30b5\u30a4\u30ba\u3088\u308a\u3082\u5927\u304d\u3044\u3088\u3046\u3067\u3059: {1}\u3002JVM \u304c\u8d77\u52d5\u3057\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002list-jvm-options \u3092\u5b9f\u884c\u3057\u3066\u3001\u3053\u308c\u304c\u6709\u52b9\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002
#Generate JVM Report
#EN server.unreachable=The server {0} seems to be unreachable. This means either it is not running or there is an internal communication error.
server.unreachable=\u30b5\u30fc\u30d0\u30fc {0} \u306b\u63a5\u7d9a\u3067\u304d\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u30b5\u30fc\u30d0\u30fc\u304c\u7a3c\u50cd\u4e2d\u3067\u306a\u3044\u304b\u3001\u5185\u90e8\u901a\u4fe1\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u304b\u306e\u3069\u3061\u3089\u304b\u3067\u3059\u3002
#EN td.title=Full Java Thread Dump {0} {1} {2}
td.title=\u5b8c\u5168\u306a Java \u30b9\u30ec\u30c3\u30c9\u30c0\u30f3\u30d7 {0} {1} {2}
#EN thread.no=Number of threads: {0}
thread.no=\u30b9\u30ec\u30c3\u30c9\u306e\u6570: {0}
#EN daemon.thread.no=Number of daemon threads: {0}
daemon.thread.no=\u30c7\u30fc\u30e2\u30f3\u30b9\u30ec\u30c3\u30c9\u306e\u6570: {0}
#EN peak.thread.no=Peak live thread count since the Java virtual machine started or peak was reset: {0}
peak.thread.no=Java \u4eee\u60f3\u30de\u30b7\u30f3\u304c\u8d77\u52d5\u3057\u3066\u304b\u3089\u307e\u305f\u306f\u30d4\u30fc\u30af\u304c\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u3066\u304b\u3089\u306e\u30d4\u30fc\u30af\u30e9\u30a4\u30d6\u30b9\u30ec\u30c3\u30c9\u6570: {0}
#EN thread.contention.monitoring.supported=Is support for thread contention monitoring available on this JVM? [{0}]
thread.contention.monitoring.supported=\u3053\u306e JVM \u4e0a\u3067\u30b9\u30ec\u30c3\u30c9\u7af6\u5408\u306e\u76e3\u8996\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u304b ?[{0}]
#EN thread.contention.monitoring.enabled=Is thread contention monitoring enabled? [{0}]. If false, some thread synchronization statistics are not be available.
thread.contention.monitoring.enabled=\u30b9\u30ec\u30c3\u30c9\u7af6\u5408\u306e\u76e3\u8996\u304c\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u304b\u3002[{0}]\u3002false \u306e\u5834\u5408\u306f\u3001\u4e00\u90e8\u306e\u30b9\u30ec\u30c3\u30c9\u540c\u671f\u7d71\u8a08\u60c5\u5831\u3092\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002
#EN thread.cputime.supported=Is support for CPU time measurement for any thread available on this JVM? [{0}]
thread.cputime.supported=\u3053\u306e JVM \u4e0a\u3067\u30b9\u30ec\u30c3\u30c9\u306e CPU \u6642\u9593\u6e2c\u5b9a\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u304b ?[{0}]
#EN thread.cputime.enabled=Is thread CPU time measurement enabled? [{0}]. If false, thread execution times are not available for any thread.
thread.cputime.enabled=\u30b9\u30ec\u30c3\u30c9\u306e CPU \u6642\u9593\u6e2c\u5b9a\u304c\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u304b\u3002[{0}]\u3002false \u306e\u5834\u5408\u306f\u3001\u30b9\u30ec\u30c3\u30c9\u306f\u30b9\u30ec\u30c3\u30c9\u5b9f\u884c\u6642\u9593\u3092\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3002
#EN execution.info=Thread Execution Information:
execution.info=\u30b9\u30ec\u30c3\u30c9\u5b9f\u884c\u60c5\u5831:
#EN thread.title=Thread {0} thread-id: {1} thread-state: {2}
thread.title=\u30b9\u30ec\u30c3\u30c9 {0} \u30b9\u30ec\u30c3\u30c9 ID: {1} \u30b9\u30ec\u30c3\u30c9\u306e\u72b6\u614b: {2}
#EN thread.waiting.on=Waiting on lock: {0}
thread.waiting.on=\u30ed\u30c3\u30af\u3092\u5f85\u6a5f\u3057\u3066\u3044\u307e\u3059: {0}
#EN thread.suspended=Suspended
thread.suspended=\u4e2d\u65ad
#EN thread.in.native=Running in native
thread.in.native=\u30cd\u30a4\u30c6\u30a3\u30d6\u3067\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059
#EN thread.stack.element=\t at: {0}
thread.stack.element=\t \u4f4d\u7f6e : {0}
#EN no.deadlock=No deadlock found
no.deadlock=\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u306f\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f
#EN sync.info=Thread Synchronization Statistics:
sync.info=\u30b9\u30ec\u30c3\u30c9\u540c\u671f\u7d71\u8a08\u60c5\u5831:
#EN thread.blocked.times=Number of times this thread was blocked (to enter/reenter a Monitor): {0}
thread.blocked.times=(\u30e2\u30cb\u30bf\u30fc\u306b\u5165\u308b/\u518d\u5165\u3059\u308b\u305f\u3081\u306b) \u30b9\u30ec\u30c3\u30c9\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u305f\u56de\u6570: {0}
#EN thread.blocked.totaltime=Total (approximate) time the thread was in BLOCKED state: {0} milliseconds since thread contention monitoring was last enabled.
thread.blocked.totaltime=\u30b9\u30ec\u30c3\u30c9\u304c BLOCKED \u72b6\u614b\u306b\u306a\u3063\u305f\u5408\u8a08\u56de\u6570 (\u6982\u6570): \u30b9\u30ec\u30c3\u30c9\u7af6\u5408\u306e\u76e3\u8996\u304c\u6700\u5f8c\u306b\u4f7f\u7528\u53ef\u80fd\u306b\u306a\u3063\u3066\u304b\u3089 {0} \u30df\u30ea\u79d2\u3002
#EN thread.total.cpu.time=Total CPU time for this thread: {0} seconds {1} nanoseconds.
thread.total.cpu.time=\u3053\u306e\u30b9\u30ec\u30c3\u30c9\u306e CPU \u6642\u9593\u306e\u5408\u8a08: {0} \u79d2 {1} \u30ca\u30ce\u79d2\u3002
#EN thread.cpu.user.time=User-level CPU time for this thread: {0} seconds {1} nanoseconds.
thread.cpu.user.time=\u3053\u306e\u30b9\u30ec\u30c3\u30c9\u306e\u30e6\u30fc\u30b6\u30fc\u30ec\u30d9\u30eb CPU \u6642\u9593: {0} \u79d2 {1} \u30ca\u30ce\u79d2\u3002
#EN wait.times=Number of times this thread waited for a notification (i.e. it was in WAITING or TIMED_WAITING state): {0}
wait.times=\u3053\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u901a\u77e5\u3092\u5f85\u6a5f\u3057\u305f\u56de\u6570 (WAITING \u307e\u305f\u306f TIMED_WAITING \u72b6\u614b): {0}
#EN lock.owner.details=This thread is blocked waiting on lock owned currently by thread named: {0}, id: {1}
lock.owner.details=\u3053\u306e\u30b9\u30ec\u30c3\u30c9\u306f\u30d6\u30ed\u30c3\u30af\u3055\u308c\u3001\u540d\u524d {0}\u3001ID \u304c {1} \u306e\u30b9\u30ec\u30c3\u30c9\u304c\u73fe\u5728\u6240\u6709\u3059\u308b\u30ed\u30c3\u30af\u3067\u5f85\u6a5f\u3057\u3066\u3044\u307e\u3059\u3002
#EN monitor.info=Object Monitors currently held or requested by this thread: {0}
monitor.info=\u3053\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u73fe\u5728\u4fdd\u6301\u307e\u305f\u306f\u8981\u6c42\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30e2\u30cb\u30bf\u30fc: {0}
#EN ownable.sync.info=Ownable Synchronizers (e.g. ReentrantLock and ReentrantReadWriteLock) held by this thread: {0}
ownable.sync.info=\u3053\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u4fdd\u6301\u3059\u308b\u6240\u6709\u53ef\u80fd\u306a\u30b7\u30f3\u30af\u30ed\u30ca\u30a4\u30b6 (ReentrantLock \u304a\u3088\u3073 ReentrantReadWriteLock \u306a\u3069): {0}
#EN deadlocks.found=Following thread(s) were deadlocked:
deadlocks.found=\u6b21\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u3055\u308c\u307e\u3057\u305f:
#EN m2hms={0} Hours {1} Minutes {2} Seconds
m2hms={0} \u6642\u9593 {1} \u5206 {2} \u79d2
#EN m2sms={0} Seconds {1} Milliseconds
m2sms={0} \u79d2 {1} \u30df\u30ea\u79d2
#EN uptime=The uptime of Java Virtual Machine: {0}
uptime=Java \u4eee\u60f3\u30de\u30b7\u30f3\u306e\u7a3c\u50cd\u6642\u9593: {0}
#EN memory.pool.name=Memory Pool Name: {0}
memory.pool.name=\u30e1\u30e2\u30ea\u30fc\u30d7\u30fc\u30eb\u540d: {0}
#EN memory.usage.init=Memory that Java Virtual Machine initially requested to the Operating System: {0} Bytes
memory.usage.init=Java \u4eee\u60f3\u30de\u30b7\u30f3\u304c\u6700\u521d\u306b\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u306b\u8981\u6c42\u3057\u305f\u30e1\u30e2\u30ea\u30fc: {0} \u30d0\u30a4\u30c8
#EN memory.usage.comm=Memory that Java Virtual Machine is guaranteed to receive from the Operating System: {0} Bytes
memory.usage.comm=Java \u4eee\u60f3\u30de\u30b7\u30f3\u304c\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u30e1\u30e2\u30ea\u30fc: {0} \u30d0\u30a4\u30c8
#EN memory.usage.max=Maximum Memory that Java Virtual Machine may get from the Operating System: {0} Bytes. Note that this is not guaranteed.
memory.usage.max=Java \u4eee\u60f3\u30de\u30b7\u30f3\u304c\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u53d7\u3051\u53d6\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u6700\u5927\u30e1\u30e2\u30ea\u30fc: {0} \u30d0\u30a4\u30c8\u3002\u3053\u308c\u306f\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u6570\u5b57\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002
#EN memory.usage.used=Memory that Java Virtual Machine uses at this time: {0} Bytes
memory.usage.used=Java \u4eee\u60f3\u30de\u30b7\u30f3\u304c\u73fe\u6642\u70b9\u3067\u4f7f\u7528\u3059\u308b\u30e1\u30e2\u30ea\u30fc: {0} \u30d0\u30a4\u30c8
#EN gc.name=Name of the Garbage Collector: {0}
gc.name=\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30bf\u30fc\u306e\u540d\u524d: {0}
#EN gc.numcol=Number of collections occurred using this garbage collector: {0} Bytes
gc.numcol=\u3053\u306e\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30bf\u30fc\u3092\u4f7f\u7528\u3057\u3066\u5b9f\u884c\u3055\u308c\u308b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u6570: {0} \u30d0\u30a4\u30c8
#EN gc.coltime=Garbage Collection Time: {0}
gc.coltime=\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u6642\u9593: {0}
#EN heap.mem.usage=Heap Memory Usage:
heap.mem.usage=\u30d2\u30fc\u30d7\u30e1\u30e2\u30ea\u30fc\u306e\u4f7f\u7528\u91cf:
#EN nonheap.mem.usage=Non-heap Memory Usage:
nonheap.mem.usage=\u30d2\u30fc\u30d7\u3067\u306a\u3044\u30e1\u30e2\u30ea\u30fc\u306e\u4f7f\u7528\u91cf:
#EN obj.fin.pending=Approximate number of objects for which finalization is pending: {0}
obj.fin.pending=\u30d5\u30a1\u30a4\u30ca\u30e9\u30a4\u30ba\u3092\u4fdd\u7559\u4e2d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6982\u6570: {0}
#EN classloading.info=Class loading and unloading in the Java Virtual Machine:
classloading.info=Java \u4eee\u60f3\u30de\u30b7\u30f3\u3078\u306e\u30af\u30e9\u30b9\u8aad\u307f\u8fbc\u307f\u3068\u8aad\u307f\u8fbc\u307f\u89e3\u9664:
#EN classes.loaded=Number of classes currently loaded in the Java Virtual Machine: {0}
classes.loaded=Java \u4eee\u60f3\u30de\u30b7\u30f3\u306b\u73fe\u5728\u8aad\u307f\u8fbc\u307e\u308c\u3066\u3044\u308b\u30af\u30e9\u30b9\u306e\u6570: {0}
#EN classes.total=Number of classes loaded in the Java Virtual Machine since the startup: {0}
classes.total=\u8d77\u52d5\u5f8c\u306b Java \u4eee\u60f3\u30de\u30b7\u30f3\u306b\u8aad\u307f\u8fbc\u307e\u308c\u305f\u30af\u30e9\u30b9\u306e\u6570: {0}
#EN classes.unloaded=Number of classes unloaded from the Java Virtual Machine: {0}
classes.unloaded=Java \u4eee\u60f3\u30de\u30b7\u30f3\u304b\u3089\u8aad\u307f\u8fbc\u307f\u89e3\u9664\u3055\u308c\u305f\u30af\u30e9\u30b9\u306e\u6570: {0}
#EN complilation.info=Just-in-time (JIT) compilation information in the Java Virtual Machine:
complilation.info=Java \u4eee\u60f3\u30de\u30b7\u30f3\u306e Just-in-time (JIT) \u30b3\u30f3\u30d1\u30a4\u30eb\u60c5\u5831:
#EN compilation.monitor.status=Java Virtual Machine compilation monitoring allowed: {0}
compilation.monitor.status=Java \u4eee\u60f3\u30de\u30b7\u30f3\u3067\u53ef\u80fd\u306a\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u76e3\u8996: {0}
#EN jit.compilar.name=Name of the Just-in-time (JIT) compiler: {0}
jit.compilar.name=Just-in-time (JIT) \u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u540d\u524d: {0}
#EN compilation.time=Total time spent in compilation: {0}
compilation.time=\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u5408\u8a08\u6240\u8981\u6642\u9593: {0}
#EN os.info=Operating System Information:
os.info=\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u60c5\u5831:
#EN os.name=Name of the Operating System: {0}
os.name=\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u306e\u540d\u524d: {0}
#EN os.arch=Binary Architecture name of the Operating System: {0}, Version: {1}
os.arch=\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u306e\u30d0\u30a4\u30ca\u30ea\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30fc\u306e\u540d\u524d: {0}\u3001\u30d0\u30fc\u30b8\u30e7\u30f3: {1}
#EN os.nproc=Number of processors available on the Operating System: {0}
os.nproc=\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u4e0a\u3067\u4f7f\u7528\u53ef\u80fd\u306a\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u6570: {0}
#EN os.load=System load on the available processors for the last minute: {0}. (Sum of running and queued runnable entities per minute)
os.load=\u6700\u5f8c\u306e 1 \u5206\u9593\u306e\u4f7f\u7528\u53ef\u80fd\u306a\u30d7\u30ed\u30bb\u30c3\u30b5\u4e0a\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u8aad\u307f\u8fbc\u307f: {0}\u3002(1 \u5206\u3042\u305f\u308a\u306e\u5b9f\u884c\u4e2d\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u5f85\u3061\u884c\u5217\u4e2d\u306e\u5b9f\u884c\u53ef\u80fd\u306a\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u5408\u8a08)
#EN rt.info=General Java Runtime Environment Information for the VM: {0}
rt.info=VM \u306e Java Runtime Environment \u306e\u4e00\u822c\u60c5\u5831: {0}
#EN rt.bcp=JRE BootClassPath: {0}
rt.bcp=JRE BootClassPath: {0}
#EN rt.cp=JRE ClassPath: {0}
rt.cp=JRE ClassPath: {0}
#EN rt.libpath=JRE Native Library Path: {0}
rt.libpath=JRE \u30cd\u30a4\u30c6\u30a3\u30d6\u30e9\u30a4\u30d6\u30e9\u30ea\u30d1\u30b9: {0}
#EN rt.nvv=JRE name: {0} Vendor: {1} Version: {2}
rt.nvv=JRE \u306e\u540d\u524d: {0} \u30d9\u30f3\u30c0\u30fc: {1} \u30d0\u30fc\u30b8\u30e7\u30f3: {2}
#EN rt.sysprops=List of System Properties for the Java Virtual Machine:
rt.sysprops=Java \u4eee\u60f3\u30de\u30b7\u30f3\u306e\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u306e\u4e00\u89a7:
#EN summary.title=**** Java Virtual Machine [App Server Instance Name: {0}] Summary ****
summary.title=**** Java \u4eee\u60f3\u30de\u30b7\u30f3 [Application Server \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u540d: {0}] \u6982\u8981 ****
#EN class.info.title=**** Class Statistics for Java Virtual Machine [App Server Instance Name: {0}] ****
class.info.title=**** Java \u4eee\u60f3\u30de\u30b7\u30f3\u306e\u30af\u30e9\u30b9\u7d71\u8a08 [Application Server \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u540d: {0}] ****
#EN thread.dump.title=**** Thread Dump for Java Virtual Machine [App Server Instance Name: {0}] ****
thread.dump.title=**** Java \u4eee\u60f3\u30de\u30b7\u30f3\u306e\u30b9\u30ec\u30c3\u30c9\u30c0\u30f3\u30d7 [Application Server \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u540d: {0}] ****
#EN memory.info.title=**** Memory (Perm Gen, Eden Space etc.) Information for Java Virtual Machine [App Server Instance Name: {0}] ****
memory.info.title=**** Java \u4eee\u60f3\u30de\u30b7\u30f3\u306e\u30e1\u30e2\u30ea\u30fc (Perm Gen\u3001Eden Space \u306a\u3069) \u60c5\u5831 [Application Server \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u540d: {0}] ****
#logging information
#EN logging.config.file=Effective logging properties file:[{0}]. If null, it indicates JRE standard file.
logging.config.file=\u6709\u52b9\u306a\u30ed\u30b0\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u30d5\u30a1\u30a4\u30eb: [{0}]\u3002null \u306e\u5834\u5408\u306f\u3001JRE \u6a19\u6e96\u30d5\u30a1\u30a4\u30eb\u3092\u793a\u3057\u307e\u3059\u3002
#EN reg.loggers=Number of loggers currently registered in the JVM: [{0}]. Details follow:
reg.loggers=JVM \u306b\u73fe\u5728\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u30ed\u30ac\u30fc\u306e\u6570: [{0}]\u3002\u8a73\u7d30: 
#EN logger.details.1=If the level is blank, it is inherited from parent logger
logger.details.1=\u30ec\u30d9\u30eb\u304c\u7a7a\u767d\u306e\u5834\u5408\u306f\u3001\u89aa\u30ed\u30ac\u30fc\u304b\u3089\u7d99\u627f\u3055\u308c\u307e\u3059\u3002
#EN logger.details.2=Parent logger is the nearest existing parent logger
logger.details.2=\u89aa\u30ed\u30ac\u30fc\u306f\u3001\u65e2\u5b58\u306e\u89aa\u30ed\u30ac\u30fc\u306e\u3046\u3061\u6700\u3082\u8fd1\u3044\u89aa\u30ed\u30ac\u30fc\u3067\u3059\u3002
#EN list.of.loggers=Logger Name | Logging Level | Parent Logger Name
list.of.loggers=\u30ed\u30ac\u30fc\u540d | \u30ed\u30b0\u30ec\u30d9\u30eb | \u89aa\u30ed\u30ac\u30fc\u540d
#EN create.threadpool.duplicate=Thread Pool named {0} already exists.
create.threadpool.duplicate={0} \u3068\u3044\u3046\u540d\u524d\u306e\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u306f\u3059\u3067\u306b\u5b58\u5728\u3057\u307e\u3059\u3002
#EN create.threadpool.failed=Creation of: {0} failed because of: {1}
create.threadpool.failed=\u6b21\u306e\u7406\u7531\u3067 {0} \u306e\u4f5c\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {1}
#EN create.threadpool.deprecated.workqueues=Deprecated Syntax: --workqueues option is deprecated for create-threadpool command.
create.threadpool.deprecated.workqueues=\u63a8\u5968\u3055\u308c\u3066\u3044\u306a\u3044\u69cb\u6587: --workqueues \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001create-threadpool \u30b3\u30de\u30f3\u30c9\u3067\u306f\u63a8\u5968\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002
#EN list.thread.pools.failed=List Thread Pools failed because of: {0}
list.thread.pools.failed=\u6b21\u306e\u7406\u7531\u3067\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u306e\u4e00\u89a7\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {0}
#EN delete.threadpool.notexists=Thread Pool named {0} does not exist.
delete.threadpool.notexists={0} \u3068\u3044\u3046\u540d\u524d\u306e\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u306f\u5b58\u5728\u3057\u307e\u305b\u3093\u3002
#EN delete.threadpool.failed=Delete Thread Pool failed because of: {0}
delete.threadpool.failed=\u6b21\u306e\u7406\u7531\u3067\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u306e\u524a\u9664\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {0}
