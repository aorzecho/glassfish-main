GET(1)                                                                  GET(1)

名称
       get - 获取可配置或可监视属性的值

提要
           get [--help] [--monitor[={true|false}]]
           (dotted-attribute--name)+

说明
       get 子命令使用带点名称获取 GlassFish Server
       元素的可配置属性或可监视属性的名称和值。

       可以使用 list(1)
       子命令来显示代表各个服务器组件和子系统的带点名称。例如，带点名称可能为
       server.applications.web-module。监视分层结构中的属性是只读的，但是可以使用
       set(1) 子命令修改配置属性。有关带点名称的详细信息，请参阅
       dotted-names(5ASC) 帮助页。

           注意
           ┌──────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
           │注                                                                                                            │
           │                                                                                                              │
           │           某些对 shell                                                                                       │
           │           或命令解释器具有特殊含义的字符，如                                                                 │
           │           *                                                                                                  │
           │           (星号)，应该括起来或进行转义，使之成为适合                                                         │
           │           shell                                                                                              │
           │           使用的形式，例如，通过将参数括在引号中。在多模式下，只有包括空格、引号或者反斜杠的参数才需要引号。 │
           └──────────────────────────────────────────────────────────────────────────────────────────────────────────────┘

       下表显示了带有 * (星号) 的 get 子命令的常规用法：

       get * 或 get *.*
           获取所有带点名称前缀的所有值。

       get domain* 或 get domain*.*
           获取以 domain 开头的带点名称的所有值。

       get *config*.*.*
           获取与 *config*.*  匹配的带点名称的所有值。

       get domain.j2ee-applications.*.ejb-module.*.*
           获取所有应用程序的所有 EJB 模块的所有值。

       get *web-modules.*.*
           获取应用程序中的所有 Web 模块或所有独立 Web 模块的所有值。

       get *.*.*.*
           获取所有包含四个部分的带点名称的所有值。

选项
       --help, -?
           显示子命令的帮助文本。

       --monitor 或 -m
           默认值为“假”。如果设置为“假”，则会返回可配置属性值。如果设置为“真”，则会返回可监视属性值。

操作数
       dotted-attribute-name
           标识点分记法中的属性名称。至少需要一个带点名称属性。点分记法是用于访问可配置实体属性的语法。

示例
       示例 1, 获取可配置元素的属性
           该示例获取 listener.http-listener-1 的属性。

               asadmin> get server.http-service.http-listener.http-listener-1.*
               server.http-service.http-listener.http-listener-1.acceptor-threads = 1
               server.http-service.http-listener.http-listener-1.address = 0.0.0.0
               server.http-service.http-listener.http-listener-1.blocking-enabled = false
               server.http-service.http-listener.http-listener-1.default-virtual-server = server
               server.http-service.http-listener.http-listener-1.enabled = true
               server.http-service.http-listener.http-listener-1.external-port =
               server.http-service.http-listener.http-listener-1.family = inet
               server.http-service.http-listener.http-listener-1.id = http-listener-1
               server.http-service.http-listener.http-listener-1.port = 8080
               server.http-service.http-listener.http-listener-1.redirect-port =
               server.http-service.http-listener.http-listener-1.security-enabled = false
               server.http-service.http-listener.http-listener-1.server-name =
               server.http-service.http-listener.http-listener-1.xpowered-by = true
               Command get executed successfully.

       示例 2, 获取可监视的对象
           该示例获取用于设置监视级别的配置属性，并显示已启用 (LOW 或 HIGH)
           还是禁用 (OFF) 这些属性。已启用 jvm 组件以进行监视。

               asadmin> get server.monitoring-service.module-monitoring-levels.*
               server.monitoring-service.module-monitoring-levels.connector-connection-pool=OFF
               server.monitoring-service.module-monitoring-levels.connector-service=OFF
               server.monitoring-service.module-monitoring-levels.d-trace=OFF
               server.monitoring-service.module-monitoring-levels.ejb-container=OFF
               server.monitoring-service.module-monitoring-levels.http-service=OFF
               server.monitoring-service.module-monitoring-levels.jdbc-connection-pool=OFF
               server.monitoring-service.module-monitoring-levels.jms-service=OFF
               server.monitoring-service.module-monitoring-levels.jvm=HIGH
               server.monitoring-service.module-monitoring-levels.orb=OFF
               server.monitoring-service.module-monitoring-levels.thread-pool=OFF
               server.monitoring-service.module-monitoring-levels.transaction-service=OFF
               server.monitoring-service.module-monitoring-levels.web-container=OFF
               Command get executed successfully.

       示例 3, 获取可监视对象的属性和值
           该示例可获取 jvm 可监视对象的所有属性和值。

               asadmin> get --monitor server.jvm.*
               server.jvm.HeapSize_Current = 45490176
               server.jvm.HeapSize_Description = Describes JvmHeapSize
               server.jvm.HeapSize_HighWaterMark = 45490176
               server.jvm.HeapSize_LastSampleTime = 1063217002433
               server.jvm.HeapSize_LowWaterMark = 0
               server.jvm.HeapSize_LowerBound = 0
               server.jvm.HeapSize_Name = JvmHeapSize
               server.jvm.HeapSize_StartTime = 1063238840055
               server.jvm.HeapSize_Unit = bytes
               server.jvm.HeapSize_UpperBound = 531628032
               server.jvm.UpTime_Count = 1063238840100
               server.jvm.UpTime_Description = Describes JvmUpTime
               server.jvm.UpTime_LastSampleTime = 1-63238840070
               server.jvm.UpTime_Name = JvmUpTime
               server.jvm.UpTime_StartTime = 1063217002430
               server.jvm.UpTime_Unit = milliseconds
               Command get executed successfully.

退出状态
       0
           已成功执行子命令

       1
           执行子命令时出现错误

另请参阅
       list(1)、set(1)

       dotted-names(5ASC)

       asadmin(1M)

       Oracle GlassFish Server Administration Guide

                              2009 年 9 月 14 日                        GET(1)
