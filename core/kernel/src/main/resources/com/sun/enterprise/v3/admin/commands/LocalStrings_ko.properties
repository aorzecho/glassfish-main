#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#EN create.jvm.options=creates JVM options in the Java configuration or profiler element of the domain.xml file.
create.jvm.options=Java \uAD6C\uC131\uC774\uB098 domain.xml \uD30C\uC77C\uC758 \uD504\uB85C\uD30C\uC77C\uB7EC \uC694\uC18C\uC5D0\uC11C JVM \uC635\uC158\uC744 \uC0DD\uC131\uD569\uB2C8\uB2E4.
#EN create.jvm.options.jvm_option_name=The left side of the equal sign (=) is the JVM option name. The right side of the equal sign (=) is the JVM option value. A colon (:) is a delimiter for multiple options.
create.jvm.options.jvm_option_name=\uB4F1\uD638(=)\uC758 \uC67C\uCABD\uC740 JVM \uC635\uC158 \uC774\uB984\uC785\uB2C8\uB2E4. \uB4F1\uD638(=)\uC758 \uC624\uB978\uCABD\uC740 JVM \uC635\uC158 \uAC12\uC785\uB2C8\uB2E4. \uCF5C\uB860(:)\uC740 \uC5EC\uB7EC \uC635\uC158\uC5D0 \uC0AC\uC6A9\uD558\uB294 \uAD6C\uBD84 \uAE30\uD638\uC785\uB2C8\uB2E4.
#EN create.jvm.options.usagetext=create-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
create.jvm.options.usagetext=create-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
#EN delete.jvm.options=removes JVM options from the Java configuration or profiler elements of the domain.xml file
delete.jvm.options=Java \uAD6C\uC131\uC774\uB098 domain.xml \uD30C\uC77C\uC758 \uD504\uB85C\uD30C\uC77C\uB7EC \uC694\uC18C\uC5D0\uC11C JVM \uC635\uC158\uC744 \uC81C\uAC70\uD569\uB2C8\uB2E4.
#EN delete.jvm.options.jvm_option_name=The left side of the equal sign (=) is the JVM option name. The right side of the equal sign (=) is the JVM option value. A colon (:) is a delimiter for multiple options.
delete.jvm.options.jvm_option_name=\uB4F1\uD638(=)\uC758 \uC67C\uCABD\uC740 JVM \uC635\uC158 \uC774\uB984\uC785\uB2C8\uB2E4. \uB4F1\uD638(=)\uC758 \uC624\uB978\uCABD\uC740 JVM \uC635\uC158 \uAC12\uC785\uB2C8\uB2E4. \uCF5C\uB860(:)\uC740 \uC5EC\uB7EC \uC635\uC158\uC5D0 \uC0AC\uC6A9\uD558\uB294 \uAD6C\uBD84 \uAE30\uD638\uC785\uB2C8\uB2E4.
#EN delete.jvm.options.usagetext=delete-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
delete.jvm.options.usagetext=delete-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
#EN list.jvm.options=lists JVM options in the Java configuration or profiler element of the domain.xml file.
list.jvm.options=Java \uAD6C\uC131\uC774\uB098 domain.xml \uD30C\uC77C\uC758 \uD504\uB85C\uD30C\uC77C\uB7EC \uC694\uC18C\uC5D0\uC11C JVM \uC635\uC158\uC744 \uB098\uC5F4\uD569\uB2C8\uB2E4.
#EN list.jvm.options.success=Listing configured JVM Options and Java System Properties on given target successful
list.jvm.options.success=\uC9C0\uC815\uB41C \uB300\uC0C1\uC5D0 \uAD6C\uC131\uB41C JVM \uC635\uC158 \uBC0F Java \uC2DC\uC2A4\uD15C \uC18D\uC131\uC744 \uC131\uACF5\uC801\uC73C\uB85C \uB098\uC5F4\uD588\uC2B5\uB2C8\uB2E4.
#EN list.jvm.options.failed=Listing JVM options failed on given target for following reason: {0}
list.jvm.options.failed=\uB2E4\uC74C \uC774\uC720\uB85C \uC9C0\uC815\uB41C \uB300\uC0C1\uC5D0\uC11C JVM \uC635\uC158\uC744 \uB098\uC5F4\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4. {0}
#EN create.jvm.options.success=Creating the given Option(s) on given target successful
create.jvm.options.success=\uC9C0\uC815\uB41C \uB300\uC0C1\uC5D0\uC11C \uC9C0\uC815\uB41C \uC635\uC158\uC744 \uC131\uACF5\uC801\uC73C\uB85C \uC0DD\uC131\uD588\uC2B5\uB2C8\uB2E4.
#EN delete.jvm.options.success=Deleting the given Option(s) on given target successful
delete.jvm.options.success=\uC9C0\uC815\uB41C \uB300\uC0C1\uC5D0\uC11C \uC9C0\uC815\uB41C \uC635\uC158\uC744 \uC131\uACF5\uC801\uC73C\uB85C \uC0AD\uC81C\uD588\uC2B5\uB2C8\uB2E4.
#EN delete.jvm.options.failed=Deleting given option(s) on given target failed for following reason,\nthe current options in configuration have been retained
delete.jvm.options.failed=\uB2E4\uC74C \uC774\uC720\uB85C \uC9C0\uC815\uB41C \uB300\uC0C1\uC5D0\uC11C \uC9C0\uC815\uB41C \uC635\uC158\uC744 \uC0AD\uC81C\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.\n\uD604\uC7AC \uAD6C\uC131 \uC635\uC158\uC774 \uC720\uC9C0\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
#EN create.profiler.first=No profiler configured yet. Create a profiler first.
create.profiler.first=\uD504\uB85C\uD30C\uC77C\uB7EC\uAC00 \uC544\uC9C1 \uAD6C\uC131\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4. \uBA3C\uC800 \uD504\uB85C\uD30C\uC77C\uB7EC\uB97C \uC0DD\uC131\uD558\uC2ED\uC2DC\uC624.
#EN created.message=Created {0} option(s)
created.message={0} \uC635\uC158\uC744 \uC0DD\uC131\uD588\uC2B5\uB2C8\uB2E4.
#EN no.option.created=No jvm-options were created (perhaps they were already present)
no.option.created=jvm-options\uAC00 \uC0DD\uC131\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4. \uC774\uBBF8 \uC788\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4.
#EN deleted.message=Deleted {0} option(s)
deleted.message={0} \uC635\uC158\uC744 \uC0AD\uC81C\uD588\uC2B5\uB2C8\uB2E4.
#EN no.option.deleted=No jvm-options were deleted (perhaps they never existed in the configuration)
no.option.deleted=jvm-options\uAC00 \uC0AD\uC81C\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4. \uAD6C\uC131\uC5D0 \uC5C6\uC5C8\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4.
#EN joe.exists=JVM option {0} already exists in the configuration.
joe.exists=JVM \uC635\uC158 {0}\uC774(\uAC00) \uAD6C\uC131\uC5D0 \uC874\uC7AC\uD569\uB2C8\uB2E4. 
#EN joe.invalid.start=JVM option {0} is invalid because it does not start with a ''-''
joe.invalid.start=JVM \uC635\uC158 {0}\uC774(\uAC00) ''-''\uB85C \uC2DC\uC791\uD558\uC9C0 \uC54A\uC73C\uBBC0\uB85C \uBD80\uC801\uD569\uD569\uB2C8\uB2E4.
#EN joe.invalid.cmd.syntax=The command line:{0} does not satisfy the syntax.\nIn a nutshell, all options should start with a ''-'', multiple options are separated by a '':''.\nA '':'' inside an option should be escaped with a ''\\''.\nSince shell interprets command arguments, make sure you quote it.\n
joe.invalid.cmd.syntax=\uBA85\uB839\uD589: {0}\uC774(\uAC00) \uAD6C\uBB38\uC744 \uB9CC\uC871\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.\nnutshell\uC5D0\uC11C \uBAA8\uB4E0 \uC635\uC158\uC740 "-"\uB85C \uC2DC\uC791\uD558\uACE0, \uC635\uC158\uC774 \uC5EC\uB7EC \uAC1C\uC77C \uACBD\uC6B0 ":"\uC73C\uB85C \uAD6C\uBD84\uB429\uB2C8\uB2E4.\n\uC635\uC158 \uB0B4\uBD80\uC758 ":"\uC740 "\\"\uB85C \uC774\uC2A4\uCF00\uC774\uD504\uB429\uB2C8\uB2E4.\n\uC258\uC774 \uBA85\uB839 \uC778\uC218\uB97C \uD574\uC11D\uD558\uBBC0\uB85C \uB530\uC634\uD45C\uB85C \uBB36\uC5B4\uC57C \uD569\uB2C8\uB2E4.\n
#EN soft.invalid.xmx=It appears that given JVM option {0} represents invalid maximum heap for the JVM. Ensure that it is valid, by doing list-jvm-options.
soft.invalid.xmx=\uC9C0\uC815\uB41C JVM \uC635\uC158 {0}\uC774(\uAC00) JVM\uC758 \uBD80\uC801\uD569\uD55C \uCD5C\uB300 \uD799\uC744 \uB098\uD0C0\uB0B4\uB294 \uAC83 \uAC19\uC2B5\uB2C8\uB2E4. list-jvm-options\uB97C \uC218\uD589\uD558\uC5EC \uC801\uD569\uD55C\uC9C0 \uD655\uC778\uD558\uC2ED\uC2DC\uC624.
#EN soft.xmx.exists=The configuration already has maximum heap size specified: {0}. Verify the java configuration by doing list-jvm-options.
soft.xmx.exists=\uAD6C\uC131\uC5D0 \uC774\uBBF8 \uCD5C\uB300 \uD799 \uD06C\uAE30\uAC00 \uC9C0\uC815\uB418\uC5B4 \uC788\uC2B5\uB2C8\uB2E4. {0}. list-jvm-options\uB97C \uC218\uD589\uD558\uC5EC Java \uAD6C\uC131\uC744 \uD655\uC778\uD558\uC2ED\uC2DC\uC624.
#EN soft.xmx.smaller.than.xms=It appears that the maximum heap size specified: {0} is smaller than the minimum heap size in the configuration: {1}. JVM might not start. Ensure that this is valid, by doing doing list-jvm-options.
soft.xmx.smaller.than.xms=\uC9C0\uC815\uB41C \uCD5C\uB300 \uD799 \uD06C\uAE30 {0}\uC774(\uAC00) \uAD6C\uC131\uC758 \uCD5C\uC18C \uD799 \uD06C\uAE30 {1}\uBCF4\uB2E4 \uC791\uC740 \uAC83 \uAC19\uC2B5\uB2C8\uB2E4. JVM\uC744 \uC2DC\uC791\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. list-jvm-options\uB97C \uC218\uD589\uD558\uC5EC \uC801\uD569\uD55C\uC9C0 \uD655\uC778\uD558\uC2ED\uC2DC\uC624.
#EN soft.invalid.xms=It appears that given JVM option {0} represents invalid initial heap for the JVM. Ensure that it is valid, by doing list-jvm-options.
soft.invalid.xms=\uC9C0\uC815\uB41C JVM \uC635\uC158 {0}\uC774(\uAC00) JVM\uC758 \uBD80\uC801\uD569\uD55C \uCD08\uAE30 \uD799\uC744 \uB098\uD0C0\uB0B4\uB294 \uAC83 \uAC19\uC2B5\uB2C8\uB2E4. list-jvm-options\uB97C \uC218\uD589\uD558\uC5EC \uC801\uD569\uD55C\uC9C0 \uD655\uC778\uD558\uC2ED\uC2DC\uC624.
#EN soft.xms.exists=The configuration already has initial heap size specified: {0}. Verify the java configuration by doing list-jvm-options.
soft.xms.exists=\uAD6C\uC131\uC5D0 \uC774\uBBF8 \uCD08\uAE30 \uD799 \uD06C\uAE30\uAC00 \uC9C0\uC815\uB418\uC5B4 \uC788\uC2B5\uB2C8\uB2E4. {0}. list-jvm-options\uB97C \uC218\uD589\uD558\uC5EC Java \uAD6C\uC131\uC744 \uD655\uC778\uD558\uC2ED\uC2DC\uC624.
#EN soft.xms.larger.than.xmx=It appears that the initial heap size specified: {0} is larger than the maximum heap size in the configuration: {1}. JVM might not start. Ensure that this is valid, by doing doing list-jvm-options.
soft.xms.larger.than.xmx=\uC9C0\uC815\uB41C \uCD08\uAE30 \uD799 \uD06C\uAE30 {0}\uC774(\uAC00) \uAD6C\uC131\uC758 \uCD5C\uB300 \uD799 \uD06C\uAE30 {1}\uBCF4\uB2E4 \uD070 \uAC83 \uAC19\uC2B5\uB2C8\uB2E4. JVM\uC744 \uC2DC\uC791\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. list-jvm-options\uB97C \uC218\uD589\uD558\uC5EC \uC801\uD569\uD55C\uC9C0 \uD655\uC778\uD558\uC2ED\uC2DC\uC624.
#Generate JVM Report
#EN server.unreachable=The server {0} seems to be unreachable. This means either it is not running or there is an internal communication error.
server.unreachable=\uC11C\uBC84 {0}\uC5D0 \uC5F0\uACB0\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uC774\uB294 \uC11C\uBC84\uAC00 \uC2E4\uD589 \uC911\uC774 \uC544\uB2C8\uAC70\uB098 \uB0B4\uBD80 \uD1B5\uC2E0 \uC624\uB958\uAC00 \uC788\uB294 \uAC83\uC744 \uC758\uBBF8\uD569\uB2C8\uB2E4.
#EN td.title=Full Java Thread Dump {0} {1} {2}
td.title=\uC804\uCCB4 Java \uC2A4\uB808\uB4DC \uB364\uD504 {0} {1} {2}
#EN thread.no=Number of threads: {0}
thread.no=\uC2A4\uB808\uB4DC \uC218: {0}
#EN daemon.thread.no=Number of daemon threads: {0}
daemon.thread.no=\uB370\uBAAC \uC2A4\uB808\uB4DC \uC218: {0}
#EN peak.thread.no=Peak live thread count since the Java virtual machine started or peak was reset: {0}
peak.thread.no=JVM\uC774 \uC2DC\uC791\uB418\uAC70\uB098 \uCD5C\uB300\uAC12\uC744 \uB2E4\uC2DC \uC124\uC815\uD55C \uC774\uD6C4\uC758 \uCD5C\uB300 \uB77C\uC774\uBE0C \uC2A4\uB808\uB4DC \uC218: {0}
#EN thread.contention.monitoring.supported=Is support for thread contention monitoring available on this JVM? [{0}]
thread.contention.monitoring.supported=\uC774 JVM\uC5D0\uC11C \uC2A4\uB808\uB4DC \uCDA9\uB3CC \uBAA8\uB2C8\uD130\uB9C1\uC744 \uC9C0\uC6D0\uD569\uB2C8\uAE4C? [{0}]
#EN thread.contention.monitoring.enabled=Is thread contention monitoring enabled? [{0}]. If false, some thread synchronization statistics are not be available.
thread.contention.monitoring.enabled=\uC2A4\uB808\uB4DC \uCDA9\uB3CC \uBAA8\uB2C8\uD130\uB9C1\uC774 \uC0AC\uC6A9\uC73C\uB85C \uC124\uC815\uB418\uC5B4 \uC788\uC2B5\uB2C8\uAE4C? [{0}]. false\uC778 \uACBD\uC6B0 \uC77C\uBD80 \uC2A4\uB808\uB4DC \uB3D9\uAE30\uD654 \uD1B5\uACC4\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
#EN thread.cputime.supported=Is support for CPU time measurement for any thread available on this JVM? [{0}]
thread.cputime.supported=\uC774 JVM\uC5D0\uC11C \uC2A4\uB808\uB4DC\uC5D0 \uB300\uD55C CPU \uC2DC\uAC04 \uCE21\uC815\uC744 \uC9C0\uC6D0\uD569\uB2C8\uAE4C? [{0}]
#EN thread.cputime.enabled=Is thread CPU time measurement enabled? [{0}]. If false, thread execution times are not available for any thread.
thread.cputime.enabled=\uC2A4\uB808\uB4DC CPU \uC2DC\uAC04 \uCE21\uC815\uC774 \uC0AC\uC6A9\uC73C\uB85C \uC124\uC815\uB418\uC5B4 \uC788\uC2B5\uB2C8\uAE4C? [{0}]. false\uC778 \uACBD\uC6B0 \uC2A4\uB808\uB4DC\uC5D0 \uB300\uD574 \uC2A4\uB808\uB4DC \uC2E4\uD589 \uC2DC\uAC04\uC744 \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
#EN execution.info=Thread Execution Information:
execution.info=\uC2A4\uB808\uB4DC \uC2E4\uD589 \uC815\uBCF4:
#EN thread.title=Thread {0} thread-id: {1} thread-state: {2}
thread.title={0} \uC2A4\uB808\uB4DC thread-id: {1} thread-state: {2}
#EN thread.waiting.on=Waiting on lock: {0}
thread.waiting.on=\uC7A0\uAE08 \uB300\uAE30 \uC911: {0}
#EN thread.suspended=Suspended
thread.suspended=\uC77C\uC9C0 \uC911\uC9C0\uB428
#EN thread.in.native=Running in native
thread.in.native=\uC6D0\uC2DC\uC5D0\uC11C \uC2E4\uD589 \uC911
#EN thread.stack.element=\t at: {0}
thread.stack.element=\t \uC704\uCE58: {0}
#EN no.deadlock=No deadlock found
no.deadlock=\uAD50\uCC29 \uC0C1\uD0DC\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
#EN sync.info=Thread Synchronization Statistics:
sync.info=\uC2A4\uB808\uB4DC \uB3D9\uAE30\uD654 \uD1B5\uACC4:
#EN thread.blocked.times=Number of times this thread was blocked (to enter/reenter a Monitor): {0}
thread.blocked.times=\uC774 \uC2A4\uB808\uB4DC\uAC00 \uCC28\uB2E8\uB41C \uD69F\uC218(\uBAA8\uB2C8\uD130 \uC785\uB825/\uB2E4\uC2DC \uC785\uB825): {0}
#EN thread.blocked.totaltime=Total (approximate) time the thread was in BLOCKED state: {0} milliseconds since thread contention monitoring was last enabled.
thread.blocked.totaltime=\uC2A4\uB808\uB4DC\uAC00 BLOCKED \uC0C1\uD0DC\uC5D0 \uC788\uB294 \uCD1D(\uB300\uB7B5) \uC2DC\uAC04: \uC2A4\uB808\uB4DC \uCDA9\uB3CC \uBAA8\uB2C8\uD130\uB9C1\uC774 \uB9C8\uC9C0\uB9C9\uC73C\uB85C \uC0AC\uC6A9\uC73C\uB85C \uC124\uC815\uB41C \uD6C4 {0}\uBC00\uB9AC\uCD08.
#EN thread.total.cpu.time=Total CPU time for this thread: {0} seconds {1} nanoseconds.
thread.total.cpu.time=\uC774 \uC2A4\uB808\uB4DC\uC5D0 \uB300\uD55C \uCD1D CPU \uC2DC\uAC04: {0}\uCD08 {1}\uB098\uB178\uCD08.
#EN thread.cpu.user.time=User-level CPU time for this thread: {0} seconds {1} nanoseconds.
thread.cpu.user.time=\uC774 \uC2A4\uB808\uB4DC\uC5D0 \uB300\uD55C \uC0AC\uC6A9\uC790 \uB808\uBCA8\uC758 CPU \uC2DC\uAC04: {0}\uCD08 {1}\uB098\uB178\uCD08.
#EN wait.times=Number of times this thread waited for a notification (i.e. it was in WAITING or TIMED_WAITING state): {0}
wait.times=\uC774 \uC2A4\uB808\uB4DC\uAC00 \uC54C\uB9BC\uC5D0 \uB300\uD574 \uB300\uAE30 \uC911\uC778 \uD69F\uC218(\uC989, WAITING \uB610\uB294 TIMED_WAITING \uC0C1\uD0DC\uC5D0 \uC788\uC74C): {0}
#EN lock.owner.details=This thread is blocked waiting on lock owned currently by thread named: {0}, id: {1}
lock.owner.details=\uC774 \uC2A4\uB808\uB4DC\uB294 \uD604\uC7AC \uB2E4\uC74C \uC774\uB984\uC758 \uC2A4\uB808\uB4DC\uC5D0 \uC758\uD574 \uC18C\uC720\uB418\uC5B4 \uC7A0\uAE08 \uB300\uAE30 \uC0C1\uD0DC\uB85C \uCC28\uB2E8\uB418\uC5C8\uC2B5\uB2C8\uB2E4. {0}, ID: {1}
#EN monitor.info=Object Monitors currently held or requested by this thread: {0}
monitor.info=\uD604\uC7AC \uC774 \uC2A4\uB808\uB4DC\uC5D0 \uC758\uD574 \uBCF4\uAD00\uB418\uAC70\uB098 \uC694\uCCAD\uB41C \uAC1D\uCCB4 \uBAA8\uB2C8\uD130: {0}
#EN ownable.sync.info=Ownable Synchronizers (e.g. ReentrantLock and ReentrantReadWriteLock) held by this thread: {0}
ownable.sync.info=\uC774 \uC2A4\uB808\uB4DC\uC5D0 \uC758\uD574 \uBCF4\uAD00\uB41C \uC18C\uC720 \uAC00\uB2A5\uD55C \uB3D9\uAE30\uD654 \uC7A5\uCE58(\uC608: ReentrantLock \uBC0F ReentrantReadWriteLock): {0}
#EN deadlocks.found=Following thread(s) were deadlocked:
deadlocks.found=\uB2E4\uC74C \uC2A4\uB808\uB4DC\uAC00 \uAD50\uCC29 \uC0C1\uD0DC\uC5D0 \uC788\uC2B5\uB2C8\uB2E4.
#EN m2hms={0} Hours {1} Minutes {2} Seconds
m2hms={0}\uC2DC\uAC04 {1}\uBD84 {2}\uCD08
#EN m2sms={0} Seconds {1} Milliseconds
m2sms={0}\uCD08 {1}\uBC00\uB9AC\uCD08
#EN uptime=The uptime of Java Virtual Machine: {0}
uptime=JVM(Java Virtual Machine)\uC758 \uAC00\uB3D9 \uC2DC\uAC04: {0}
#EN memory.pool.name=Memory Pool Name: {0}
memory.pool.name=\uBA54\uBAA8\uB9AC \uD480 \uC774\uB984: {0}
#EN memory.usage.init=Memory that Java Virtual Machine initially requested to the Operating System: {0} Bytes
memory.usage.init=JVM(Java Virtual Machine)\uC5D0\uC11C \uCC98\uC74C\uC5D0 \uC6B4\uC601 \uCCB4\uC81C\uC5D0 \uC694\uCCAD\uD55C \uBA54\uBAA8\uB9AC: {0}\uBC14\uC774\uD2B8
#EN memory.usage.comm=Memory that Java Virtual Machine is guaranteed to receive from the Operating System: {0} Bytes
memory.usage.comm=JVM(Java Virtual Machine)\uC774 \uC6B4\uC601 \uCCB4\uC81C\uC5D0\uC11C \uBC1B\uB3C4\uB85D \uBCF4\uC7A5\uB41C \uBA54\uBAA8\uB9AC: {0}\uBC14\uC774\uD2B8
#EN memory.usage.max=Maximum Memory that Java Virtual Machine may get from the Operating System: {0} Bytes. Note that this is not guaranteed.
memory.usage.max=JVM(Java Virtual Machine)\uC774 \uC6B4\uC601 \uCCB4\uC81C\uC5D0\uC11C \uBC1B\uC744 \uC218 \uC788\uB294 \uCD5C\uB300 \uBA54\uBAA8\uB9AC: {0}\uBC14\uC774\uD2B8. \uC774 \uAC12\uC740 \uBCF4\uC7A5\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
#EN memory.usage.used=Memory that Java Virtual Machine uses at this time: {0} Bytes
memory.usage.used=JVM(Java Virtual Machine)\uC774 \uD604\uC7AC \uC0AC\uC6A9\uD558\uB294 \uBA54\uBAA8\uB9AC: {0}\uBC14\uC774\uD2B8
#EN gc.name=Name of the Garbage Collector: {0}
gc.name=\uBD88\uD544\uC694\uD55C \uC815\uBCF4 \uC218\uC9D1\uAE30 \uC774\uB984: {0}
#EN gc.numcol=Number of collections occurred using this garbage collector: {0} Bytes
gc.numcol=\uC774 \uBD88\uD544\uC694\uD55C \uC815\uBCF4 \uC218\uC9D1\uAE30\uB97C \uC0AC\uC6A9\uD558\uC5EC \uBC1C\uC0DD\uD55C \uBAA8\uC74C\uC758 \uC218: {0}\uBC14\uC774\uD2B8
#EN gc.coltime=Garbage Collection Time: {0}
gc.coltime=\uBD88\uD544\uC694\uD55C \uC815\uBCF4 \uC218\uC9D1 \uC2DC\uAC04: {0}
#EN heap.mem.usage=Heap Memory Usage:
heap.mem.usage=\uD799 \uBA54\uBAA8\uB9AC \uC0AC\uC6A9:
#EN nonheap.mem.usage=Non-heap Memory Usage:
nonheap.mem.usage=\uD799\uC774 \uC544\uB2CC \uBA54\uBAA8\uB9AC \uC0AC\uC6A9:
#EN obj.fin.pending=Approximate number of objects for which finalization is pending: {0}
obj.fin.pending=\uC644\uC131\uC744 \uBCF4\uB958 \uC911\uC778 \uB300\uB7B5\uC801\uC778 \uAC1D\uCCB4 \uC218: {0}
#EN classloading.info=Class loading and unloading in the Java Virtual Machine:
classloading.info=JVM(Java Virtual Machine)\uC5D0\uC11C\uC758 \uD074\uB798\uC2A4 \uB85C\uB4DC \uBC0F \uC5B8\uB85C\uB4DC:
#EN classes.loaded=Number of classes currently loaded in the Java Virtual Machine: {0}
classes.loaded=\uD604\uC7AC JVM(Java Virtual Machine)\uC5D0 \uB85C\uB4DC\uB41C \uD074\uB798\uC2A4 \uC218: {0}
#EN classes.total=Number of classes loaded in the Java Virtual Machine since the startup: {0}
classes.total=\uC2DC\uC791 \uD6C4 JVM(Java Virtual Machine)\uC5D0 \uB85C\uB4DC\uB41C \uD074\uB798\uC2A4 \uC218: {0}
#EN classes.unloaded=Number of classes unloaded from the Java Virtual Machine: {0}
classes.unloaded=JVM(Java Virtual Machine)\uC5D0\uC11C \uC5B8\uB85C\uB4DC\uB41C \uD074\uB798\uC2A4 \uC218: {0}
#EN complilation.info=Just-in-time (JIT) compilation information in the Java Virtual Machine:
complilation.info=JVM(Java Virtual Machine)\uC758 JIT(Just-in-time) \uCEF4\uD30C\uC77C \uC815\uBCF4:
#EN compilation.monitor.status=Java Virtual Machine compilation monitoring allowed: {0}
compilation.monitor.status=\uD5C8\uC6A9\uB418\uB294 JVM(Java Virtual Machine) \uCEF4\uD30C\uC77C \uBAA8\uB2C8\uD130\uB9C1: {0}
#EN jit.compilar.name=Name of the Just-in-time (JIT) compiler: {0}
jit.compilar.name=JIT(Just-in-time) \uCEF4\uD30C\uC77C\uB7EC \uC774\uB984: {0}
#EN compilation.time=Total time spent in compilation: {0}
compilation.time=\uCEF4\uD30C\uC77C\uC5D0 \uC18C\uC694\uB41C \uCD1D \uC2DC\uAC04: {0}
#EN os.info=Operating System Information:
os.info=\uC6B4\uC601 \uCCB4\uC81C \uC815\uBCF4:
#EN os.name=Name of the Operating System: {0}
os.name=\uC6B4\uC601 \uCCB4\uC81C \uC774\uB984: {0}
#EN os.arch=Binary Architecture name of the Operating System: {0}, Version: {1}
os.arch=\uC6B4\uC601 \uCCB4\uC81C\uC758 \uC774\uC9C4 \uAD6C\uC870 \uC774\uB984: {0}, \uBC84\uC804: {1}
#EN os.nproc=Number of processors available on the Operating System: {0}
os.nproc=\uC6B4\uC601 \uCCB4\uC81C\uC5D0\uC11C \uC0AC\uC6A9\uD560 \uC218 \uC788\uB294 \uD504\uB85C\uC138\uC11C \uC218: {0}
#EN os.load=System load on the available processors for the last minute: {0}. (Sum of running and queued runnable entities per minute)
os.load=\uB9E8 \uB9C8\uC9C0\uB9C9\uC5D0 \uC0AC\uC6A9\uD560 \uC218 \uC788\uB294 \uD504\uB85C\uC138\uC11C\uC5D0 \uC2DC\uC2A4\uD15C \uB85C\uB4DC: {0}. (\uC2E4\uD589 \uC911 \uBC0F \uB300\uAE30\uC5F4\uC5D0 \uC788\uB294 \uC2E4\uD589 \uAC00\uB2A5\uD55C \uBD84\uB2F9 \uD56D\uBAA9\uC758 \uD569)
#EN rt.info=General Java Runtime Environment Information for the VM: {0}
rt.info=VM\uC758 \uC77C\uBC18 JRE(Java Runtime Environment) \uC815\uBCF4: {0}
#EN rt.bcp=JRE BootClassPath: {0}
rt.bcp=JRE BootClassPath: {0}
#EN rt.cp=JRE ClassPath: {0}
rt.cp=JRE ClassPath: {0}
#EN rt.libpath=JRE Native Library Path: {0}
rt.libpath=JRE \uC6D0\uC2DC \uB77C\uC774\uBE0C\uB7EC\uB9AC \uACBD\uB85C: {0}
#EN rt.nvv=JRE name: {0} Vendor: {1} Version: {2}
rt.nvv=JRE \uC774\uB984: {0} \uACF5\uAE09\uC5C5\uCCB4: {1} \uBC84\uC804: {2}
#EN rt.sysprops=List of System Properties for the Java Virtual Machine:
rt.sysprops=JVM(Java Virtual Machine)\uC5D0 \uB300\uD55C \uC2DC\uC2A4\uD15C \uC18D\uC131 \uBAA9\uB85D:
#EN summary.title=**** Java Virtual Machine [App Server Instance Name: {0}] Summary ****
summary.title=**** JVM[Application Server \uC778\uC2A4\uD134\uC2A4 \uC774\uB984: {0}] \uC694\uC57D ****
#EN class.info.title=**** Class Statistics for Java Virtual Machine [App Server Instance Name: {0}] ****
class.info.title=**** JVM\uC758 \uD074\uB798\uC2A4 \uD1B5\uACC4[Application Server \uC778\uC2A4\uD134\uC2A4 \uC774\uB984: {0}] ****
#EN thread.dump.title=**** Thread Dump for Java Virtual Machine [App Server Instance Name: {0}] ****
thread.dump.title=**** JVM\uC758 \uC2A4\uB808\uB4DC \uB364\uD504[Application Server \uC778\uC2A4\uD134\uC2A4 \uC774\uB984: {0}] ****
#EN memory.info.title=**** Memory (Perm Gen, Eden Space etc.) Information for Java Virtual Machine [App Server Instance Name: {0}] ****
memory.info.title=**** JVM\uC758 \uBA54\uBAA8\uB9AC(Perm Gen, Eden Space \uB4F1) \uC815\uBCF4[Application Server \uC778\uC2A4\uD134\uC2A4 \uC774\uB984: {0}] ****
#logging information
#EN logging.config.file=Effective logging properties file:[{0}]. If null, it indicates JRE standard file.
logging.config.file=\uD6A8\uC728\uC801\uC778 \uB85C\uAE45 \uC18D\uC131 \uD30C\uC77C:[{0}]. \uB110\uC77C \uACBD\uC6B0 JRE \uD45C\uC900 \uD30C\uC77C\uC744 \uB098\uD0C0\uB0C5\uB2C8\uB2E4.
#EN reg.loggers=Number of loggers currently registered in the JVM: [{0}]. Details follow:
reg.loggers=\uD604\uC7AC JVM\uC5D0 \uB4F1\uB85D\uB41C \uB85C\uAC70 \uC218: [{0}]. \uC138\uBD80 \uC815\uBCF4\uB294 \uB2E4\uC74C\uACFC \uAC19\uC2B5\uB2C8\uB2E4.
#EN logger.details.1=If the level is blank, it is inherited from parent logger
logger.details.1=\uB808\uBCA8\uC774 \uBE44\uC5B4 \uC788\uC73C\uBA74 \uC0C1\uC704 \uB85C\uAC70\uC5D0\uC11C \uC0C1\uC18D\uB429\uB2C8\uB2E4.
#EN logger.details.2=Parent logger is the nearest existing parent logger
logger.details.2=\uC0C1\uC704 \uB85C\uAC70\uB294 \uAC00\uC7A5 \uADFC\uC811\uD55C \uAE30\uC874\uC758 \uC0C1\uC704 \uB85C\uAC70\uC785\uB2C8\uB2E4.
#EN list.of.loggers=Logger Name | Logging Level | Parent Logger Name
list.of.loggers=\uB85C\uAC70 \uC774\uB984 | \uB85C\uAE45 \uB808\uBCA8| \uC0C1\uC704 \uB85C\uAC70 \uC774\uB984
#EN create.threadpool.duplicate=Thread Pool named {0} already exists.
create.threadpool.duplicate=\uC774\uB984\uC774 {0}\uC778 \uC2A4\uB808\uB4DC \uD480\uC774 \uC874\uC7AC\uD569\uB2C8\uB2E4.
#EN create.threadpool.failed=Creation of: {0} failed because of: {1}
create.threadpool.failed={1} \uB54C\uBB38\uC5D0 {0}\uC744(\uB97C) \uC0DD\uC131\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
#EN create.threadpool.deprecated.workqueues=Deprecated Syntax: --workqueues option is deprecated for create-threadpool command.
create.threadpool.deprecated.workqueues=\uB354 \uC774\uC0C1 \uC0AC\uC6A9\uB418\uC9C0 \uC54A\uB294 \uAD6C\uBB38: --workqueues \uC635\uC158\uC740 create-threadpool \uBA85\uB839\uC5D0 \uB354 \uC774\uC0C1 \uC0AC\uC6A9\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
#EN list.thread.pools.failed=List Thread Pools failed because of: {0}
list.thread.pools.failed={0} \uB54C\uBB38\uC5D0 \uC2A4\uB808\uB4DC \uD480\uC744 \uB098\uC5F4\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
#EN delete.threadpool.notexists=Thread Pool named {0} does not exist.
delete.threadpool.notexists=\uC774\uB984\uC774 {0}\uC778 \uC2A4\uB808\uB4DC \uD480\uC774 \uC874\uC7AC\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
#EN delete.threadpool.failed=Delete Thread Pool failed because of: {0}
delete.threadpool.failed={0} \uB54C\uBB38\uC5D0 \uC2A4\uB808\uB4DC \uD480\uC744 \uC0AD\uC81C\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
