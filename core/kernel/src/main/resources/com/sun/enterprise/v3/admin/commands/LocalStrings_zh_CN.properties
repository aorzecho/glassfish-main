#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#EN create.jvm.options=creates JVM options in the Java configuration or profiler element of the domain.xml file.
create.jvm.options=\u5728 domain.xml \u6587\u4ef6\u7684 Java \u914d\u7f6e\u6216\u914d\u7f6e\u7a0b\u5e8f\u5143\u7d20\u4e2d\u521b\u5efa JVM \u9009\u9879\u3002
#EN create.jvm.options.jvm_option_name=The left side of the equal sign (=) is the JVM option name. The right side of the equal sign (=) is the JVM option value. A colon (:) is a delimiter for multiple options.
create.jvm.options.jvm_option_name=\u7b49\u53f7 (=) \u5de6\u4fa7\u662f JVM \u9009\u9879\u540d\u79f0\u3002\u7b49\u53f7 (=) \u53f3\u4fa7\u662f JVM \u9009\u9879\u503c\u3002\u5192\u53f7 (:) \u662f\u591a\u4e2a\u9009\u9879\u7684\u5206\u9694\u7b26\u3002
#EN create.jvm.options.usagetext=create-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
create.jvm.options.usagetext=create-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
#EN delete.jvm.options=removes JVM options from the Java configuration or profiler elements of the domain.xml file
delete.jvm.options=\u4ece domain.xml \u6587\u4ef6\u7684 Java \u914d\u7f6e\u6216\u914d\u7f6e\u7a0b\u5e8f\u5143\u7d20\u4e2d\u5220\u9664 JVM \u9009\u9879
#EN delete.jvm.options.jvm_option_name=The left side of the equal sign (=) is the JVM option name. The right side of the equal sign (=) is the JVM option value. A colon (:) is a delimiter for multiple options.
delete.jvm.options.jvm_option_name=\u7b49\u53f7 (=) \u5de6\u4fa7\u662f JVM \u9009\u9879\u540d\u79f0\u3002\u7b49\u53f7 (=) \u53f3\u4fa7\u662f JVM \u9009\u9879\u503c\u3002\u5192\u53f7 (:) \u662f\u591a\u4e2a\u9009\u9879\u7684\u5206\u9694\u7b26\u3002
#EN delete.jvm.options.usagetext=delete-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
delete.jvm.options.usagetext=delete-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
#EN list.jvm.options=lists JVM options in the Java configuration or profiler element of the domain.xml file.
list.jvm.options=\u5217\u51fa domain.xml \u6587\u4ef6\u7684 Java \u914d\u7f6e\u6216\u914d\u7f6e\u7a0b\u5e8f\u5143\u7d20\u4e2d\u7684 JVM \u9009\u9879\u3002
#EN list.jvm.options.success=Listing configured JVM Options and Java System Properties on given target successful
list.jvm.options.success=\u5df2\u6210\u529f\u5217\u51fa\u7ed9\u5b9a\u76ee\u6807\u4e0a\u914d\u7f6e\u7684 JVM \u9009\u9879\u548c Java \u7cfb\u7edf\u5c5e\u6027
#EN list.jvm.options.failed=Listing JVM options failed on given target for following reason: {0}
list.jvm.options.failed=\u7531\u4e8e\u4ee5\u4e0b\u539f\u56e0\uff0c\u5217\u51fa\u7ed9\u5b9a\u76ee\u6807\u4e0a\u7684 JVM \u9009\u9879\u5931\u8d25: {0}
#EN create.jvm.options.success=Creating the given Option(s) on given target successful
create.jvm.options.success=\u5df2\u6210\u529f\u5728\u7ed9\u5b9a\u76ee\u6807\u4e0a\u521b\u5efa\u7ed9\u5b9a\u9009\u9879
#EN delete.jvm.options.success=Deleting the given Option(s) on given target successful
delete.jvm.options.success=\u5df2\u6210\u529f\u5220\u9664\u7ed9\u5b9a\u76ee\u6807\u4e0a\u7684\u7ed9\u5b9a\u9009\u9879
#EN delete.jvm.options.failed=Deleting given option(s) on given target failed for following reason,\nthe current options in configuration have been retained
delete.jvm.options.failed=\u7531\u4e8e\u4ee5\u4e0b\u539f\u56e0\uff0c\u5220\u9664\u7ed9\u5b9a\u76ee\u6807\u4e0a\u7684\u7ed9\u5b9a\u9009\u9879\u5931\u8d25\uff0c\n\u5df2\u4fdd\u7559\u914d\u7f6e\u4e2d\u7684\u5f53\u524d\u9009\u9879
#EN create.profiler.first=No profiler configured yet. Create a profiler first.
create.profiler.first=\u5c1a\u672a\u914d\u7f6e\u4efb\u4f55\u914d\u7f6e\u7a0b\u5e8f\u3002\u9996\u5148\u521b\u5efa\u914d\u7f6e\u7a0b\u5e8f\u3002
#EN created.message=Created {0} option(s)
created.message=\u5df2\u521b\u5efa {0} \u4e2a\u9009\u9879
#EN no.option.created=No jvm-options were created (perhaps they were already present)
no.option.created=\u672a\u521b\u5efa\u4efb\u4f55 jvm-options\uff08\u5b83\u4eec\u53ef\u80fd\u5df2\u5b58\u5728\uff09
#EN deleted.message=Deleted {0} option(s)
deleted.message=\u5df2\u5220\u9664 {0} \u4e2a\u9009\u9879
#EN no.option.deleted=No jvm-options were deleted (perhaps they never existed in the configuration)
no.option.deleted=\u672a\u5220\u9664\u4efb\u4f55 jvm-options\uff08\u5b83\u4eec\u53ef\u80fd\u4ece\u672a\u5b58\u5728\u4e8e\u914d\u7f6e\u4e2d\uff09
#EN joe.exists=JVM option {0} already exists in the configuration.
joe.exists=JVM \u9009\u9879 {0} \u5df2\u5b58\u5728\u4e8e\u914d\u7f6e\u4e2d\u3002
#EN joe.invalid.start=JVM option {0} is invalid because it does not start with a ''-''
joe.invalid.start=JVM \u9009\u9879 {0} \u65e0\u6548\uff0c\u56e0\u4e3a\u5176\u672a\u4ee5 "-" \u5f00\u5934
#EN joe.invalid.cmd.syntax=The command line:{0} does not satisfy the syntax.\nIn a nutshell, all options should start with a ''-'', multiple options are separated by a '':''.\nA '':'' inside an option should be escaped with a ''\\''.\nSince shell interprets command arguments, make sure you quote it.\n
joe.invalid.cmd.syntax=\u547d\u4ee4\u884c {0} \u4e0d\u7b26\u5408\u8bed\u6cd5\u8981\u6c42\u3002\n\u7b80\u800c\u8a00\u4e4b\uff0c\u6240\u6709\u9009\u9879\u5747\u5e94\u4ee5 "-" \u5f00\u5934\uff0c\u800c\u591a\u4e2a\u9009\u9879\u5219\u4f7f\u7528 ":" \u5206\u9694\u3002\n\u9009\u9879\u5185\u7684 ":" \u5e94\u4f7f\u7528 "\\" \u8fdb\u884c\u8f6c\u4e49\u3002\n\u7531\u4e8e shell \u4f1a\u89e3\u91ca\u547d\u4ee4\u53c2\u6570\uff0c\u56e0\u6b64\u8bf7\u786e\u4fdd\u4e3a\u53c2\u6570\u52a0\u4e0a\u5f15\u53f7\u3002\n
#EN soft.invalid.xmx=It appears that given JVM option {0} represents invalid maximum heap for the JVM. Ensure that it is valid, by doing list-jvm-options.
soft.invalid.xmx=\u6307\u5b9a JVM \u9009\u9879 {0} \u4f3c\u4e4e\u8868\u793a JVM \u7684\u65e0\u6548\u6700\u5927\u5806\u3002\u901a\u8fc7\u6267\u884c list-jvm-options \u786e\u4fdd\u5b83\u6709\u6548\u3002
#EN soft.xmx.exists=The configuration already has maximum heap size specified: {0}. Verify the java configuration by doing list-jvm-options.
soft.xmx.exists=\u914d\u7f6e\u5df2\u5177\u6709\u6307\u5b9a\u7684\u6700\u5927\u5806\u5927\u5c0f: {0}\u3002\u901a\u8fc7\u6267\u884c list-jvm-options \u9a8c\u8bc1 java \u914d\u7f6e\u3002
#EN soft.xmx.smaller.than.xms=It appears that the maximum heap size specified: {0} is smaller than the minimum heap size in the configuration: {1}. JVM might not start. Ensure that this is valid, by doing doing list-jvm-options.
soft.xmx.smaller.than.xms=\u6307\u5b9a\u7684\u6700\u5927\u5806\u5927\u5c0f {0} \u4f3c\u4e4e\u5c0f\u4e8e\u914d\u7f6e\u4e2d\u6700\u5c0f\u7684\u5806\u5927\u5c0f {1}\u3002JVM \u53ef\u80fd\u4e0d\u542f\u52a8\u3002\u901a\u8fc7\u6267\u884c list-jvm-options \u786e\u4fdd\u8fd9\u662f\u6709\u6548\u7684\u3002
#EN soft.invalid.xms=It appears that given JVM option {0} represents invalid initial heap for the JVM. Ensure that it is valid, by doing list-jvm-options.
soft.invalid.xms=\u6307\u5b9a JVM \u9009\u9879 {0} \u4f3c\u4e4e\u8868\u793a JVM \u7684\u65e0\u6548\u521d\u59cb\u5806\u3002\u901a\u8fc7\u6267\u884c list-jvm-options \u786e\u4fdd\u8fd9\u662f\u6709\u6548\u7684\u3002
#EN soft.xms.exists=The configuration already has initial heap size specified: {0}. Verify the java configuration by doing list-jvm-options.
soft.xms.exists=\u914d\u7f6e\u5df2\u5177\u6709\u6307\u5b9a\u7684\u521d\u59cb\u5806\u5927\u5c0f: {0}\u3002\u901a\u8fc7\u6267\u884c list-jvm-options \u9a8c\u8bc1 java \u914d\u7f6e\u3002
#EN soft.xms.larger.than.xmx=It appears that the initial heap size specified: {0} is larger than the maximum heap size in the configuration: {1}. JVM might not start. Ensure that this is valid, by doing doing list-jvm-options.
soft.xms.larger.than.xmx=\u6307\u5b9a\u7684\u521d\u59cb\u5806\u5927\u5c0f\u4f3c\u4e4e {0} \u4f3c\u4e4e\u5927\u4e8e\u914d\u7f6e\u4e2d\u7684\u6700\u5927\u5806\u5927\u5c0f {1}\u3002JVM \u53ef\u80fd\u4e0d\u542f\u52a8\u3002\u901a\u8fc7\u6267\u884c list-jvm-options \u786e\u4fdd\u8fd9\u662f\u6709\u6548\u7684\u3002
#Generate JVM Report
#EN server.unreachable=The server {0} seems to be unreachable. This means either it is not running or there is an internal communication error.
server.unreachable=\u4f3c\u4e4e\u65e0\u6cd5\u8bbf\u95ee\u670d\u52a1\u5668 {0}\u3002\u8fd9\u610f\u5473\u7740\u8be5\u670d\u52a1\u5668\u672a\u8fd0\u884c\u6216\u51fa\u73b0\u5185\u90e8\u901a\u4fe1\u9519\u8bef\u3002
#EN td.title=Full Java Thread Dump {0} {1} {2}
td.title=\u5b8c\u5168 Java \u7ebf\u7a0b\u8f6c\u50a8 {0} {1} {2}
#EN thread.no=Number of threads: {0}
thread.no=\u7ebf\u7a0b\u6570: {0}
#EN daemon.thread.no=Number of daemon threads: {0}
daemon.thread.no=\u5b88\u62a4\u7ebf\u7a0b\u6570: {0}
#EN peak.thread.no=Peak live thread count since the Java virtual machine started or peak was reset: {0}
peak.thread.no=\u81ea\u4ece Java \u865a\u62df\u673a\u542f\u52a8\u6216\u5cf0\u503c\u91cd\u7f6e\u4ee5\u6765\u5cf0\u503c\u6d3b\u52a8\u7ebf\u7a0b\u8ba1\u6570: {0}
#EN thread.contention.monitoring.supported=Is support for thread contention monitoring available on this JVM? [{0}]
thread.contention.monitoring.supported=\u6b64 JVM \u4e0a\u662f\u5426\u652f\u6301\u7ebf\u7a0b\u4e89\u7528\u76d1\u89c6\uff1f[{0}]
#EN thread.contention.monitoring.enabled=Is thread contention monitoring enabled? [{0}]. If false, some thread synchronization statistics are not be available.
thread.contention.monitoring.enabled=\u7ebf\u7a0b\u4e89\u7528\u76d1\u89c6\u662f\u5426\u5df2\u542f\u7528\uff1f[{0}]\u3002\u5982\u679c\u4e3a false\uff0c\u5219\u67d0\u4e9b\u7ebf\u7a0b\u540c\u6b65\u7edf\u8ba1\u4fe1\u606f\u4e0d\u53ef\u7528\u3002
#EN thread.cputime.supported=Is support for CPU time measurement for any thread available on this JVM? [{0}]
thread.cputime.supported=\u6b64 JVM \u4e0a\u662f\u5426\u652f\u6301\u4e3a\u4efb\u4f55\u7ebf\u7a0b\u8fdb\u884c CPU \u65f6\u95f4\u6d4b\u91cf\uff1f[{0}]
#EN thread.cputime.enabled=Is thread CPU time measurement enabled? [{0}]. If false, thread execution times are not available for any thread.
thread.cputime.enabled=\u7ebf\u7a0b CPU \u65f6\u95f4\u6d4b\u91cf\u662f\u5426\u5df2\u542f\u7528\uff1f[{0}]\u3002\u5982\u679c\u4e3a false\uff0c\u5219\u65e0\u6cd5\u4e3a\u4efb\u4f55\u7ebf\u7a0b\u63d0\u4f9b\u7ebf\u7a0b\u6267\u884c\u65f6\u95f4\u3002
#EN execution.info=Thread Execution Information:
execution.info=\u7ebf\u7a0b\u6267\u884c\u4fe1\u606f:
#EN thread.title=Thread {0} thread-id: {1} thread-state: {2}
thread.title=\u7ebf\u7a0b {0} \u7ebf\u7a0b ID: {1} \u7ebf\u7a0b\u72b6\u6001: {2}
#EN thread.waiting.on=Waiting on lock: {0}
thread.waiting.on=\u7b49\u5f85\u9501\u5b9a: {0}
#EN thread.suspended=Suspended
thread.suspended=\u5df2\u6682\u505c
#EN thread.in.native=Running in native
thread.in.native=\u672c\u5730\u8fd0\u884c
#EN thread.stack.element=\t at: {0}
thread.stack.element=\t \u4f4d\u4e8e: {0}
#EN no.deadlock=No deadlock found
no.deadlock=\u672a\u53d1\u73b0\u6b7b\u9501
#EN sync.info=Thread Synchronization Statistics:
sync.info=\u7ebf\u7a0b\u540c\u6b65\u7edf\u8ba1\u4fe1\u606f:
#EN thread.blocked.times=Number of times this thread was blocked (to enter/reenter a Monitor): {0}
thread.blocked.times=\u6b64\u7ebf\u7a0b\uff08\u8fdb\u5165/\u91cd\u65b0\u8fdb\u5165\u76d1\u89c6\u5668\u65f6\uff09\u88ab\u963b\u585e\u7684\u6b21\u6570: {0}
#EN thread.blocked.totaltime=Total (approximate) time the thread was in BLOCKED state: {0} milliseconds since thread contention monitoring was last enabled.
thread.blocked.totaltime=\u81ea\u4e0a\u6b21\u542f\u7528\u7ebf\u7a0b\u4e89\u7528\u76d1\u89c6\u4ee5\u6765\uff0c\u7ebf\u7a0b\u5904\u4e8e BLOCKED \u72b6\u6001\u7684\u603b\u65f6\u95f4\uff08\u8fd1\u4f3c\u503c\uff09: {0} \u6beb\u79d2\u3002
#EN thread.total.cpu.time=Total CPU time for this thread: {0} seconds {1} nanoseconds.
thread.total.cpu.time=\u6b64\u7ebf\u7a0b\u7684 CPU \u603b\u65f6\u95f4: {0} \u79d2 {1} \u7eb3\u79d2\u3002
#EN thread.cpu.user.time=User-level CPU time for this thread: {0} seconds {1} nanoseconds.
thread.cpu.user.time=\u6b64\u7ebf\u7a0b\u7684\u7528\u6237\u7ea7\u522b CPU \u65f6\u95f4: {0} \u79d2 {1} \u7eb3\u79d2\u3002
#EN wait.times=Number of times this thread waited for a notification (i.e. it was in WAITING or TIMED_WAITING state): {0}
wait.times=\u6b64\u7ebf\u7a0b\u7b49\u5f85\u901a\u77e5\uff08\u5373\u5904\u4e8e WAITING \u6216 TIMED_WAITING \u72b6\u6001\uff09\u7684\u6b21\u6570: {0}
#EN lock.owner.details=This thread is blocked waiting on lock owned currently by thread named: {0}, id: {1}
lock.owner.details=\u6b64\u7ebf\u7a0b\u88ab\u963b\u585e\uff0c\u6b63\u5728\u7b49\u5f85\u5f53\u524d\u7531\u540d\u4e3a {0}\u3001ID \u4e3a {1} \u7684\u7ebf\u7a0b\u6240\u62e5\u6709\u7684\u9501
#EN monitor.info=Object Monitors currently held or requested by this thread: {0}
monitor.info=\u6b64\u7ebf\u7a0b\u5f53\u524d\u62e5\u6709\u6216\u8bf7\u6c42\u7684\u5bf9\u8c61\u76d1\u89c6\u5668: {0}
#EN ownable.sync.info=Ownable Synchronizers (e.g. ReentrantLock and ReentrantReadWriteLock) held by this thread: {0}
ownable.sync.info=\u6b64\u7ebf\u7a0b\u62e5\u6709\u7684\u53ef\u62e5\u6709\u540c\u6b65\u5668\uff08\u4f8b\u5982 ReentrantLock \u548c ReentrantReadWriteLock\uff09: {0}
#EN deadlocks.found=Following thread(s) were deadlocked:
deadlocks.found=\u4ee5\u4e0b\u7ebf\u7a0b\u5df2\u53d1\u751f\u6b7b\u9501:
#EN m2hms={0} Hours {1} Minutes {2} Seconds
m2hms={0} \u5c0f\u65f6 {1} \u5206 {2} \u79d2
#EN m2sms={0} Seconds {1} Milliseconds
m2sms={0} \u79d2 {1} \u6beb\u79d2
#EN uptime=The uptime of Java Virtual Machine: {0}
uptime=Java \u865a\u62df\u673a\u7684\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4: {0}
#EN memory.pool.name=Memory Pool Name: {0}
memory.pool.name=\u5185\u5b58\u6c60\u540d\u79f0: {0}
#EN memory.usage.init=Memory that Java Virtual Machine initially requested to the Operating System: {0} Bytes
memory.usage.init=Java \u865a\u62df\u673a\u6700\u521d\u5411\u64cd\u4f5c\u7cfb\u7edf\u8bf7\u6c42\u7684\u5185\u5b58\u91cf: {0} \u5b57\u8282
#EN memory.usage.comm=Memory that Java Virtual Machine is guaranteed to receive from the Operating System: {0} Bytes
memory.usage.comm=Java \u865a\u62df\u673a\u5b9e\u9645\u80fd\u4ece\u64cd\u4f5c\u7cfb\u7edf\u83b7\u5f97\u7684\u5185\u5b58\u91cf: {0} \u5b57\u8282
#EN memory.usage.max=Maximum Memory that Java Virtual Machine may get from the Operating System: {0} Bytes. Note that this is not guaranteed.
memory.usage.max=Java \u865a\u62df\u673a\u53ef\u4ece\u64cd\u4f5c\u7cfb\u7edf\u83b7\u5f97\u7684\u6700\u5927\u5185\u5b58\u91cf: {0} \u5b57\u8282\u3002\u8bf7\u6ce8\u610f\uff0c\u5e76\u4e0d\u4e00\u5b9a\u80fd\u83b7\u5f97\u8be5\u5185\u5b58\u91cf\u3002
#EN memory.usage.used=Memory that Java Virtual Machine uses at this time: {0} Bytes
memory.usage.used=Java \u865a\u62df\u673a\u6b64\u65f6\u4f7f\u7528\u7684\u5185\u5b58\u91cf: {0} \u5b57\u8282
#EN gc.name=Name of the Garbage Collector: {0}
gc.name=\u5783\u573e\u6536\u96c6\u5668\u7684\u540d\u79f0: {0}
#EN gc.numcol=Number of collections occurred using this garbage collector: {0} Bytes
gc.numcol=\u4f7f\u7528\u6b64\u5783\u573e\u6536\u96c6\u5668\u6536\u96c6\u7684\u6570\u91cf: {0} \u5b57\u8282
#EN gc.coltime=Garbage Collection Time: {0}
gc.coltime=\u5783\u573e\u6536\u96c6\u65f6\u95f4: {0}
#EN heap.mem.usage=Heap Memory Usage:
heap.mem.usage=\u5806\u5185\u5b58\u4f7f\u7528\u60c5\u51b5:
#EN nonheap.mem.usage=Non-heap Memory Usage:
nonheap.mem.usage=\u975e\u5806\u5185\u5b58\u4f7f\u7528\u60c5\u51b5:
#EN obj.fin.pending=Approximate number of objects for which finalization is pending: {0}
obj.fin.pending=\u7ed3\u675f\u64cd\u4f5c\u5904\u4e8e\u6682\u6302\u72b6\u6001\u7684\u5bf9\u8c61\u7684\u8fd1\u4f3c\u6570\u76ee: {0}
#EN classloading.info=Class loading and unloading in the Java Virtual Machine:
classloading.info=\u5728 Java \u865a\u62df\u673a\u4e2d\u88c5\u5165\u548c\u5378\u8f7d\u7c7b:
#EN classes.loaded=Number of classes currently loaded in the Java Virtual Machine: {0}
classes.loaded=\u5f53\u524d\u88c5\u5165 Java \u865a\u62df\u673a\u7684\u7c7b\u6570\u76ee: {0}
#EN classes.total=Number of classes loaded in the Java Virtual Machine since the startup: {0}
classes.total=\u81ea\u542f\u52a8\u540e\u88c5\u5165 Java \u865a\u62df\u673a\u7684\u7c7b\u6570\u76ee: {0}
#EN classes.unloaded=Number of classes unloaded from the Java Virtual Machine: {0}
classes.unloaded=\u4ece Java \u865a\u62df\u673a\u5378\u8f7d\u7684\u7c7b\u6570\u76ee: {0}
#EN complilation.info=Just-in-time (JIT) compilation information in the Java Virtual Machine:
complilation.info=Java \u865a\u62df\u673a\u4e2d\u7684\u5373\u65f6 (Just-in-time, JIT) \u7f16\u8bd1\u4fe1\u606f:
#EN compilation.monitor.status=Java Virtual Machine compilation monitoring allowed: {0}
compilation.monitor.status=\u5141\u8bb8\u8fdb\u884c Java \u865a\u62df\u673a\u7f16\u8bd1\u76d1\u89c6: {0}
#EN jit.compilar.name=Name of the Just-in-time (JIT) compiler: {0}
jit.compilar.name=\u5373\u65f6 (JIT) \u7f16\u8bd1\u5668\u7684\u540d\u79f0: {0}
#EN compilation.time=Total time spent in compilation: {0}
compilation.time=\u7f16\u8bd1\u6240\u82b1\u8d39\u7684\u603b\u65f6\u95f4: {0}
#EN os.info=Operating System Information:
os.info=\u64cd\u4f5c\u7cfb\u7edf\u4fe1\u606f:
#EN os.name=Name of the Operating System: {0}
os.name=\u64cd\u4f5c\u7cfb\u7edf\u7684\u540d\u79f0: {0}
#EN os.arch=Binary Architecture name of the Operating System: {0}, Version: {1}
os.arch=\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e8c\u8fdb\u5236\u4f53\u7cfb\u7ed3\u6784\u540d\u79f0: {0}\uff0c\u7248\u672c: {1}
#EN os.nproc=Number of processors available on the Operating System: {0}
os.nproc=\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u53ef\u7528\u5904\u7406\u5668\u7684\u6570\u76ee: {0}
#EN os.load=System load on the available processors for the last minute: {0}. (Sum of running and queued runnable entities per minute)
os.load=\u53ef\u7528\u5904\u7406\u5668\u5728\u6700\u540e\u4e00\u5206\u949f\u7684\u7cfb\u7edf\u88c5\u5165: {0}\u3002\uff08\u6bcf\u5206\u949f\u8fd0\u884c\u548c\u6392\u961f\u7684\u53ef\u8fd0\u884c\u5b9e\u4f53\u603b\u6570\uff09
#EN rt.info=General Java Runtime Environment Information for the VM: {0}
rt.info=VM \u7684\u5e38\u89c4 Java Runtime Environment \u4fe1\u606f: {0}
#EN rt.bcp=JRE BootClassPath: {0}
rt.bcp=JRE \u5f15\u5bfc\u7c7b\u8def\u5f84: {0}
#EN rt.cp=JRE ClassPath: {0}
rt.cp=JRE \u7c7b\u8def\u5f84: {0}
#EN rt.libpath=JRE Native Library Path: {0}
rt.libpath=JRE \u672c\u5730\u5e93\u8def\u5f84: {0}
#EN rt.nvv=JRE name: {0} Vendor: {1} Version: {2}
rt.nvv=JRE \u540d\u79f0: {0} \u4f9b\u5e94\u5546: {1} \u7248\u672c: {2}
#EN rt.sysprops=List of System Properties for the Java Virtual Machine:
rt.sysprops=Java \u865a\u62df\u673a\u7684\u7cfb\u7edf\u5c5e\u6027\u5217\u8868:
#EN summary.title=**** Java Virtual Machine [App Server Instance Name: {0}] Summary ****
summary.title=**** Java \u865a\u62df\u673a [\u5e94\u7528\u670d\u52a1\u5668\u5b9e\u4f8b\u540d\u79f0: {0}] \u6458\u8981 ****
#EN class.info.title=**** Class Statistics for Java Virtual Machine [App Server Instance Name: {0}] ****
class.info.title=**** Java \u865a\u62df\u673a\u7684\u7c7b\u7edf\u8ba1\u4fe1\u606f [\u5e94\u7528\u670d\u52a1\u5668\u5b9e\u4f8b\u540d\u79f0: {0}] ****
#EN thread.dump.title=**** Thread Dump for Java Virtual Machine [App Server Instance Name: {0}] ****
thread.dump.title=**** Java \u865a\u62df\u673a\u7684\u7ebf\u7a0b\u8f6c\u50a8 [\u5e94\u7528\u670d\u52a1\u5668\u5b9e\u4f8b\u540d\u79f0: {0}] ****
#EN memory.info.title=**** Memory (Perm Gen, Eden Space etc.) Information for Java Virtual Machine [App Server Instance Name: {0}] ****
memory.info.title=**** Java \u865a\u62df\u673a\u7684\u5185\u5b58\uff08Perm Gen\u3001Eden Space \u7b49\uff09\u4fe1\u606f [\u5e94\u7528\u670d\u52a1\u5668\u5b9e\u4f8b\u540d\u79f0: {0}] ****
#logging information
#EN logging.config.file=Effective logging properties file:[{0}]. If null, it indicates JRE standard file.
logging.config.file=\u6709\u6548\u7684\u65e5\u5fd7\u8bb0\u5f55\u5c5e\u6027\u6587\u4ef6:[{0}]\u3002\u5982\u679c\u4e3a Null\uff0c\u5219\u8868\u793a JRE \u6807\u51c6\u6587\u4ef6\u3002
#EN reg.loggers=Number of loggers currently registered in the JVM: [{0}]. Details follow:
reg.loggers=JVM \u4e2d\u5f53\u524d\u6ce8\u518c\u7684\u65e5\u5fd7\u7a0b\u5e8f\u6570: [{0}]\u3002\u8be6\u7ec6\u4fe1\u606f\u5982\u4e0b:
#EN logger.details.1=If the level is blank, it is inherited from parent logger
logger.details.1=\u5982\u679c\u7ea7\u522b\u4e3a\u7a7a\uff0c\u5219\u5c06\u4ece\u7236\u65e5\u5fd7\u7a0b\u5e8f\u7ee7\u627f\u7ea7\u522b
#EN logger.details.2=Parent logger is the nearest existing parent logger
logger.details.2=\u7236\u65e5\u5fd7\u7a0b\u5e8f\u662f\u6700\u8fd1\u7684\u73b0\u6709\u7236\u65e5\u5fd7\u7a0b\u5e8f
#EN list.of.loggers=Logger Name | Logging Level | Parent Logger Name
list.of.loggers=\u65e5\u5fd7\u7a0b\u5e8f\u540d\u79f0 | \u65e5\u5fd7\u8bb0\u5f55\u7ea7\u522b | \u7236\u65e5\u5fd7\u7a0b\u5e8f\u540d\u79f0
#EN create.threadpool.duplicate=Thread Pool named {0} already exists.
create.threadpool.duplicate=\u540d\u4e3a {0} \u7684\u7ebf\u7a0b\u6c60\u5df2\u5b58\u5728\u3002
#EN create.threadpool.failed=Creation of: {0} failed because of: {1}
create.threadpool.failed=\u521b\u5efa {0} \u5931\u8d25\uff0c\u56e0\u4e3a: {1}
#EN create.threadpool.deprecated.workqueues=Deprecated Syntax: --workqueues option is deprecated for create-threadpool command.
create.threadpool.deprecated.workqueues=Syntax \u5df2\u8fc7\u65f6\uff1a\u5bf9\u4e8e create-threadpool \u547d\u4ee4\uff0c--workqueues \u9009\u9879\u5df2\u8fc7\u65f6\u3002
#EN list.thread.pools.failed=List Thread Pools failed because of: {0}
list.thread.pools.failed=\u5217\u51fa\u7ebf\u7a0b\u6c60\u5931\u8d25\uff0c\u56e0\u4e3a: {0}
#EN delete.threadpool.notexists=Thread Pool named {0} does not exist.
delete.threadpool.notexists=\u540d\u4e3a {0} \u7684\u7ebf\u7a0b\u6c60\u4e0d\u5b58\u5728\u3002
#EN delete.threadpool.failed=Delete Thread Pool failed because of: {0}
delete.threadpool.failed=\u5220\u9664\u7ebf\u7a0b\u6c60\u5931\u8d25\uff0c\u56e0\u4e3a: {0}
