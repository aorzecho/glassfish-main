#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#EN create.jvm.options=creates JVM options in the Java configuration or profiler element of the domain.xml file.
create.jvm.options=\u5728 domain.xml \u6587\u4EF6\u7684 Java \u914D\u7F6E\u6216\u5206\u6790\u5668\u5143\u7D20\u4E2D\u521B\u5EFA JVM \u9009\u9879\u3002
#EN create.jvm.options.jvm_option_name=The left side of the equal sign (=) is the JVM option name. The right side of the equal sign (=) is the JVM option value. A colon (:) is a delimiter for multiple options.
create.jvm.options.jvm_option_name=\u7B49\u53F7 (=) \u5DE6\u4FA7\u662F JVM \u9009\u9879\u540D\u79F0\u3002\u7B49\u53F7 (=) \u53F3\u4FA7\u662F JVM \u9009\u9879\u503C\u3002\u5192\u53F7 (:) \u662F\u591A\u4E2A\u9009\u9879\u7684\u5206\u9694\u7B26\u3002
#EN create.jvm.options.usagetext=create-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
create.jvm.options.usagetext=create-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
#EN delete.jvm.options=removes JVM options from the Java configuration or profiler elements of the domain.xml file
delete.jvm.options=\u4ECE domain.xml \u6587\u4EF6\u7684 Java \u914D\u7F6E\u6216\u5206\u6790\u5668\u5143\u7D20\u4E2D\u5220\u9664 JVM \u9009\u9879
#EN delete.jvm.options.jvm_option_name=The left side of the equal sign (=) is the JVM option name. The right side of the equal sign (=) is the JVM option value. A colon (:) is a delimiter for multiple options.
delete.jvm.options.jvm_option_name=\u7B49\u53F7 (=) \u5DE6\u4FA7\u662F JVM \u9009\u9879\u540D\u79F0\u3002\u7B49\u53F7 (=) \u53F3\u4FA7\u662F JVM \u9009\u9879\u503C\u3002\u5192\u53F7 (:) \u662F\u591A\u4E2A\u9009\u9879\u7684\u5206\u9694\u7B26\u3002
#EN delete.jvm.options.usagetext=delete-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
delete.jvm.options.usagetext=delete-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
#EN list.jvm.options=lists JVM options in the Java configuration or profiler element of the domain.xml file.
list.jvm.options=\u5217\u51FA domain.xml \u6587\u4EF6\u7684 Java \u914D\u7F6E\u6216\u5206\u6790\u5668\u5143\u7D20\u4E2D\u7684 JVM \u9009\u9879\u3002
#EN list.jvm.options.success=Listing configured JVM Options and Java System Properties on given target successful
list.jvm.options.success=\u5DF2\u6210\u529F\u5217\u51FA\u7ED9\u5B9A\u76EE\u6807\u4E0A\u914D\u7F6E\u7684 JVM \u9009\u9879\u548C Java \u7CFB\u7EDF\u5C5E\u6027
#EN list.jvm.options.failed=Listing JVM options failed on given target for following reason: {0}
list.jvm.options.failed=\u7531\u4E8E\u4EE5\u4E0B\u539F\u56E0, \u672A\u80FD\u5217\u51FA\u7ED9\u5B9A\u76EE\u6807\u4E0A\u7684 JVM \u9009\u9879: {0}
#EN create.jvm.options.success=Creating the given Option(s) on given target successful
create.jvm.options.success=\u5DF2\u6210\u529F\u5728\u7ED9\u5B9A\u76EE\u6807\u4E0A\u521B\u5EFA\u7ED9\u5B9A\u9009\u9879
#EN delete.jvm.options.success=Deleting the given Option(s) on given target successful
delete.jvm.options.success=\u5DF2\u6210\u529F\u5220\u9664\u7ED9\u5B9A\u76EE\u6807\u4E0A\u7684\u7ED9\u5B9A\u9009\u9879
#EN delete.jvm.options.failed=Deleting given option(s) on given target failed for following reason,\nthe current options in configuration have been retained
delete.jvm.options.failed=\u7531\u4E8E\u4EE5\u4E0B\u539F\u56E0, \u5220\u9664\u7ED9\u5B9A\u76EE\u6807\u4E0A\u7684\u7ED9\u5B9A\u9009\u9879\u5931\u8D25, \n\u5DF2\u4FDD\u7559\u914D\u7F6E\u4E2D\u7684\u5F53\u524D\u9009\u9879
#EN create.profiler.first=No profiler configured yet. Create a profiler first.
create.profiler.first=\u5C1A\u672A\u914D\u7F6E\u4EFB\u4F55\u5206\u6790\u5668\u3002\u9996\u5148\u521B\u5EFA\u5206\u6790\u5668\u3002
#EN created.message=Created {0} option(s)
created.message=\u5DF2\u521B\u5EFA {0} \u4E2A\u9009\u9879
#EN no.option.created=No jvm-options were created (perhaps they were already present)
no.option.created=\u672A\u521B\u5EFA\u4EFB\u4F55 jvm-options (\u5B83\u4EEC\u53EF\u80FD\u5DF2\u5B58\u5728)
#EN deleted.message=Deleted {0} option(s)
deleted.message=\u5DF2\u5220\u9664 {0} \u4E2A\u9009\u9879
#EN no.option.deleted=No jvm-options were deleted (perhaps they never existed in the configuration)
no.option.deleted=\u672A\u5220\u9664\u4EFB\u4F55 jvm-options (\u5B83\u4EEC\u53EF\u80FD\u4ECE\u672A\u5B58\u5728\u4E8E\u914D\u7F6E\u4E2D)
#EN joe.exists=JVM option {0} already exists in the configuration.
joe.exists=JVM \u9009\u9879 {0}\u5DF2\u5B58\u5728\u4E8E\u914D\u7F6E\u4E2D\u3002
#EN joe.invalid.start=JVM option {0} is invalid because it does not start with a ''-''
joe.invalid.start=JVM \u9009\u9879{0}\u65E0\u6548, \u56E0\u4E3A\u5B83\u672A\u4EE5 ''-'' \u5F00\u5934
#EN joe.invalid.cmd.syntax=The command line:{0} does not satisfy the syntax.\nIn a nutshell, all options should start with a ''-'', multiple options are separated by a '':''.\nA '':'' inside an option should be escaped with a ''\\''.\nSince shell interprets command arguments, make sure you quote it.\n
joe.invalid.cmd.syntax=\u547D\u4EE4\u884C{0}\u4E0D\u7B26\u5408\u8BED\u6CD5\u8981\u6C42\u3002\n\u7B80\u800C\u8A00\u4E4B, \u6240\u6709\u9009\u9879\u5747\u5E94\u4EE5 ''-'' \u5F00\u5934, \u800C\u591A\u4E2A\u9009\u9879\u5219\u4F7F\u7528 '':'' \u5206\u9694\u3002\n\u9009\u9879\u5185\u7684 '':'' \u5E94\u4F7F\u7528 ''\\'' \u8FDB\u884C\u8F6C\u4E49\u3002\n\u7531\u4E8E Shell \u4F1A\u89E3\u91CA\u547D\u4EE4\u53C2\u6570, \u56E0\u6B64\u8BF7\u786E\u4FDD\u4E3A\u53C2\u6570\u52A0\u4E0A\u5F15\u53F7\u3002\n
#EN soft.invalid.xmx=It appears that given JVM option {0} represents invalid maximum heap for the JVM. Ensure that it is valid, by doing list-jvm-options.
soft.invalid.xmx=\u6307\u5B9A JVM \u9009\u9879{0}\u4F3C\u4E4E\u8868\u793A JVM \u7684\u65E0\u6548\u6700\u5927\u5806\u3002\u901A\u8FC7\u6267\u884C list-jvm-options \u786E\u4FDD\u5B83\u6709\u6548\u3002
#EN soft.xmx.exists=The configuration already has maximum heap size specified: {0}. Verify the java configuration by doing list-jvm-options.
soft.xmx.exists=\u914D\u7F6E\u5DF2\u5177\u6709\u6307\u5B9A\u7684\u6700\u5927\u5806\u5927\u5C0F: {0}\u3002\u901A\u8FC7\u6267\u884C list-jvm-options \u9A8C\u8BC1 java \u914D\u7F6E\u3002
#EN soft.xmx.smaller.than.xms=It appears that the maximum heap size specified: {0} is smaller than the minimum heap size in the configuration: {1}. JVM might not start. Ensure that this is valid, by doing doing list-jvm-options.
soft.xmx.smaller.than.xms=\u6307\u5B9A\u7684\u6700\u5927\u5806\u5927\u5C0F {0} \u4F3C\u4E4E\u5C0F\u4E8E\u914D\u7F6E\u4E2D\u6700\u5C0F\u7684\u5806\u5927\u5C0F {1}\u3002JVM \u53EF\u80FD\u4E0D\u542F\u52A8\u3002\u901A\u8FC7\u6267\u884C list-jvm-options \u786E\u4FDD\u6B64\u9879\u6709\u6548\u3002
#EN soft.invalid.xms=It appears that given JVM option {0} represents invalid initial heap for the JVM. Ensure that it is valid, by doing list-jvm-options.
soft.invalid.xms=\u6307\u5B9A JVM \u9009\u9879{0}\u4F3C\u4E4E\u8868\u793A JVM \u7684\u65E0\u6548\u521D\u59CB\u5806\u3002\u901A\u8FC7\u6267\u884C list-jvm-options \u786E\u4FDD\u6B64\u5148\u6709\u6548\u3002
#EN soft.xms.exists=The configuration already has initial heap size specified: {0}. Verify the java configuration by doing list-jvm-options.
soft.xms.exists=\u914D\u7F6E\u5DF2\u5177\u6709\u6307\u5B9A\u7684\u521D\u59CB\u5806\u5927\u5C0F: {0}\u3002\u901A\u8FC7\u6267\u884C list-jvm-options \u9A8C\u8BC1 java \u914D\u7F6E\u3002
#EN soft.xms.larger.than.xmx=It appears that the initial heap size specified: {0} is larger than the maximum heap size in the configuration: {1}. JVM might not start. Ensure that this is valid, by doing doing list-jvm-options.
soft.xms.larger.than.xmx=\u6307\u5B9A\u7684\u521D\u59CB\u5806\u5927\u5C0F\u4F3C\u4E4E {0} \u4F3C\u4E4E\u5927\u4E8E\u914D\u7F6E\u4E2D\u7684\u6700\u5927\u5806\u5927\u5C0F {1}\u3002JVM \u53EF\u80FD\u4E0D\u542F\u52A8\u3002\u901A\u8FC7\u6267\u884C list-jvm-options \u786E\u4FDD\u6B64\u9879\u6709\u6548\u3002
#Generate JVM Report
#EN server.unreachable=The server {0} seems to be unreachable. This means either it is not running or there is an internal communication error.
server.unreachable=\u4F3C\u4E4E\u65E0\u6CD5\u8BBF\u95EE\u670D\u52A1\u5668{0}\u3002\u8FD9\u610F\u5473\u7740\u8BE5\u670D\u52A1\u5668\u672A\u8FD0\u884C\u6216\u51FA\u73B0\u5185\u90E8\u901A\u4FE1\u9519\u8BEF\u3002
#EN td.title=Full Java Thread Dump {0} {1} {2}
td.title=\u5B8C\u5168 Java \u7EBF\u7A0B\u8F6C\u50A8{0}{1}{2}
#EN thread.no=Number of threads: {0}
thread.no=\u7EBF\u7A0B\u6570: {0}
#EN daemon.thread.no=Number of daemon threads: {0}
daemon.thread.no=\u5B88\u62A4\u7A0B\u5E8F\u7EBF\u7A0B\u6570: {0}
#EN peak.thread.no=Peak live thread count since the Java virtual machine started or peak was reset: {0}
peak.thread.no=\u81EA\u4ECE Java \u865A\u62DF\u673A\u542F\u52A8\u6216\u5CF0\u503C\u91CD\u7F6E\u4EE5\u6765\u5CF0\u503C\u6D3B\u52A8\u7EBF\u7A0B\u8BA1\u6570: {0}
#EN thread.contention.monitoring.supported=Is support for thread contention monitoring available on this JVM? [{0}]
thread.contention.monitoring.supported=\u7EBF\u7A0B\u4E89\u7528\u76D1\u89C6\u5728\u6B64 JVM \u4E0A\u662F\u5426\u53EF\u7528? [{0}]
#EN thread.contention.monitoring.enabled=Is thread contention monitoring enabled? [{0}]. If false, some thread synchronization statistics are not be available.
thread.contention.monitoring.enabled=\u7EBF\u7A0B\u4E89\u7528\u76D1\u89C6\u662F\u5426\u5DF2\u542F\u7528? [{0}]\u3002\u5982\u679C\u672A\u542F\u7528, \u5219\u67D0\u4E9B\u7EBF\u7A0B\u540C\u6B65\u7EDF\u8BA1\u4FE1\u606F\u4E0D\u53EF\u7528\u3002
#EN thread.cputime.supported=Is support for CPU time measurement for any thread available on this JVM? [{0}]
thread.cputime.supported=\u6B64 JVM \u4E0A\u662F\u5426\u652F\u6301\u4E3A\u4EFB\u4F55\u7EBF\u7A0B\u8FDB\u884C CPU \u65F6\u95F4\u6D4B\u91CF? [{0}]
#EN thread.cputime.enabled=Is thread CPU time measurement enabled? [{0}]. If false, thread execution times are not available for any thread.
thread.cputime.enabled=\u7EBF\u7A0B CPU \u65F6\u95F4\u6D4B\u91CF\u662F\u5426\u5DF2\u542F\u7528? [{0}]\u3002\u5982\u679C\u672A\u542F\u7528, \u5219\u65E0\u6CD5\u4E3A\u4EFB\u4F55\u7EBF\u7A0B\u63D0\u4F9B\u7EBF\u7A0B\u6267\u884C\u65F6\u95F4\u3002
#EN execution.info=Thread Execution Information:
execution.info=\u7EBF\u7A0B\u6267\u884C\u4FE1\u606F:
#EN thread.title=Thread {0} thread-id: {1} thread-state: {2}
thread.title=\u7EBF\u7A0B {0} \u7EBF\u7A0B ID: {1} \u7EBF\u7A0B\u72B6\u6001: {2}
#EN thread.waiting.on=Waiting on lock: {0}
thread.waiting.on=\u7B49\u5F85\u9501\u5B9A: {0}
#EN thread.suspended=Suspended
thread.suspended=\u5DF2\u6302\u8D77
#EN thread.in.native=Running in native
thread.in.native=\u672C\u673A\u8FD0\u884C
#EN thread.stack.element=\t at: {0}
thread.stack.element=\t \u4F4D\u4E8E: {0}
#EN no.deadlock=No deadlock found
no.deadlock=\u672A\u53D1\u73B0\u6B7B\u9501
#EN sync.info=Thread Synchronization Statistics:
sync.info=\u7EBF\u7A0B\u540C\u6B65\u7EDF\u8BA1\u4FE1\u606F:
#EN thread.blocked.times=Number of times this thread was blocked (to enter/reenter a Monitor): {0}
thread.blocked.times=\u6B64\u7EBF\u7A0B (\u8FDB\u5165/\u91CD\u65B0\u8FDB\u5165\u76D1\u89C6\u5668\u65F6) \u88AB\u963B\u585E\u7684\u6B21\u6570: {0}
#EN thread.blocked.totaltime=Total (approximate) time the thread was in BLOCKED state: {0} milliseconds since thread contention monitoring was last enabled.
thread.blocked.totaltime=\u81EA\u4E0A\u6B21\u542F\u7528\u7EBF\u7A0B\u4E89\u7528\u76D1\u89C6\u4EE5\u6765, \u7EBF\u7A0B\u5904\u4E8E BLOCKED \u72B6\u6001\u7684\u603B\u65F6\u95F4 (\u8FD1\u4F3C\u503C): {0} \u6BEB\u79D2\u3002
#EN thread.total.cpu.time=Total CPU time for this thread: {0} seconds {1} nanoseconds.
thread.total.cpu.time=\u6B64\u7EBF\u7A0B\u7684 CPU \u603B\u65F6\u95F4: {0} \u79D2 {1} \u7EB3\u79D2\u3002
#EN thread.cpu.user.time=User-level CPU time for this thread: {0} seconds {1} nanoseconds.
thread.cpu.user.time=\u6B64\u7EBF\u7A0B\u7684\u7528\u6237\u7EA7\u522B CPU \u65F6\u95F4: {0} \u79D2 {1} \u7EB3\u79D2\u3002
#EN wait.times=Number of times this thread waited for a notification (i.e. it was in WAITING or TIMED_WAITING state): {0}
wait.times=\u6B64\u7EBF\u7A0B\u7B49\u5F85\u901A\u77E5 (\u5373\u5904\u4E8E WAITING \u6216 TIMED_WAITING \u72B6\u6001) \u7684\u6B21\u6570: {0}
#EN lock.owner.details=This thread is blocked waiting on lock owned currently by thread named: {0}, id: {1}
lock.owner.details=\u6B64\u7EBF\u7A0B\u88AB\u963B\u585E, \u6B63\u5728\u7B49\u5F85\u5F53\u524D\u7531\u540D\u4E3A{0}, ID \u4E3A {1} \u7684\u7EBF\u7A0B\u6240\u62E5\u6709\u7684\u9501
#EN monitor.info=Object Monitors currently held or requested by this thread: {0}
monitor.info=\u6B64\u7EBF\u7A0B\u5F53\u524D\u6301\u6709\u6216\u8BF7\u6C42\u7684\u5BF9\u8C61\u76D1\u89C6\u5668: {0}
#EN ownable.sync.info=Ownable Synchronizers (e.g. ReentrantLock and ReentrantReadWriteLock) held by this thread: {0}
ownable.sync.info=\u6B64\u7EBF\u7A0B\u6301\u6709\u7684\u53EF\u62E5\u6709\u540C\u6B65\u5668 (\u4F8B\u5982 ReentrantLock \u548C ReentrantReadWriteLock): {0}
#EN deadlocks.found=Following thread(s) were deadlocked:
deadlocks.found=\u4EE5\u4E0B\u7EBF\u7A0B\u5DF2\u53D1\u751F\u6B7B\u9501:
#EN m2hms={0} Hours {1} Minutes {2} Seconds
m2hms={0} \u5C0F\u65F6 {1} \u5206\u949F {2} \u79D2
#EN m2sms={0} Seconds {1} Milliseconds
m2sms={0} \u79D2 {1} \u6BEB\u79D2
#EN uptime=The uptime of Java Virtual Machine: {0}
uptime=Java \u865A\u62DF\u673A\u7684\u6B63\u5E38\u8FD0\u884C\u65F6\u95F4: {0}
#EN memory.pool.name=Memory Pool Name: {0}
memory.pool.name=\u5185\u5B58\u6C60\u540D\u79F0: {0}
#EN memory.usage.init=Memory that Java Virtual Machine initially requested to the Operating System: {0} Bytes
memory.usage.init=Java \u865A\u62DF\u673A\u6700\u521D\u5411\u64CD\u4F5C\u7CFB\u7EDF\u8BF7\u6C42\u7684\u5185\u5B58: {0} \u5B57\u8282
#EN memory.usage.comm=Memory that Java Virtual Machine is guaranteed to receive from the Operating System: {0} Bytes
memory.usage.comm=Java \u865A\u62DF\u673A\u786E\u4FDD\u80FD\u4ECE\u64CD\u4F5C\u7CFB\u7EDF\u83B7\u5F97\u7684\u5185\u5B58: {0} \u5B57\u8282
#EN memory.usage.max=Maximum Memory that Java Virtual Machine may get from the Operating System: {0} Bytes. Note that this is not guaranteed.
memory.usage.max=Java \u865A\u62DF\u673A\u53EF\u4ECE\u64CD\u4F5C\u7CFB\u7EDF\u83B7\u5F97\u7684\u6700\u5927\u5185\u5B58: {0} \u5B57\u8282\u3002\u8BF7\u6CE8\u610F, \u5E76\u4E0D\u4FDD\u8BC1\u83B7\u5F97\u8BE5\u5185\u5B58\u91CF\u3002
#EN memory.usage.used=Memory that Java Virtual Machine uses at this time: {0} Bytes
memory.usage.used=Java \u865A\u62DF\u673A\u6B64\u65F6\u4F7F\u7528\u7684\u5185\u5B58: {0} \u5B57\u8282
#EN gc.name=Name of the Garbage Collector: {0}
gc.name=\u5783\u573E\u6536\u96C6\u5668\u7684\u540D\u79F0: {0}
#EN gc.numcol=Number of collections occurred using this garbage collector: {0} Bytes
gc.numcol=\u4F7F\u7528\u6B64\u5783\u573E\u6536\u96C6\u5668\u53D1\u751F\u7684\u6536\u96C6\u6570: {0} \u5B57\u8282
#EN gc.coltime=Garbage Collection Time: {0}
gc.coltime=\u5783\u573E\u6536\u96C6\u65F6\u95F4: {0}
#EN heap.mem.usage=Heap Memory Usage:
heap.mem.usage=\u5806\u5185\u5B58\u4F7F\u7528\u91CF:
#EN nonheap.mem.usage=Non-heap Memory Usage:
nonheap.mem.usage=\u975E\u5806\u5185\u5B58\u4F7F\u7528\u91CF:
#EN obj.fin.pending=Approximate number of objects for which finalization is pending: {0}
obj.fin.pending=\u7ED3\u675F\u64CD\u4F5C\u5904\u4E8E\u6682\u6302\u72B6\u6001\u7684\u5BF9\u8C61\u7684\u8FD1\u4F3C\u6570\u76EE: {0}
#EN classloading.info=Class loading and unloading in the Java Virtual Machine:
classloading.info=\u5728 Java \u865A\u62DF\u673A\u4E2D\u52A0\u8F7D\u548C\u5378\u8F7D\u7C7B:
#EN classes.loaded=Number of classes currently loaded in the Java Virtual Machine: {0}
classes.loaded=\u5F53\u524D\u52A0\u8F7D Java \u865A\u62DF\u673A\u7684\u7C7B\u6570\u76EE: {0}
#EN classes.total=Number of classes loaded in the Java Virtual Machine since the startup: {0}
classes.total=\u81EA\u542F\u52A8\u540E\u52A0\u8F7D Java \u865A\u62DF\u673A\u7684\u7C7B\u6570\u76EE: {0}
#EN classes.unloaded=Number of classes unloaded from the Java Virtual Machine: {0}
classes.unloaded=\u4ECE Java \u865A\u62DF\u673A\u5378\u8F7D\u7684\u7C7B\u6570\u76EE: {0}
#EN complilation.info=Just-in-time (JIT) compilation information in the Java Virtual Machine:
complilation.info=Java \u865A\u62DF\u673A\u4E2D\u7684\u5373\u65F6 (JIT) \u7F16\u8BD1\u4FE1\u606F:
#EN compilation.monitor.status=Java Virtual Machine compilation monitoring allowed: {0}
compilation.monitor.status=\u5141\u8BB8\u8FDB\u884C Java \u865A\u62DF\u673A\u7F16\u8BD1\u76D1\u89C6: {0}
#EN jit.compilar.name=Name of the Just-in-time (JIT) compiler: {0}
jit.compilar.name=\u5373\u65F6 (JIT) \u7F16\u8BD1\u5668\u7684\u540D\u79F0: {0}
#EN compilation.time=Total time spent in compilation: {0}
compilation.time=\u7F16\u8BD1\u6240\u82B1\u8D39\u7684\u603B\u65F6\u95F4: {0}
#EN os.info=Operating System Information:
os.info=\u64CD\u4F5C\u7CFB\u7EDF\u4FE1\u606F:
#EN os.name=Name of the Operating System: {0}
os.name=\u64CD\u4F5C\u7CFB\u7EDF\u7684\u540D\u79F0: {0}
#EN os.arch=Binary Architecture name of the Operating System: {0}, Version: {1}
os.arch=\u64CD\u4F5C\u7CFB\u7EDF\u7684\u4E8C\u8FDB\u5236\u4F53\u7CFB\u7ED3\u6784\u540D\u79F0: {0}, \u7248\u672C: {1}
#EN os.nproc=Number of processors available on the Operating System: {0}
os.nproc=\u64CD\u4F5C\u7CFB\u7EDF\u4E2D\u53EF\u7528\u5904\u7406\u7A0B\u5E8F\u7684\u6570\u76EE: {0}
#EN os.load=System load on the available processors for the last minute: {0}. (Sum of running and queued runnable entities per minute)
os.load=\u53EF\u7528\u5904\u7406\u7A0B\u5E8F\u5728\u6700\u540E\u4E00\u5206\u949F\u7684\u7CFB\u7EDF\u8D1F\u8F7D: {0}\u3002(\u6BCF\u5206\u949F\u8FD0\u884C\u548C\u6392\u961F\u7684\u53EF\u8FD0\u884C\u5B9E\u4F53\u603B\u6570)
#EN rt.info=General Java Runtime Environment Information for the VM: {0}
rt.info=VM \u7684\u5E38\u89C4 Java \u8FD0\u884C\u65F6\u73AF\u5883\u4FE1\u606F: {0}
#EN rt.bcp=JRE BootClassPath: {0}
rt.bcp=JRE BootClassPath: {0}
#EN rt.cp=JRE ClassPath: {0}
rt.cp=JRE \u7C7B\u8DEF\u5F84: {0}
#EN rt.libpath=JRE Native Library Path: {0}
rt.libpath=JRE \u672C\u673A\u5E93\u8DEF\u5F84: {0}
#EN rt.nvv=JRE name: {0} Vendor: {1} Version: {2}
rt.nvv=JRE \u540D\u79F0: {0} \u4F9B\u5E94\u5546: {1} \u7248\u672C: {2}
#EN rt.sysprops=List of System Properties for the Java Virtual Machine:
rt.sysprops=Java \u865A\u62DF\u673A\u7684\u7CFB\u7EDF\u5C5E\u6027\u5217\u8868:
#EN summary.title=**** Java Virtual Machine [App Server Instance Name: {0}] Summary ****
summary.title=**** Java \u865A\u62DF\u673A [\u5E94\u7528\u7A0B\u5E8F\u670D\u52A1\u5668\u5B9E\u4F8B\u540D\u79F0: {0}] \u6982\u8981 ****
#EN class.info.title=**** Class Statistics for Java Virtual Machine [App Server Instance Name: {0}] ****
class.info.title=**** Java \u865A\u62DF\u673A\u7684\u7C7B\u7EDF\u8BA1\u4FE1\u606F [\u5E94\u7528\u7A0B\u5E8F\u670D\u52A1\u5668\u5B9E\u4F8B\u540D\u79F0: {0}] ****
#EN thread.dump.title=**** Thread Dump for Java Virtual Machine [App Server Instance Name: {0}] ****
thread.dump.title=**** Java \u865A\u62DF\u673A\u7684\u7EBF\u7A0B\u8F6C\u50A8 [\u5E94\u7528\u7A0B\u5E8F\u670D\u52A1\u5668\u5B9E\u4F8B\u540D\u79F0: {0}] ****
#EN memory.info.title=**** Memory (Perm Gen, Eden Space etc.) Information for Java Virtual Machine [App Server Instance Name: {0}] ****
memory.info.title=**** Java \u865A\u62DF\u673A\u7684\u5185\u5B58 (Perm Gen, Eden Space \u7B49) \u4FE1\u606F [\u5E94\u7528\u7A0B\u5E8F\u670D\u52A1\u5668\u5B9E\u4F8B\u540D\u79F0: {0}] ****
#logging information
#EN logging.config.file=Effective logging properties file:[{0}]. If null, it indicates JRE standard file.
logging.config.file=\u6709\u6548\u7684\u65E5\u5FD7\u8BB0\u5F55\u5C5E\u6027\u6587\u4EF6: [{0}]\u3002\u5982\u679C\u4E3A\u7A7A\u503C, \u5219\u8868\u793A JRE \u6807\u51C6\u6587\u4EF6\u3002
#EN reg.loggers=Number of loggers currently registered in the JVM: [{0}]. Details follow:
reg.loggers=JVM \u4E2D\u5F53\u524D\u6CE8\u518C\u7684\u65E5\u5FD7\u8BB0\u5F55\u7A0B\u5E8F\u6570: [{0}]\u3002\u8BE6\u7EC6\u4FE1\u606F\u5982\u4E0B:
#EN logger.details.1=If the level is blank, it is inherited from parent logger
logger.details.1=\u5982\u679C\u7EA7\u522B\u4E3A\u7A7A, \u5219\u5C06\u4ECE\u7236\u65E5\u5FD7\u8BB0\u5F55\u7A0B\u5E8F\u7EE7\u627F\u7EA7\u522B
#EN logger.details.2=Parent logger is the nearest existing parent logger
logger.details.2=\u7236\u65E5\u5FD7\u8BB0\u5F55\u7A0B\u5E8F\u662F\u6700\u8FD1\u7684\u73B0\u6709\u7236\u65E5\u5FD7\u8BB0\u5F55\u7A0B\u5E8F
#EN list.of.loggers=Logger Name | Logging Level | Parent Logger Name
list.of.loggers=\u65E5\u5FD7\u8BB0\u5F55\u7A0B\u5E8F\u540D\u79F0 | \u65E5\u5FD7\u8BB0\u5F55\u7EA7\u522B | \u7236\u65E5\u5FD7\u8BB0\u5F55\u7A0B\u5E8F\u540D\u79F0
#EN create.threadpool.duplicate=Thread Pool named {0} already exists.
create.threadpool.duplicate=\u540D\u4E3A{0}\u7684\u7EBF\u7A0B\u6C60\u5DF2\u5B58\u5728\u3002
#EN create.threadpool.failed=Creation of: {0} failed because of: {1}
create.threadpool.failed=\u521B\u5EFA{0}\u5931\u8D25, \u539F\u56E0: {1}
#EN create.threadpool.deprecated.workqueues=Deprecated Syntax: --workqueues option is deprecated for create-threadpool command.
create.threadpool.deprecated.workqueues=\u8BED\u6CD5\u5DF2\u8FC7\u65F6: \u5BF9\u4E8E create-threadpool \u547D\u4EE4, --workqueues \u9009\u9879\u5DF2\u8FC7\u65F6\u3002
#EN list.thread.pools.failed=List Thread Pools failed because of: {0}
list.thread.pools.failed=\u672A\u80FD\u5217\u51FA\u7EBF\u7A0B\u6C60, \u539F\u56E0: {0}
#EN delete.threadpool.notexists=Thread Pool named {0} does not exist.
delete.threadpool.notexists=\u540D\u4E3A{0}\u7684\u7EBF\u7A0B\u6C60\u4E0D\u5B58\u5728\u3002
#EN delete.threadpool.failed=Delete Thread Pool failed because of: {0}
delete.threadpool.failed=\u672A\u80FD\u5220\u9664\u7EBF\u7A0B\u6C60, \u539F\u56E0: {0}
