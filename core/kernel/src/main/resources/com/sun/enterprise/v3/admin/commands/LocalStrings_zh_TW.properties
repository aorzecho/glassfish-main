#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#EN create.jvm.options=creates JVM options in the Java configuration or profiler element of the domain.xml file.
create.jvm.options=\u6703\u5728 Java \u914d\u7f6e\u6216 domain.xml \u6a94\u6848\u7684\u6548\u80fd\u8a55\u6e2c\u5668\u5143\u7d20\u4e2d\u5efa\u7acb JVM \u9078\u9805\u3002
#EN create.jvm.options.jvm_option_name=The left side of the equal sign (=) is the JVM option name. The right side of the equal sign (=) is the JVM option value. A colon (:) is a delimiter for multiple options.
create.jvm.options.jvm_option_name=\u7b49\u865f (=) \u5de6\u908a\u662f JVM \u9078\u9805\u540d\u7a31\u3002\u7b49\u865f (=) \u53f3\u908a\u662f JVM \u9078\u9805\u503c\u3002\u5192\u865f (:) \u662f\u591a\u500b\u9078\u9805\u7684\u5206\u9694\u7b26\u3002
#EN create.jvm.options.usagetext=create-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
create.jvm.options.usagetext=create-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
#EN delete.jvm.options=removes JVM options from the Java configuration or profiler elements of the domain.xml file
delete.jvm.options=\u6703\u5f9e Java \u914d\u7f6e\u6216 domain.xml \u6a94\u6848\u7684\u6548\u80fd\u8a55\u6e2c\u5668\u5143\u7d20\u4e2d\u79fb\u9664 JVM \u9078\u9805\u3002
#EN delete.jvm.options.jvm_option_name=The left side of the equal sign (=) is the JVM option name. The right side of the equal sign (=) is the JVM option value. A colon (:) is a delimiter for multiple options.
delete.jvm.options.jvm_option_name=\u7b49\u865f (=) \u5de6\u908a\u662f JVM \u9078\u9805\u540d\u7a31\u3002\u7b49\u865f (=) \u53f3\u908a\u662f JVM \u9078\u9805\u503c\u3002\u5192\u865f (:) \u662f\u591a\u500b\u9078\u9805\u7684\u5206\u9694\u7b26\u3002
#EN delete.jvm.options.usagetext=delete-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
delete.jvm.options.usagetext=delete-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
#EN list.jvm.options=lists JVM options in the Java configuration or profiler element of the domain.xml file.
list.jvm.options=\u6703\u5728 Java \u914d\u7f6e\u6216 domain.xml \u6a94\u6848\u7684\u6548\u80fd\u8a55\u6e2c\u5668\u5143\u7d20\u4e2d\u5217\u51fa JVM \u9078\u9805\u3002
#EN list.jvm.options.success=Listing configured JVM Options and Java System Properties on given target successful
list.jvm.options.success=\u5728\u6307\u5b9a\u76ee\u6a19\u4e0a\u6210\u529f\u5217\u51fa\u914d\u7f6e\u7684 JVM \u9078\u9805\u548c Java \u7cfb\u7d71\u7279\u6027
#EN list.jvm.options.failed=Listing JVM options failed on given target for following reason: {0}
list.jvm.options.failed=\u5728\u6307\u5b9a\u76ee\u6a19\u4e0a\u5217\u51fa JVM \u9078\u9805\u5931\u6557\uff0c\u539f\u56e0\u5982\u4e0b: {0}
#EN create.jvm.options.success=Creating the given Option(s) on given target successful
create.jvm.options.success=\u5728\u6307\u5b9a\u76ee\u6a19\u4e0a\u6210\u529f\u5efa\u7acb\u6307\u5b9a\u9078\u9805
#EN delete.jvm.options.success=Deleting the given Option(s) on given target successful
delete.jvm.options.success=\u5728\u6307\u5b9a\u76ee\u6a19\u4e0a\u6210\u529f\u522a\u9664\u6307\u5b9a\u9078\u9805
#EN delete.jvm.options.failed=Deleting given option(s) on given target failed for following reason,\nthe current options in configuration have been retained
delete.jvm.options.failed=\u56e0\u4ee5\u4e0b\u539f\u56e0\u7121\u6cd5\u522a\u9664\u6307\u5b9a\u76ee\u6a19\u4e0a\u7684\u6307\u5b9a\u9078\u9805\uff0c\n\u5df2\u4fdd\u7559\u914d\u7f6e\u4e2d\u7684\u76ee\u524d\u9078\u9805
#EN create.profiler.first=No profiler configured yet. Create a profiler first.
create.profiler.first=\u5c1a\u672a\u914d\u7f6e\u4efb\u4f55\u6548\u80fd\u8a55\u6e2c\u5668\u3002\u8acb\u5148\u5efa\u7acb\u6548\u80fd\u8a55\u6e2c\u5668\u3002
#EN created.message=Created {0} option(s)
created.message=\u5df2\u5efa\u7acb {0} \u500b\u9078\u9805
#EN no.option.created=No jvm-options were created (perhaps they were already present)
no.option.created=\u5c1a\u672a\u5efa\u7acb\u4efb\u4f55 jvm-options (\u6216\u8a31\u5b83\u5011\u5df2\u5b58\u5728)
#EN deleted.message=Deleted {0} option(s)
deleted.message=\u5df2\u522a\u9664 {0} \u500b\u9078\u9805
#EN no.option.deleted=No jvm-options were deleted (perhaps they never existed in the configuration)
no.option.deleted=\u672a\u522a\u9664\u4efb\u4f55 jvm-options (\u6216\u8a31\u5b83\u5011\u672a\u66fe\u5b58\u5728\u65bc\u914d\u7f6e\u4e2d)
#EN joe.exists=JVM option {0} already exists in the configuration.
joe.exists=JVM \u9078\u9805 {0} \u5df2\u5b58\u5728\u65bc\u914d\u7f6e\u4e2d\u3002
#EN joe.invalid.start=JVM option {0} is invalid because it does not start with a ''-''
joe.invalid.start=JVM \u9078\u9805 {0} \u7121\u6548\uff0c\u56e0\u70ba\u6c92\u6709\u4ee5\u300c-\u300d\u958b\u982d
#EN joe.invalid.cmd.syntax=The command line:{0} does not satisfy the syntax.\nIn a nutshell, all options should start with a ''-'', multiple options are separated by a '':''.\nA '':'' inside an option should be escaped with a ''\\''.\nSince shell interprets command arguments, make sure you quote it.\n
joe.invalid.cmd.syntax=\u6307\u4ee4\u884c {0} \u4e0d\u7b26\u8a9e\u6cd5\u3002\n\u7e3d\u800c\u8a00\u4e4b\uff0c\u6240\u6709\u9078\u9805\u90fd\u5fc5\u9808\u4ee5\u300c-\u300d\u958b\u982d\uff0c\u591a\u500b\u9078\u9805\u4ee5\u300c:\u300d\u5206\u9694\u3002\n\u9078\u9805\u4e2d\u7684\u300c:\u300d\u5fc5\u9808\u4ee5\u300c\\\u300d\u7576\u4f5c\u9000\u51fa\u5b57\u5143\u3002\n\u7531\u65bc shell \u6703\u89e3\u8b6f\u6307\u4ee4\u5f15\u6578\uff0c\u56e0\u6b64\u8acb\u52d9\u5fc5\u7528\u5f15\u865f\u62ec\u8d77\u4f86\u3002\n
#EN soft.invalid.xmx=It appears that given JVM option {0} represents invalid maximum heap for the JVM. Ensure that it is valid, by doing list-jvm-options.
soft.invalid.xmx=\u6307\u5b9a JVM \u9078\u9805 {0} \u6240\u4ee3\u8868\u7684\u6700\u5927\u5806\u758a\u4f3c\u4e4e\u5c0d JVM \u7121\u6548\u3002\u8acb\u57f7\u884c list-jvm-options \u4f86\u78ba\u5b9a\u5176\u662f\u5426\u6709\u6548\u3002
#EN soft.xmx.exists=The configuration already has maximum heap size specified: {0}. Verify the java configuration by doing list-jvm-options.
soft.xmx.exists=\u914d\u7f6e\u5df2\u5177\u6709\u6307\u5b9a\u6700\u5927\u5806\u758a\u5927\u5c0f: {0}\u3002\u8acb\u57f7\u884c list-jvm-options \u4f86\u78ba\u5b9a java \u914d\u7f6e\u3002
#EN soft.xmx.smaller.than.xms=It appears that the maximum heap size specified: {0} is smaller than the minimum heap size in the configuration: {1}. JVM might not start. Ensure that this is valid, by doing doing list-jvm-options.
soft.xmx.smaller.than.xms=\u6307\u5b9a\u7684\u6700\u5927\u5806\u758a\u5927\u5c0f {0} \u4f3c\u4e4e\u5c0f\u65bc\u914d\u7f6e\u4e2d\u7684\u6700\u5c0f\u5806\u758a\u5927\u5c0f {1}\u3002JVM \u53ef\u80fd\u7121\u6cd5\u555f\u52d5\u3002\u8acb\u57f7\u884c list-jvm-options \u4f86\u78ba\u8a8d\u9019\u662f\u5426\u6709\u6548\u3002
#EN soft.invalid.xms=It appears that given JVM option {0} represents invalid initial heap for the JVM. Ensure that it is valid, by doing list-jvm-options.
soft.invalid.xms=\u6307\u5b9a JVM \u9078\u9805 {0} \u6240\u4ee3\u8868\u7684\u521d\u59cb\u5806\u758a\u4f3c\u4e4e\u5c0d JVM \u7121\u6548\u3002\u8acb\u57f7\u884c list-jvm-options \u4f86\u78ba\u5b9a\u5176\u662f\u5426\u6709\u6548\u3002
#EN soft.xms.exists=The configuration already has initial heap size specified: {0}. Verify the java configuration by doing list-jvm-options.
soft.xms.exists=\u914d\u7f6e\u5df2\u5177\u6709\u6307\u5b9a\u7684\u521d\u59cb\u5806\u758a\u5927\u5c0f: {0}\u3002\u8acb\u57f7\u884c list-jvm-options \u4f86\u78ba\u5b9a java \u914d\u7f6e\u3002
#EN soft.xms.larger.than.xmx=It appears that the initial heap size specified: {0} is larger than the maximum heap size in the configuration: {1}. JVM might not start. Ensure that this is valid, by doing doing list-jvm-options.
soft.xms.larger.than.xmx=\u6307\u5b9a\u7684\u521d\u59cb\u5806\u758a\u5927\u5c0f {0} \u4f3c\u4e4e\u5927\u65bc\u914d\u7f6e\u4e2d\u7684\u6700\u5927\u5806\u758a\u5927\u5c0f {1}\u3002JVM \u53ef\u80fd\u7121\u6cd5\u555f\u52d5\u3002\u8acb\u57f7\u884c list-jvm-options \u4f86\u78ba\u8a8d\u9019\u662f\u5426\u6709\u6548\u3002
#Generate JVM Report
#EN server.unreachable=The server {0} seems to be unreachable. This means either it is not running or there is an internal communication error.
server.unreachable=\u4f3c\u4e4e\u7121\u6cd5\u9023\u7dda\u81f3\u4f3a\u670d\u5668 {0}\u3002\u9019\u610f\u5473\u8457\u8a72\u4f3a\u670d\u5668\u4e26\u672a\u555f\u52d5\uff0c\u6216\u767c\u751f\u5167\u90e8\u901a\u8a0a\u932f\u8aa4\u3002
#EN td.title=Full Java Thread Dump {0} {1} {2}
td.title=\u5b8c\u6574 Java \u57f7\u884c\u7dd2\u50be\u5370 {0} {1} {2}
#EN thread.no=Number of threads: {0}
thread.no=\u57f7\u884c\u7dd2\u6578\u76ee: {0}
#EN daemon.thread.no=Number of daemon threads: {0}
daemon.thread.no=\u5e38\u99d0\u7a0b\u5f0f\u57f7\u884c\u7dd2\u6578\u76ee: {0}
#EN peak.thread.no=Peak live thread count since the Java virtual machine started or peak was reset: {0}
peak.thread.no=\u5728 Java \u865b\u64ec\u6a5f\u5668\u555f\u52d5\u6216\u91cd\u8a2d\u5c16\u5cf0\u4e4b\u5f8c\u7684\u5c16\u5cf0\u4f5c\u7528\u4e2d\u57f7\u884c\u7dd2\u8a08\u6578: {0}
#EN thread.contention.monitoring.supported=Is support for thread contention monitoring available on this JVM? [{0}]
thread.contention.monitoring.supported=\u6b64 JVM \u662f\u5426\u652f\u63f4\u57f7\u884c\u7dd2\u7af6\u722d\u72c0\u614b\u76e3\u8996\uff1f[{0}]
#EN thread.contention.monitoring.enabled=Is thread contention monitoring enabled? [{0}]. If false, some thread synchronization statistics are not be available.
thread.contention.monitoring.enabled=\u662f\u5426\u5df2\u555f\u7528\u57f7\u884c\u7dd2\u7af6\u722d\u72c0\u614b\u76e3\u8996\uff1f[{0}]. \u82e5\u70ba\u5426\uff0c\u5c07\u7121\u6cd5\u53d6\u5f97\u67d0\u4e9b\u57f7\u884c\u7dd2\u540c\u6b65\u5316\u7d71\u8a08\u3002
#EN thread.cputime.supported=Is support for CPU time measurement for any thread available on this JVM? [{0}]
thread.cputime.supported=\u6b64 JVM \u662f\u5426\u652f\u63f4\u4efb\u4f55\u57f7\u884c\u7dd2\u7684 CPU \u6642\u9593\u6e2c\u91cf\uff1f[{0}]
#EN thread.cputime.enabled=Is thread CPU time measurement enabled? [{0}]. If false, thread execution times are not available for any thread.
thread.cputime.enabled=\u662f\u5426\u5df2\u555f\u7528\u57f7\u884c\u7dd2 CPU \u6642\u9593\u6e2c\u91cf\uff1f[{0}]. \u82e5\u70ba\u5426\uff0c\u5c07\u7121\u6cd5\u53d6\u5f97\u4efb\u4f55\u57f7\u884c\u7dd2\u7684\u57f7\u884c\u7dd2\u57f7\u884c\u6642\u9593\u3002
#EN execution.info=Thread Execution Information:
execution.info=\u57f7\u884c\u7dd2\u57f7\u884c\u8cc7\u8a0a:
#EN thread.title=Thread {0} thread-id: {1} thread-state: {2}
thread.title=\u57f7\u884c\u7dd2 {0} \u57f7\u884c\u7dd2 ID: {1} \u57f7\u884c\u7dd2\u72c0\u614b: {2}
#EN thread.waiting.on=Waiting on lock: {0}
thread.waiting.on=\u6b63\u5728\u7b49\u5f85\u9396\u5b9a: {0}
#EN thread.suspended=Suspended
thread.suspended=\u5df2\u66ab\u505c
#EN thread.in.native=Running in native
thread.in.native=\u6b63\u5728\u672c\u6a5f\u4e0a\u57f7\u884c
#EN thread.stack.element=\t at: {0}
thread.stack.element=\t\u65bc: {0}
#EN no.deadlock=No deadlock found
no.deadlock=\u672a\u627e\u5230\u6b7b\u7d50
#EN sync.info=Thread Synchronization Statistics:
sync.info=\u57f7\u884c\u7dd2\u540c\u6b65\u5316\u7d71\u8a08:
#EN thread.blocked.times=Number of times this thread was blocked (to enter/reenter a Monitor): {0}
thread.blocked.times=\u6b64\u57f7\u884c\u7dd2\u906d\u5c01\u9396\u7684\u6b21\u6578 (\u70ba\u4e86\u9032\u5165/\u91cd\u65b0\u9032\u5165\u76e3\u8996\u5668): {0}
#EN thread.blocked.totaltime=Total (approximate) time the thread was in BLOCKED state: {0} milliseconds since thread contention monitoring was last enabled.
thread.blocked.totaltime=\u5728\u4e0a\u6b21\u555f\u7528\u57f7\u884c\u7dd2\u7af6\u722d\u72c0\u614b\u76e3\u8996\u4e4b\u5f8c\uff0c\u57f7\u884c\u7dd2\u8655\u65bc BLOCKED \u72c0\u614b\u7684\u7e3d (\u5927\u7d04) \u6642\u9593: {0} \u6beb\u79d2\u3002
#EN thread.total.cpu.time=Total CPU time for this thread: {0} seconds {1} nanoseconds.
thread.total.cpu.time=\u6b64\u57f7\u884c\u7dd2\u7684\u7e3d CPU \u6642\u9593: {0} \u79d2 {1} \u5948\u79d2\u3002
#EN thread.cpu.user.time=User-level CPU time for this thread: {0} seconds {1} nanoseconds.
thread.cpu.user.time=\u6b64\u57f7\u884c\u7dd2\u7684\u4f7f\u7528\u8005\u5c64\u7d1a CPU \u6642\u9593: {0} \u79d2 {1} \u5948\u79d2\u3002
#EN wait.times=Number of times this thread waited for a notification (i.e. it was in WAITING or TIMED_WAITING state): {0}
wait.times=\u6b64\u57f7\u884c\u7dd2\u7b49\u5f85\u901a\u77e5\u7684\u6b21\u6578 (\u5373\u8655\u65bc WAITING \u6216 TIMED_WAITING \u72c0\u614b): {0}
#EN lock.owner.details=This thread is blocked waiting on lock owned currently by thread named: {0}, id: {1}
lock.owner.details=\u5df2\u5c01\u9396\u6b64\u57f7\u884c\u7dd2\uff0c\u7b49\u5f85\u76ee\u524d\u7531\u57f7\u884c\u7dd2 (\u540d\u7a31: {0}\uff0cID: {1}) \u6240\u64c1\u6709\u7684\u9396\u5b9a
#EN monitor.info=Object Monitors currently held or requested by this thread: {0}
monitor.info=\u6b64\u57f7\u884c\u7dd2\u76ee\u524d\u5df2\u4fdd\u7559\u6216\u8acb\u6c42\u7269\u4ef6\u76e3\u8996\u5668: {0}
#EN ownable.sync.info=Ownable Synchronizers (e.g. ReentrantLock and ReentrantReadWriteLock) held by this thread: {0}
ownable.sync.info=\u6b64\u57f7\u884c\u7dd2\u6240\u4fdd\u7559\u4e4b\u53ef\u64c1\u6709\u540c\u6b65\u5668 (\u4f8b\u5982 ReentrantLock \u548c ReentrantReadWriteLock): {0}
#EN deadlocks.found=Following thread(s) were deadlocked:
deadlocks.found=\u4ee5\u4e0b\u57f7\u884c\u7dd2\u5df2\u8655\u65bc\u6b7b\u7d50\u72c0\u614b\uff1a
#EN m2hms={0} Hours {1} Minutes {2} Seconds
m2hms={0} \u5c0f\u6642 {1} \u5206\u9418 {2} \u79d2
#EN m2sms={0} Seconds {1} Milliseconds
m2sms={0} \u79d2 {1} \u6beb\u79d2
#EN uptime=The uptime of Java Virtual Machine: {0}
uptime=Java \u865b\u64ec\u6a5f\u5668\u7684\u6b63\u5e38\u57f7\u884c\u6642\u9593: {0}
#EN memory.pool.name=Memory Pool Name: {0}
memory.pool.name=\u8a18\u61b6\u9ad4\u6c60\u540d\u7a31: {0}
#EN memory.usage.init=Memory that Java Virtual Machine initially requested to the Operating System: {0} Bytes
memory.usage.init=Java \u865b\u64ec\u6a5f\u5668\u6700\u521d\u5411\u4f5c\u696d\u7cfb\u7d71\u8acb\u6c42\u7684\u8a18\u61b6\u9ad4\u5bb9\u91cf: {0} \u4f4d\u5143\u7d44
#EN memory.usage.comm=Memory that Java Virtual Machine is guaranteed to receive from the Operating System: {0} Bytes
memory.usage.comm=\u4fdd\u8b49 Java \u865b\u64ec\u6a5f\u5668\u53ef\u5f9e\u4f5c\u696d\u7cfb\u7d71\u63a5\u6536\u7684\u8a18\u61b6\u9ad4\u5bb9\u91cf: {0} \u4f4d\u5143\u7d44
#EN memory.usage.max=Maximum Memory that Java Virtual Machine may get from the Operating System: {0} Bytes. Note that this is not guaranteed.
memory.usage.max=Java \u865b\u64ec\u6a5f\u5668\u53ef\u5f9e\u4f5c\u696d\u7cfb\u7d71\u53d6\u5f97\u7684\u6700\u5927\u8a18\u61b6\u9ad4\u5bb9\u91cf: {0} \u4f4d\u5143\u7d44\u3002\u8acb\u6ce8\u610f\uff0c\u4e0d\u4fdd\u8b49\u4e00\u5b9a\u80fd\u53d6\u5f97\u6700\u5927\u5bb9\u91cf\u3002
#EN memory.usage.used=Memory that Java Virtual Machine uses at this time: {0} Bytes
memory.usage.used=Java \u865b\u64ec\u6a5f\u5668\u76ee\u524d\u4f7f\u7528\u7684\u8a18\u61b6\u9ad4\u5bb9\u91cf: {0} \u4f4d\u5143\u7d44
#EN gc.name=Name of the Garbage Collector: {0}
gc.name=\u56de\u6536\u6536\u96c6\u5668\u7684\u540d\u7a31: {0}
#EN gc.numcol=Number of collections occurred using this garbage collector: {0} Bytes
gc.numcol=\u4f7f\u7528\u6b64\u56de\u6536\u6536\u96c6\u5668\u6240\u6536\u96c6\u7684\u9805\u76ee\u5927\u5c0f: {0} \u4f4d\u5143\u7d44
#EN gc.coltime=Garbage Collection Time: {0}
gc.coltime=\u8cc7\u6e90\u56de\u6536\u6642\u9593: {0}
#EN heap.mem.usage=Heap Memory Usage:
heap.mem.usage=\u5806\u758a\u8a18\u61b6\u9ad4\u4f7f\u7528\u7387:
#EN nonheap.mem.usage=Non-heap Memory Usage:
nonheap.mem.usage=\u975e\u5806\u758a\u8a18\u61b6\u9ad4\u4f7f\u7528\u7387:
#EN obj.fin.pending=Approximate number of objects for which finalization is pending: {0}
obj.fin.pending=\u64f1\u7f6e\u7d50\u675f\u64cd\u4f5c\u4e4b\u7269\u4ef6\u7684\u5927\u7d04\u6578\u76ee: {0}
#EN classloading.info=Class loading and unloading in the Java Virtual Machine:
classloading.info=Java \u865b\u64ec\u6a5f\u5668\u8f09\u5165\u8207\u5378\u8f09\u7684\u985e\u5225:
#EN classes.loaded=Number of classes currently loaded in the Java Virtual Machine: {0}
classes.loaded=Java \u865b\u64ec\u6a5f\u5668\u4e2d\u76ee\u524d\u5df2\u8f09\u5165\u7684\u985e\u5225\u6578\u76ee: {0}
#EN classes.total=Number of classes loaded in the Java Virtual Machine since the startup: {0}
classes.total=Java \u865b\u64ec\u6a5f\u5668\u81ea\u555f\u52d5\u4ee5\u4f86\u5df2\u8f09\u5165\u7684\u985e\u5225\u6578\u76ee: {0}
#EN classes.unloaded=Number of classes unloaded from the Java Virtual Machine: {0}
classes.unloaded=\u5df2\u5f9e Java \u865b\u64ec\u6a5f\u5668\u4e2d\u5378\u8f09\u7684\u985e\u5225\u6578\u76ee: {0}
#EN complilation.info=Just-in-time (JIT) compilation information in the Java Virtual Machine:
complilation.info=Java \u865b\u64ec\u6a5f\u5668\u4e2d\u7684\u53ca\u6642 (JIT) \u7de8\u8b6f\u8cc7\u8a0a:
#EN compilation.monitor.status=Java Virtual Machine compilation monitoring allowed: {0}
compilation.monitor.status=\u5141\u8a31\u76e3\u8996 Java \u865b\u64ec\u6a5f\u5668\u7de8\u8b6f: {0}
#EN jit.compilar.name=Name of the Just-in-time (JIT) compiler: {0}
jit.compilar.name=\u53ca\u6642 (JIT) \u7de8\u8b6f\u5668\u7684\u540d\u7a31: {0}
#EN compilation.time=Total time spent in compilation: {0}
compilation.time=\u7de8\u8b6f\u6240\u82b1\u8cbb\u7684\u7e3d\u6642\u9593: {0}
#EN os.info=Operating System Information:
os.info=\u4f5c\u696d\u7cfb\u7d71\u8cc7\u8a0a:
#EN os.name=Name of the Operating System: {0}
os.name=\u4f5c\u696d\u7cfb\u7d71\u7684\u540d\u7a31: {0}
#EN os.arch=Binary Architecture name of the Operating System: {0}, Version: {1}
os.arch=\u4f5c\u696d\u7cfb\u7d71\u7684\u4e8c\u9032\u4f4d\u67b6\u69cb\u540d\u7a31: {0}\uff0c\u7248\u672c: {1}
#EN os.nproc=Number of processors available on the Operating System: {0}
os.nproc=\u4f5c\u696d\u7cfb\u7d71\u4e0a\u7684\u8655\u7406\u5668\u6578\u76ee: {0}
#EN os.load=System load on the available processors for the last minute: {0}. (Sum of running and queued runnable entities per minute)
os.load=\u53ef\u7528\u8655\u7406\u5668\u6700\u5f8c\u4e00\u5206\u9418\u7684\u7cfb\u7d71\u8ca0\u8f09: {0}\u3002(\u6bcf\u5206\u9418\u57f7\u884c\u4e2d\u5be6\u9ad4\u548c\u5df2\u4f47\u5217\u7684\u53ef\u57f7\u884c\u5be6\u9ad4\u4e4b\u7e3d\u548c)
#EN rt.info=General Java Runtime Environment Information for the VM: {0}
rt.info=VM \u7684 Java Runtime Environment \u6982\u8981\u8cc7\u8a0a: {0}
#EN rt.bcp=JRE BootClassPath: {0}
rt.bcp=JRE \u555f\u52d5\u985e\u5225\u8def\u5f91: {0}
#EN rt.cp=JRE ClassPath: {0}
rt.cp=JRE \u985e\u5225\u8def\u5f91: {0}
#EN rt.libpath=JRE Native Library Path: {0}
rt.libpath=JRE \u672c\u6a5f\u7a0b\u5f0f\u5eab\u8def\u5f91: {0}
#EN rt.nvv=JRE name: {0} Vendor: {1} Version: {2}
rt.nvv=JRE \u540d\u7a31: {0} \u4f9b\u61c9\u5546: {1} \u7248\u672c: {2}
#EN rt.sysprops=List of System Properties for the Java Virtual Machine:
rt.sysprops=Java \u865b\u64ec\u6a5f\u5668\u7684\u7cfb\u7d71\u7279\u6027\u6e05\u55ae:
#EN summary.title=**** Java Virtual Machine [App Server Instance Name: {0}] Summary ****
summary.title=**** Java \u865b\u64ec\u6a5f\u5668 [\u61c9\u7528\u7a0b\u5f0f\u4f3a\u670d\u5668\u5be6\u4f8b\u540d\u7a31: {0}] \u6458\u8981 ****
#EN class.info.title=**** Class Statistics for Java Virtual Machine [App Server Instance Name: {0}] ****
class.info.title=**** Java \u865b\u64ec\u6a5f\u5668 [\u61c9\u7528\u7a0b\u5f0f\u4f3a\u670d\u5668\u5be6\u4f8b\u540d\u7a31 {0}] \u7684\u985e\u5225\u7d71\u8a08 ****
#EN thread.dump.title=**** Thread Dump for Java Virtual Machine [App Server Instance Name: {0}] ****
thread.dump.title=**** Java \u865b\u64ec\u6a5f\u5668 [\u61c9\u7528\u7a0b\u5f0f\u4f3a\u670d\u5668\u5be6\u4f8b\u540d\u7a31 {0}] \u7684\u57f7\u884c\u7dd2\u50be\u5370 ****
#EN memory.info.title=**** Memory (Perm Gen, Eden Space etc.) Information for Java Virtual Machine [App Server Instance Name: {0}] ****
memory.info.title=**** Java \u865b\u64ec\u6a5f\u5668 [\u61c9\u7528\u7a0b\u5f0f\u4f3a\u670d\u5668\u5be6\u4f8b\u540d\u7a31 {0}] \u7684\u8a18\u61b6\u9ad4 (Perm Gen \u7a7a\u9593\u3001Eden \u7a7a\u9593\u7b49) \u8cc7\u8a0a ****
#logging information
#EN logging.config.file=Effective logging properties file:[{0}]. If null, it indicates JRE standard file.
logging.config.file=\u6709\u6548\u7684\u8a18\u9304\u7279\u6027\u6a94\u6848: [{0}]\u3002\u82e5\u70ba\u7a7a\u503c\uff0c\u5373\u8868\u793a JRE \u6a19\u6e96\u6a94\u6848\u3002
#EN reg.loggers=Number of loggers currently registered in the JVM: [{0}]. Details follow:
reg.loggers=\u76ee\u524d\u8a3b\u518a\u65bc JVM \u4e2d\u7684\u8a18\u9304\u7a0b\u5f0f\u6578\u76ee: [{0}]\u3002\u8a73\u7d30\u8cc7\u8a0a\u5982\u4e0b\uff1a
#EN logger.details.1=If the level is blank, it is inherited from parent logger
logger.details.1=\u5982\u679c\u5c64\u7d1a\u7a7a\u767d\uff0c\u8868\u793a\u5b83\u6703\u7e7c\u627f\u81ea\u7236\u7cfb\u8a18\u9304\u7a0b\u5f0f
#EN logger.details.2=Parent logger is the nearest existing parent logger
logger.details.2=\u7236\u7cfb\u8a18\u9304\u7a0b\u5f0f\u662f\u6700\u63a5\u8fd1\u7684\u73fe\u6709\u7236\u7cfb\u8a18\u9304\u7a0b\u5f0f
#EN list.of.loggers=Logger Name | Logging Level | Parent Logger Name
list.of.loggers=\u8a18\u9304\u7a0b\u5f0f\u540d\u7a31 | \u8a18\u9304\u5c64\u7d1a | \u7236\u7cfb\u8a18\u9304\u7a0b\u5f0f\u540d\u7a31
#EN create.threadpool.duplicate=Thread Pool named {0} already exists.
create.threadpool.duplicate=\u540d\u7a31\u70ba {0} \u7684\u57f7\u884c\u7dd2\u6c60\u5df2\u5b58\u5728\u3002
#EN create.threadpool.failed=Creation of: {0} failed because of: {1}
create.threadpool.failed=\u5efa\u7acb {0} \u5931\u6557\uff0c\u56e0\u70ba: {1}
#EN create.threadpool.deprecated.workqueues=Deprecated Syntax: --workqueues option is deprecated for create-threadpool command.
create.threadpool.deprecated.workqueues=\u4e0d\u518d\u652f\u63f4\u7684\u8a9e\u6cd5\uff1acreate-threadpool \u6307\u4ee4\u4e0d\u518d\u652f\u63f4 --workqueues \u9078\u9805\u3002
#EN list.thread.pools.failed=List Thread Pools failed because of: {0}
list.thread.pools.failed=\u5217\u51fa\u57f7\u884c\u7dd2\u6c60\u5931\u6557\uff0c\u56e0\u70ba: {0}
#EN delete.threadpool.notexists=Thread Pool named {0} does not exist.
delete.threadpool.notexists=\u540d\u7a31\u70ba {0} \u7684\u57f7\u884c\u7dd2\u6c60\u4e0d\u5b58\u5728\u3002
#EN delete.threadpool.failed=Delete Thread Pool failed because of: {0}
delete.threadpool.failed=\u522a\u9664\u57f7\u884c\u7dd2\u6c60\u5931\u6557\uff0c\u56e0\u70ba: {0}
