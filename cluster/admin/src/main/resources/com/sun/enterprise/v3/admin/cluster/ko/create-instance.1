CREATE-INSTANCE(1)                                          CREATE-INSTANCE(1)

제목
       create-instance - GlassFish Server 인스턴스 생성

시놉시스
           create-instance [--help] --node node-name
           [--config config-name | --cluster cluster-name]
           [--lbenabled={true|false}]
           [--portbase=port-number] [--checkports={true|false}]
           [--systemproperties (name=value)[:name=value]* ]
           instance-name

설명
       create-instance 하위 명령은 GlassFish Server 인스턴스를 생성합니다. 이
       하위 명령을 사용하려면 DAS(도메인 관리 서버)가 실행되고 있는 호스트 및
       인스턴스가 상주하게 될 노드가 나타내는 호스트에 DCOM(Distributed
       Component Object Model) 원격 프로토콜 또는 SSH(보안 셸)가 구성되어
       있어야 합니다.

           참고
           ┌────────────────────────────────────────┐
           │주                                      │
           │                                        │
           │           인스턴스가 로컬 호스트를     │
           │           나타내는 CONFIG 유형의       │
           │           노드에 상주하게 될 경우 DCOM │
           │           또는 SSH가 필요하지          │
           │           않습니다.  CONFIG 유형의     │
           │           노드는 DCOM 또는 SSH를 통한  │
           │           원격 통신에는 사용할 수      │
           │           없습니다.                    │
           └────────────────────────────────────────┘

       DAS에 접속할 수 있는 모든 호스트에서 이 명령을 실행할 수 있습니다.

       GlassFish Server 인스턴스는 GlassFish Server이(가) 실행되고 있는 단일
       노드에서 Java 플랫폼용 단일 가상 시스템(Java Virtual Machine 또는 JVM
       시스템)입니다. 노드는 GlassFish Server 인스턴스가 상주하는 호스트를
       정의합니다. JVM 시스템은 Java Platform, Enterprise Edition(Java EE)과
       호환되어야 합니다.

       GlassFish Server 인스턴스에는 다음 항목에 대한 참조가 필요합니다.

       ·   인스턴스가 상주하는 호스트를 정의하는 노드입니다. 인스턴스를
           생성하는 명령에 노드를 지정해야 합니다.

       ·   인스턴스의 구성을 정의하는 이름이 지정된 구성입니다. 인스턴스를
           생성하는 명령에 구성을 정의할 수 있지만 필수는 아닙니다. 클러스터에
           속하지 않는 인스턴스에 대한 구성이 지정되어 있지 않은 경우 하위
           명령에서 해당 인스턴스에 대한 구성을 생성합니다. 클러스터에 속하는
           인스턴스는 자신의 상위 클러스터로부터 해당 구성을 받습니다.

       각 GlassFish Server 인스턴스는 다음과 같은 인스턴스 유형 중 하나입니다.

       독립형 인스턴스
           독립형 인스턴스는 다른 인스턴스나 클러스터와 구성을 공유하지
           않습니다. 다음 조건 중 하나를 충족하면 독립형 인스턴스가
           생성됩니다.

           ·   인스턴스를 생성하기 위한 명령에 구성 또는 클러스터가 지정되어
               있지 않습니다.

           ·   인스턴스를 생성하기 위한 명령에 다른 모든 인스턴스 또는
               클러스터에 의해 참조되지 않는 구성이 지정되어 있습니다.

           구성 또는 클러스터가 지정되어 있지 않으면 인스턴스에 대한
           default-config 구성의 복사본이 생성됩니다. 이 구성의 이름은
           instance-name-config이며, 여기서 instance-name은 클러스터되지 않은
           서버 인스턴스의 이름을 나타냅니다.

       공유 인스턴스
           공유 인스턴스는 다른 인스턴스나 클러스터와 구성을 공유합니다.
           인스턴스를 생성하기 위한 명령에 다른 인스턴스 또는 클러스터에 의해
           참조되는 구성이 지정되어 있으면 공유 인스턴스가 생성됩니다.

       클러스터된 인스턴스
           클러스터된 인스턴스는 인스턴스가 속한 클러스터의 구성을 상속하고
           해당 구성을 클러스터의 다른 인스턴스와 공유합니다. 클러스터된
           인스턴스는 인스턴스를 생성하는 명령에서 클러스터를 지정하는 경우에
           생성됩니다.

           클러스터의 일부가 아닌 인스턴스는 클러스터되지 않은 서버 인스턴스로
           간주됩니다. 따라서 독립형 인스턴스와 공유 인스턴스는 클러스터되지
           않은 서버 인스턴스입니다.

       기본적으로 이 하위 명령은 생성 중인 인스턴스에서 발생할 수 있는 포트
       충돌을 해결하려고 합니다. 또한 하위 명령은 현재 사용 중이 아니며 동일한
       노드의 다른 인스턴스에 이미 지정되지 않은 포트를 지정합니다. 하위
       명령은 하위 명령의 내부 알고리즘을 기반으로 하여 이러한 포트를
       지정합니다.  --systemproperties 옵션은 동일한 노드의 추가 인스턴스에
       대한 포트 충돌을 해결합니다. 인스턴스의 시스템 속성은
       create-system-properties(1) 하위 명령 및 delete-system-property(1) 하위
       명령을 사용하여 조작할 수 있습니다.

       이 하위 명령은 원격 모드에서만 지원됩니다.

옵션
       --help, -?
           하위 명령에 대한 도움말 텍스트를 표시합니다.

       --node
           인스턴스를 생성할 호스트를 정의하는 노드의 이름입니다. 노드가
           존재해야 합니다. DAS(도메인 관리 서버)가 실행되고 있는 호스트에
           인스턴스를 생성할 경우 미리 정의된 노드 localhost-domain을
           사용합니다.

       --config
           인스턴스에서 참조하는 명명된 구성을 지정합니다. 구성이 존재해야
           하며 default-config 또는 server-config라는 이름을 지정해서는
           안됩니다.  --config 옵션을 지정하면 공유 인스턴스가 생성됩니다.

           --config 옵션과 --cluster 옵션은 함께 사용할 수 없습니다. 두 옵션을
           모두 생략하면 독립형 인스턴스가 생성됩니다.

       --cluster
           인스턴스가 해당 구성을 상속하는 클러스터를 지정합니다.  --cluster
           옵션을 지정하면 클러스터된 인스턴스가 생성됩니다.

           --config 옵션과 --cluster 옵션은 함께 사용할 수 없습니다. 두 옵션을
           모두 생략하면 독립형 인스턴스가 생성됩니다.

       --lbenabled
           로드 균형 조정에 대해 인스턴스가 사용 가능한지 여부를 지정합니다.
           가능한 값은 다음과 같습니다.

           true
               로드 균형 조정에 대해 인스턴스가 사용 가능합니다(기본값).

               로드 균형 조정에 대해 인스턴스가 사용 가능하면 로드 밸런서가
               인스턴스에 요청을 보냅니다.

           false
               로드 균형 조정에 대해 인스턴스가 사용 안함으로 설정됩니다.

               로드 균형 조정에 대해 인스턴스가 사용 안함으로 설정되면 로드
               밸런서가 인스턴스에 요청을 보내지 않습니다.

       --portbase
           포트 지정이 시작되는 번호를 결정합니다. 인스턴스에서는 정적으로
           지정되는 특정 포트 번호를 사용합니다.  portbase 값은 지정이
           시작되는 위치를 결정합니다. 포트에 대한 값은 다음과 같이
           계산됩니다.

           ·   관리 포트: portbase + 48

           ·   HTTP 리스너 포트: portbase + 80

           ·   HTTPS 리스너 포트: portbase + 81

           ·   JMS 포트: portbase + 76

           ·   IIOP 리스너 포트: portbase + 37

           ·   보안 IIOP 리스너 포트: portbase + 38

           ·   상호 인증이 있는 보안 IIOP 포트: portbase + 39

           ·   JMX 포트: portbase + 86

           ·   JPA 디버거 포트: portbase + 9

           ·   OSGi 모듈 관리를 위한 Felix 셸 서비스 포트: portbase + 66

           --portbase 옵션을 지정하면 이 하위 명령의 출력에 사용된 포트 전체
           목록이 포함됩니다.

       --checkports
           관리, HTTP, JMS, JMX 및 IIOP 포트의 가용성을 확인할지 여부를
           지정합니다. 기본값은 true입니다.

       --systemproperties
           인스턴스의 시스템 속성을 정의합니다. 이러한 속성은 인스턴스 구성의
           포트 설정에 대한 속성 정의를 무시합니다. 예를 들어 두 개의
           클러스터링된 인스턴스가 동일한 호스트에 있는 경우 사전 정의된 포트
           설정을 무시해야 합니다. 이런 경우 두 인스턴스에서 동일한 구성을
           공유하므로 한 인스턴스의 포트 설정을 무시해야 합니다.

           다음 속성을 사용할 수 있습니다.

           ASADMIN_LISTENER_PORT
               이 속성은 DAS가 인스턴스를 관리하기 위해 인스턴스에 접속할 HTTP
               포트 또는 HTTPS 포트의 포트 번호를 지정합니다. 적합한 값은
               1-65535입니다. UNIX의 경우 1-1024 포트에서 수신하는 소켓을
               생성하려면 수퍼유저 권한이 필요합니다.

           HTTP_LISTENER_PORT
               이 속성은 HTTP 요청을 수신하는 데 사용되는 포트의 포트 번호를
               지정합니다. 적합한 값은 1-65535입니다. UNIX의 경우 1-1024
               포트에서 수신하는 소켓을 생성하려면 수퍼유저 권한이 필요합니다.

           HTTP_SSL_LISTENER_PORT
               이 속성은 HTTPS 요청을 수신하는 데 사용되는 포트의 포트 번호를
               지정합니다. 적합한 값은 1-65535입니다. UNIX의 경우 1-1024
               포트에서 수신하는 소켓을 생성하려면 수퍼유저 권한이 필요합니다.

           IIOP_LISTENER_PORT
               이 속성은 IIOP 접속에 사용되는 포트의 포트 번호를 지정합니다.
               적합한 값은 1-65535입니다. UNIX의 경우 1-1024 포트에서 수신하는
               소켓을 생성하려면 수퍼유저 권한이 필요합니다.

           IIOP_SSL_LISTENER_PORT
               이 속성은 보안 IIOP 접속에 사용되는 포트의 포트 번호를
               지정합니다. 적합한 값은 1-65535입니다. UNIX의 경우 1-1024
               포트에서 수신하는 소켓을 생성하려면 수퍼유저 권한이 필요합니다.

           IIOP_SSL_MUTUALAUTH_PORT
               이 속성은 클라이언트 인증으로 보안된 IIOP 접속에 사용되는
               포트의 포트 번호를 지정합니다. 적합한 값은 1-65535입니다.
               UNIX의 경우 1-1024 포트에서 수신하는 소켓을 생성하려면 수퍼유저
               권한이 필요합니다.

           JAVA_DEBUGGER_PORT
               이 속성은 JPDA(Java Platform Debugger
               Architecture)(http://java.sun.com/javase/technologies/core/toolsapis/jpda/)
               디버거 접속에 사용되는 포트의 포트 번호를 지정합니다. 적합한
               값은 1-65535입니다. UNIX의 경우 1-1024 포트에서 수신하는 소켓을
               생성하려면 수퍼유저 권한이 필요합니다.

           JMS_PROVIDER_PORT
               이 속성은 Java Message Service 제공자에 대한 포트 번호를
               지정합니다. 적합한 값은 1-65535입니다. UNIX의 경우 1-1024
               포트에서 수신하는 소켓을 생성하려면 수퍼유저 권한이 필요합니다.

           JMX_SYSTEM_CONNECTOR_PORT
               이 속성은 JMX 커넥터가 수신하는 포트 번호를 지정합니다. 적합한
               값은 1-65535입니다. UNIX의 경우 1-1024 포트에서 수신하는 소켓을
               생성하려면 수퍼유저 권한이 필요합니다.

           OSGI_SHELL_TELNET_PORT
               이 속성은 Apache Felix Remote
               Shell(http://felix.apache.org/site/apache-felix-remote-shell.html)
               접속에 사용되는 포트의 포트 번호를 지정합니다. 이 셸은 Felix 셸
               서비스를 사용하여 OSGi 모듈 관리 부속 시스템과 상호 작용합니다.
               적합한 값은 1-65535입니다. UNIX의 경우 1-1024 포트에서 수신하는
               소켓을 생성하려면 수퍼유저 권한이 필요합니다.

피연산자
       instance-name
           생성할 인스턴스의 이름입니다.

           이름은 다음 요구 사항을 충족해야 합니다.

           ·   이름에는 ASCII 문자만 포함될 수 있습니다

           ·   이름은 문자, 숫자 또는 밑줄로 시작해야 합니다.

           ·   이름에는 다음 문자만 포함할 수 있습니다.

               ·   소문자

               ·   대문자

               ·   숫자

               ·   하이픈

               ·   마침표

               ·   밑줄

           ·   이름은 도메인에서 고유해야 하며 다른 GlassFish Server 인스턴스,
               클러스터, 명명된 구성 또는 노드의 이름이어서는 안됩니다.

           ·   이름은 domain, server 또는 GlassFish Server에서 예약된 다른
               모든 키워드여서는 안됩니다.

예제
       예 1, 독립형 GlassFish Server 인스턴스 생성
           이 예제는 로컬 호스트에서 도메인 domain1에 독립형 GlassFish Server
           인스턴스 pmdsainst를 생성합니다.

               asadmin> create-instance --node localhost-domain1 pmdsainst
               Port Assignments for server instance pmdsainst:
               JMX_SYSTEM_CONNECTOR_PORT=28688
               JMS_PROVIDER_PORT=27678
               ASADMIN_LISTENER_PORT=24850
               HTTP_LISTENER_PORT=28082
               IIOP_LISTENER_PORT=23702
               IIOP_SSL_LISTENER_PORT=23822
               HTTP_SSL_LISTENER_PORT=28183
               IIOP_SSL_MUTUALAUTH_PORT=23922

               Command create-instance executed successfully.

       예 2, 사용자 정의 포트 지정으로 독립형 GlassFish Server 인스턴스 생성
           이 예제는 로컬 호스트에서 도메인 domain1에 독립형 GlassFish Server
           인스턴스 pmdcpinst를 생성합니다. 사용자 정의 포트 번호는 다음
           포트에 지정됩니다.

           ·   HTTP 리스너 포트

           ·   HTTPS 리스너 포트

           ·   IIOP 접속 포트

           ·   보안 IIOP 접속 포트

           ·   상호 인증이 있는 보안 IIOP 접속 포트

           ·   JMX 커넥터 포트

               asadmin> create-instance --node localhost-domain1
               --systemproperties HTTP_LISTENER_PORT=58294:
               HTTP_SSL_LISTENER_PORT=58297:
               IIOP_LISTENER_PORT=58300:
               IIOP_SSL_LISTENER_PORT=58303:
               IIOP_SSL_MUTUALAUTH_PORT=58306:
               JMX_SYSTEM_CONNECTOR_PORT=58309 pmdcpinst
               Port Assignments for server instance pmdcpinst:
               JMS_PROVIDER_PORT=27679
               ASADMIN_LISTENER_PORT=24851

               Command create-instance executed successfully.

       예 3, 공유 GlassFish Server 인스턴스 생성
           이 예제는 로컬 호스트에서 도메인 domain1에 공유 GlassFish Server
           인스턴스 pmdsharedinst1을 생성합니다. 이 인스턴스의 공유 구성은
            pmdsharedconfig입니다.

               asadmin create-instance --node localhost-domain1 --config pmdsharedconfig
               pmdsharedinst1
               Port Assignments for server instance pmdsharedinst1:
               JMX_SYSTEM_CONNECTOR_PORT=28687
               JMS_PROVIDER_PORT=27677
               ASADMIN_LISTENER_PORT=24849
               HTTP_LISTENER_PORT=28081
               IIOP_LISTENER_PORT=23701
               IIOP_SSL_LISTENER_PORT=23821
               HTTP_SSL_LISTENER_PORT=28182
               IIOP_SSL_MUTUALAUTH_PORT=23921

               Command create-instance executed successfully.

       예 4, 클러스터된 GlassFish Server 인스턴스 생성
           이 예제는 로컬 호스트에서 도메인 domain1에 클러스터된 GlassFish
           Server 인스턴스 pmdinst1을 생성합니다. 인스턴스는 클러스터
           pmdclust1의 멤버입니다.

               asadmin> create-instance --node localhost-domain1 --cluster pmdclust pmdinst1
               Port Assignments for server instance pmdinst1:
               JMX_SYSTEM_CONNECTOR_PORT=28686
               JMS_PROVIDER_PORT=27676
               HTTP_LISTENER_PORT=28080
               ASADMIN_LISTENER_PORT=24848
               IIOP_SSL_LISTENER_PORT=23820
               IIOP_LISTENER_PORT=23700
               HTTP_SSL_LISTENER_PORT=28181
               IIOP_SSL_MUTUALAUTH_PORT=23920

               Command create-instance executed successfully.

종료 상태
       0
           명령이 성공적으로 실행됨

       1
           명령 실행 중 오류 발생

참조
       create-local-instance(1), create-node-config(1), create-node-dcom(1),
       create-node-ssh(1), create-system-properties(1), delete-instance(1),
       delete-system-property(1), list-instances(1), setup-ssh(1),
       start-instance(1), stop-instance(1)

       asadmin(1M)

                                2011년 12월 8일             CREATE-INSTANCE(1)
