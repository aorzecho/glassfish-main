CREATE-INSTANCE(1)                                          CREATE-INSTANCE(1)

NOM
       create-instance - crée une instance GlassFish Server

SYNOPSIS
           create-instance [--help] --node node-name
           [--config config-name | --cluster cluster-name]
           [--lbenabled={true|false}]
           [--portbase=port-number] [--checkports={true|false}]
           [--systemproperties (name=value)[:name=value]* ]
           instance-name

DESCRIPTION
       La sous-commande create-instance crée une instance GlassFish Server.
       Cette sous-commande requiert le protocole distant DCOM
       (Distributed Component Object Model) ou le protocole SSH (Secure Shell)
       pour être configurée sur l'hôte où le serveur d'administration de
       domaine (DAS) est exécuté et sur l'hôte représenté par le noeud sur
       lequel l'instance doit résider.

           Note
           ┌────────────────────────────────────────┐
           │Remarque                                │
           │                                        │
           │           DCOM ou SSH n'est pas        │
           │           nécessaire si l'instance     │
           │           doit résider sur un noeud de │
           │           type CONFIG qui représente   │
           │           l'hôte local. Aucun noeud de │
           │           type CONFIG n'est activé     │
           │           pour la communication        │
           │           distante via DCOM ou SSH.    │
           └────────────────────────────────────────┘

       Vous pouvez exécuter cette commande à partir de n'importe quel hôte
       pouvant contacter le serveur DAS.

       Une instance GlassFish Server est une machine virtuelle unique pour la
       plate-forme Java (Java Virtual Machine ou JVM) sur un noeud unique, sur
       laquelle GlassFish Server est en cours d'exécution. Un noeud définit
       l'hôte sur lequel l'instance GlassFish Server réside. La JVM doit être
       compatible avec la plate-forme Java Enterprise Edition (Java EE).

       L'instance GlassFish Server requiert une référence aux éléments
       suivants :

       ·   Noeud définissant l'hôte sur lequel l'instance réside. Le noeud
           doit être indiqué dans la commande de création de l'instance.

       ·   Configuration nommée qui définit la configuration de l'instance. La
           configuration peut être spécifiée dans la commande de création de
           l'instance, mais elle n'est pas obligatoire. Si aucune
           configuration n'est spécifiée pour une instance qui ne rejoint pas
           un cluster, la sous-commande crée une configuration pour
           l'instance. Une instance qui rejoint un cluster reçoit sa
           configuration de son cluster parent.

       Chaque instance GlassFish Server correspond à l'un des types d'instance
       suivants :

       Instance autonome
           Une instance autonome ne partage sa configuration avec aucune autre
           instance et aucun cluster. Une instance autonome est créée si l'une
           des conditions suivantes est remplie :

           ·   Aucune configuration ou aucun cluster n'est spécifié dans la
               commande de création de l'instance.

           ·   Une configuration qui n'est référencée par aucune autre
               instance ou aucun cluster est spécifiée dans la commande de
               création de l'instance.

           Lorsqu'aucune configuration ou aucun cluster n'est spécifié, une
           copie de la configuration default-config est créée pour l'instance.
           Le nom de cette configuration est instance-name-config, où
           instance-name représente le nom d'une instance de serveur non
           incluse dans un cluster.

       Instance partagée
           Une instance partagée partage sa configuration avec d'autres
           instances ou des clusters. Une instance partagée est créée si une
           configuration référencée par d'autres instances ou par des clusters
           est spécifiée dans la commande de création de l'instance.

       Instance incluse dans un cluster
           Une instance incluse dans un cluster hérite sa configuration du
           cluster auquel elle appartient et partage sa configuration avec les
           autres instances du cluster. Une instance incluse dans un cluster
           est créée si un cluster est spécifié dans la commande de création
           de l'instance.

           Toute instance qui n'appartient pas à un cluster est considérée
           comme une instance de serveur non incluse dans un cluster. Par
           conséquent, les instances autonomes et les instances partagées sont
           des instances de serveur non incluses dans un cluster.

       Par défaut, cette sous-commande tente de résoudre les conflits de port
       éventuels pour l'instance en cours de création. La sous-commande
       affecte également les ports qui ne sont actuellement pas utilisés et
       pas encore affectés à d'autres instances sur le même noeud. La
       sous-commande affecte ces ports sur la base d'un algorithme interne à
       la sous-commande. Utilisez l'option --systemproperties pour résoudre
       les conflits de port pour d'autres instances sur le même noeud. Les
       propriétés système d'une instance peuvent être manipulées à l'aide des
       sous-commandes create-system-properties(1) et
       delete-system-property(1).

       Cette sous-commande est prise en charge en mode distant uniquement.

OPTIONS
       --help, -?
           Affiche le texte d'aide de la sous-commande.

       --node
           Nom du noeud qui définit l'hôte sur lequel l'instance va être
           créée. Le noeud doit déjà exister. Si l'instance doit être créée
           sur l'hôte hébergeant le serveur d'administration de domaine (DAS)
           en cours d'exécution, utilisez le noeud prédéfini localhost-
           domain.

       --config
           Spécifie la configuration nommée référencée par l'instance. La
           configuration doit exister et ne doit pas être nommée
           default-config ni
            server-config. La spécification de l'option --config crée une
           instance partagée.

           L'option --config et l'option --cluster s'excluent mutuellement. Si
           les deux options sont omises, une instance autonome est créée.

       --cluster
           Spécifie le cluster duquel l'instance hérite sa configuration. La
           spécification de l'option --cluster crée une instance incluse dans
           un cluster.

           L'option --config et l'option --cluster s'excluent mutuellement. Si
           les deux options sont omises, une instance autonome est créée.

       --lbenabled
           Spécifie si l'instance est activée pour l'équilibrage de charge.
           Les valeurs possibles sont les suivantes :

           true
               L'instance est activée pour l'équilibrage de charge (valeur par
               défaut).

               Lorsqu'une instance est activée pour l'équilibrage de charge,
               un équilibreur de charge envoie des demandes à l'instance.

           false
               L'instance est désactivée pour l'équilibrage de charge.

               Lorsqu'une instance est désactivée pour l'équilibrage de
               charge, aucun équilibreur de charge n'envoie des demandes à
               l'instance.

       --portbase
           Détermine le numéro à partir duquel l'affectation de port doit
           démarrer. Une instance utilise un certain nombre de ports affectés
           de façon statique. La valeur portbase détermine où l'attribution
           doit démarrer. Les valeurs des ports sont calculées comme suit :

           ·   Port d'administration : portbase + 48

           ·   Port du processus d'écoute HTTP : portbase + 80

           ·   Port du processus d'écoute HTTPS : portbase + 81

           ·   Port JMS : portbase + 76

           ·   Port du processus d'écoute IIOP : portbase + 37

           ·   Port du processus d'écoute IIOP sécurisé : portbase + 38

           ·   IIOP sécurisé avec port d'authentification mutuelle :
               portbase + 39

           ·   Port JMX : portbase + 86

           ·   Port de débogage JPA : portbase + 9

           ·   Port de service Felix shell pour la gestion de module OSGi :
               portbase + 66

           Quand l'option --portbase est spécifiée, la sortie de cette
           sous-commande présente une liste complète des ports utilisés.

       --checkports
           Spécifie si la disponibilité des ports d'administration, HTTP, JMS,
           JMX et IIOP doit être vérifiée. La valeur par défaut est true.

       --systemproperties
           Définit les propriétés système pour l'instance. Ces propriétés
           remplacent les définitions de propriété pour les paramètres de port
           dans la configuration de l'instance. Les paramètres de port
           prédéfinis doivent être remplacés si, par exemple, deux instances
           clusterisées résident sur le même hôte. Dans cette situation, les
           paramètres de port pour une seule instance doivent être remplacés,
           car les deux instances partagent la même configuration.

           Propriétés disponibles :

           ASADMIN_LISTENER_PORT
               Cette propriété indique les numéros des ports HTTP ou HTTPS par
               l'intermédiaire desquels le serveur DAS se connecte à
               l'instance à gérer. Les valeurs valides sont comprises entre 1
               et 65535. Sous les systèmes UNIX, la création de sockets qui
               écoutent sur les ports 1 à 1024 nécessite des privilèges de
               superutilisateur.

           HTTP_LISTENER_PORT
               Cette propriété spécifie le numéro du port utilisé pour
               l'écoute des demandes HTTP. Les valeurs valides sont comprises
               entre 1 et 65535. Sous les systèmes UNIX, la création de
               sockets qui écoutent sur les ports 1 à 1024 nécessite des
               privilèges de superutilisateur.

           HTTP_SSL_LISTENER_PORT
               Cette propriété spécifie le numéro du port utilisé pour
               l'écoute des demandes HTTPS. Les valeurs valides sont comprises
               entre 1 et 65535. Sous les systèmes UNIX, la création de
               sockets qui écoutent sur les ports 1 à 1024 nécessite des
               privilèges de superutilisateur.

           IIOP_LISTENER_PORT
               Cette propriété spécifie le numéro du port utilisé pour les
               connexions IIOP. Les valeurs valides sont comprises entre 1
               et 65535. Sous les systèmes UNIX, la création de sockets qui
               écoutent sur les ports 1 à 1024 nécessite des privilèges de
               superutilisateur.

           IIOP_SSL_LISTENER_PORT
               Cette propriété spécifie le numéro du port utilisé pour les
               connexions IIOP sécurisées. Les valeurs valides sont comprises
               entre 1 et 65535. Sous les systèmes UNIX, la création de
               sockets qui écoutent sur les ports 1 à 1024 nécessite des
               privilèges de superutilisateur.

           IIOP_SSL_MUTUALAUTH_PORT
               Cette propriété spécifie le numéro du port utilisé pour les
               connexions IIOP sécurisées avec authentification client. Les
               valeurs valides sont comprises entre 1 et 65535. Sous les
               systèmes UNIX, la création de sockets qui écoutent sur les
               ports 1 à 1024 nécessite des privilèges de superutilisateur.

           JAVA_DEBUGGER_PORT
               Cette propriété indique le numéro du port utilisé pour les
               connexions au débogueur JPDA (Architecture de débogueur de
               plate-forme Java)
               (http://java.sun.com/javase/technologies/core/toolsapis/jpda/).
               Les valeurs valides sont comprises entre 1 et 65535. Sous les
               systèmes UNIX, la création de sockets qui écoutent sur les
               ports 1 à 1024 nécessite des privilèges de superutilisateur.

           JMS_PROVIDER_PORT
               Cette propriété spécifie le numéro de port pour le fournisseur
               Java Message Service. Les valeurs valides sont comprises
               entre 1 et 65535. Sous les systèmes UNIX, la création de
               sockets qui écoutent sur les ports 1 à 1024 nécessite des
               privilèges de superutilisateur.

           JMX_SYSTEM_CONNECTOR_PORT
               Cette propriété spécifie le numéro du port d'écoute du
               connecteur JMX. Les valeurs valides sont comprises entre 1
               et 65535. Sous les systèmes UNIX, la création de sockets qui
               écoutent sur les ports 1 à 1024 nécessite des privilèges de
               superutilisateur.

           OSGI_SHELL_TELNET_PORT
               Cette propriété indique le numéro du port utilisé pour les
               connexions au shell distant Apache Felix
               (http://felix.apache.org/site/apache-felix-remote-shell.html).
               Ce shell utilise le service shell Felix pour interagir avec le
               sous-système de gestion du module OSGi. Les valeurs valides
               sont comprises entre 1 et 65535. Sous UNIX, la création des
               sockets écoutant sur les ports 1 à 1024 nécessite des
               privilèges de superutilisateur.

OPÉRANDES
       instance-name
           Nom de l'instance en cours de création.

           Le nom doit respecter les exigences suivantes :

           ·   Il ne peut contenir que des caractères ASCII.

           ·   Il doit commencer par une lettre, un chiffre ou un trait de
               soulignement.

           ·   Il ne peut contenir que les caractères suivants :

               ·   Lettres minuscules

               ·   Lettres majuscules

               ·   Chiffres

               ·   Trait d'union

               ·   Point

               ·   Trait de soulignement

           ·   Le nom du noeud doit être unique dans le domaine ; il ne doit
               pas appartenir à une autre instance de GlassFish Server, à une
               configuration nommée, à un cluster ou à un noeud.

           ·   Le nom ne doit pas être domain, server ou tout autre mot-clé
               réservé par GlassFish Server.

EXEMPLES
       Exemple 1, Création d'une instance GlassFish Server autonome
           Dans cet exemple, l'instance autonome GlassFish Server pmdsainst
           est créée dans le domaine domain1 sur l'hôte local.

               asadmin> create-instance --node localhost-domain1 pmdsainst
               Port Assignments for server instance pmdsainst:
               JMX_SYSTEM_CONNECTOR_PORT=28688
               JMS_PROVIDER_PORT=27678
               ASADMIN_LISTENER_PORT=24850
               HTTP_LISTENER_PORT=28082
               IIOP_LISTENER_PORT=23702
               IIOP_SSL_LISTENER_PORT=23822
               HTTP_SSL_LISTENER_PORT=28183
               IIOP_SSL_MUTUALAUTH_PORT=23922

               Command create-instance executed successfully.

       Exemple 2, Création d'une instance GlassFish Server autonome avec des
       affectations de port personnalisées
           Dans cet exemple, l'instance GlassFish Server autonome pmdcpinst
           est créée dans le domaine domain1 sur l'hôte local. Les numéros de
           port personnalisés sont affectés aux ports suivants :

           ·   Port de processus d'écoute HTTP

           ·   Port de processus d'écoute HTTPS

           ·   Port de connexions IIOP

           ·   Port de connexions IIOP sécurisées

           ·   Port de connexions IIOP sécurisées avec authentification
               mutuelle

           ·   Port de connecteur JMX

               asadmin> create-instance --node localhost-domain1
               --systemproperties HTTP_LISTENER_PORT=58294:
               HTTP_SSL_LISTENER_PORT=58297:
               IIOP_LISTENER_PORT=58300:
               IIOP_SSL_LISTENER_PORT=58303:
               IIOP_SSL_MUTUALAUTH_PORT=58306:
               JMX_SYSTEM_CONNECTOR_PORT=58309 pmdcpinst
               Port Assignments for server instance pmdcpinst:
               JMS_PROVIDER_PORT=27679
               ASADMIN_LISTENER_PORT=24851

               Command create-instance executed successfully.

       Exemple 3, Création d'une instance GlassFish Server partagée
           Dans cet exemple, l'instance GlassFish Server autonome
           pmdsharedinst1 est créée dans le domaine domain1 sur l'hôte local.
           La configuration partagée de cette instance est pmdsharedconfig.

               asadmin create-instance --node localhost-domain1 --config pmdsharedconfig
               pmdsharedinst1
               Port Assignments for server instance pmdsharedinst1:
               JMX_SYSTEM_CONNECTOR_PORT=28687
               JMS_PROVIDER_PORT=27677
               ASADMIN_LISTENER_PORT=24849
               HTTP_LISTENER_PORT=28081
               IIOP_LISTENER_PORT=23701
               IIOP_SSL_LISTENER_PORT=23821
               HTTP_SSL_LISTENER_PORT=28182
               IIOP_SSL_MUTUALAUTH_PORT=23921

               Command create-instance executed successfully.

       Exemple 4, Création d'une instance GlassFish Server incluse dans un
       cluster
           Dans cet exemple, l'instance GlassFish Server incluse dans un
           cluster pmdinst1 est créée dans le domaine domain1 sur l'hôte
           local. L'instance est membre du cluster pmdclust1.

               asadmin> create-instance --node localhost-domain1 --cluster pmdclust pmdinst1
               Port Assignments for server instance pmdinst1:
               JMX_SYSTEM_CONNECTOR_PORT=28686
               JMS_PROVIDER_PORT=27676
               HTTP_LISTENER_PORT=28080
               ASADMIN_LISTENER_PORT=24848
               IIOP_SSL_LISTENER_PORT=23820
               IIOP_LISTENER_PORT=23700
               HTTP_SSL_LISTENER_PORT=28181
               IIOP_SSL_MUTUALAUTH_PORT=23920

               Command create-instance executed successfully.

STATUT DE SORTIE
       0
           commande correctement exécutée

       1
           erreur lors de l'exécution de la commande

VOIR AUSSI
       create-local-instance(1), create-node-config(1), create-node-dcom(1),
       create-node-ssh(1), create-system-properties(1), delete-instance(1),
       delete-system-property(1), list-instances(1), setup-ssh(1),
       start-instance(1), stop-instance(1)

       asadmin(1M)

                                8 décembre 2011             CREATE-INSTANCE(1)
