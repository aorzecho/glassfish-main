#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#####restart-instance
restart.instance.notInstance=-_restart-instance \u4ec5\u9002\u7528\u4e8e\u5b9e\u4f8b\u3002\u8fd9\u662f\u4e00\u4e2a {0}
restart.instance.notDas=restart-instance \u4ec5\u9002\u7528\u4e8e DAS\u3002\u8fd9\u662f\u4e00\u4e2a {0}
restart.instance.success={0} \u5df2\u91cd\u65b0\u542f\u52a8\u3002
restart.instance.racError=\u5c1d\u8bd5\u91cd\u65b0\u542f\u52a8\u540d\u4e3a {0} \u7684\u5b9e\u4f8b\u65f6\u51fa\u9519: {1}
restart.instance.timeout=\u7b49\u5f85 {0} \u91cd\u65b0\u542f\u52a8\u65f6\u8d85\u65f6
restart.instance.nopid=\u65e0\u6cd5\u83b7\u53d6 {0} \u7684\u8fdb\u7a0b ID
## StopInstanceCommand
stop.instance.command=\u505c\u6b62\u6b63\u5728\u8fd0\u884c\u7684\u5b9e\u4f8b
stop.instance.init=\u5df2\u542f\u52a8\u5173\u95ed\u5b9e\u4f8b {0} \u7684\u64cd\u4f5c
stop.instance.notDas=stop-instance \u4ec5\u9002\u7528\u4e8e DAS\u3002\u8fd9\u662f\u4e00\u4e2a {0}
stop.instance.notInstance=_stop-instance \u4ec5\u9002\u7528\u4e8e\u5b9e\u4f8b\u3002\u8fd9\u662f\u4e00\u4e2a {0}
stop.instance.noInstanceName=\u5fc5\u987b\u6307\u5b9a\u5b9e\u4f8b\u540d\u79f0\u3002
stop.instance.noSuchInstance=\u8be5\u57df\u4e2d\u4e0d\u5b58\u5728\u540d\u4e3a {0} \u7684\u5b9e\u4f8b\u3002
stop.instance.noPort=\u627e\u4e0d\u5230\u540d\u4e3a {0} \u7684\u5b9e\u4f8b\u7684\u7ba1\u7406\u7aef\u53e3\u3002
stop.instance.noHost=\u627e\u4e0d\u5230\u540d\u4e3a {0} \u7684\u5b9e\u4f8b\u7684\u4e3b\u673a\u540d\u3002
stop.instance.racError=\u5c1d\u8bd5\u505c\u6b62\u540d\u4e3a {0} \u7684\u5b9e\u4f8b\u65f6\u51fa\u9519: {1}
stop.instance.success=\u5b9e\u4f8b {0} \u5df2\u505c\u6b62\u3002
stop.instance.timeout=\u7b49\u5f85 {0} \u505c\u6b62\u65f6\u8d85\u65f6\u3002
stop.instance.timeout.completely=\u7b49\u5f85 {0} \u5b8c\u5168\u505c\u6b62\u65f6\u8d85\u65f6\u3002
## StartInstanceCommand
start.instance.success=\u5b9e\u4f8b {0} \u5df2\u5728\u4e3b\u673a {1} \u4e0a\u542f\u52a8
start.instance.already.running=\u5b9e\u4f8b {0} \u5df2\u5728\u8fd0\u884c\u3002
start.instance.command=\u542f\u52a8\u5b9e\u4f8b
start.instance.init=\u5df2\u542f\u52a8\u5b9e\u4f8b\u542f\u52a8\u64cd\u4f5c
start.instance.notAnInstanceOrDas=start-instance \u4ec5\u9002\u7528\u4e8e\u5b9e\u4f8b\u6216 DAS\uff0c\u800c\u8fd9\u662f\u4e00\u4e2a {0}
start.instance.noInstanceName=\u5728 DAS \u4e0a\u8c03\u7528 start-instance \u65f6\u5fc5\u987b\u6307\u5b9a\u4e00\u4e2a\u5b9e\u4f8b\u540d\u79f0\u3002
start.instance.noSuchInstance=\u8be5\u57df\u4e2d\u4e0d\u5b58\u5728\u540d\u4e3a {0} \u7684\u5b9e\u4f8b\u3002
start.instance.noSuchNodeRef=\u8be5\u57df\u4e2d\u4e0d\u5b58\u5728\u540d\u4e3a {0} \u7684\u8282\u70b9\u3002
# 0=instance, 1=node, 2=host
start.instance.failed=\u65e0\u6cd5\u5728\u8282\u70b9 {1} ({2}) \u4e0a\u542f\u52a8\u5b9e\u4f8b {0}\u3002
start.instance.timeout=\u7b49\u5f85 {0} \u542f\u52a8\u65f6\u8d85\u65f6\u3002
stop.local.instance.kill=\u65e0\u6cd5\u4f7f\u7528 {2} \u5728\u8282\u70b9 {1} \u4e0a\u505c\u6b62\u5b9e\u4f8b {0}
## ListInstancesCommand
list.instances.command=\u663e\u793a\u670d\u52a1\u5668\u5b9e\u4f8b\u7684\u72b6\u6001
list.instances.onlyRunsOnDas=\u8fd9\u662f\u4e00\u4e2a GlassFish \u670d\u52a1\u5668\u5b9e\u4f8b\uff0c\u800c list-instances \u53ea\u80fd\u5728 DAS \u4e0a\u8fd0\u884c\u3002
## SynchronizeFiles
sync.unknown.instance=\u672a\u77e5\u7684\u670d\u52a1\u5668\u5b9e\u4f8b: {0}
sync.exception.reading=SynchronizeFiles: \u8bfb\u53d6\u8bf7\u6c42\u65f6\u53d1\u751f\u5f02\u5e38
sync.exception.processing=SynchronizeFiles: \u5904\u7406\u8bf7\u6c42\u65f6\u53d1\u751f\u5f02\u5e38
sync.bad_output_file=\u65e0\u6cd5\u5199\u5165\u8f93\u51fa\u6587\u4ef6 {0}\u3002
## ExportSyncBundle
sync.bad_temp_file=\u65e0\u6cd5\u5728\u7cfb\u7edf\u4e34\u65f6\u6587\u4ef6\u533a\u57df\u4e2d\u521b\u5efa\u4e34\u65f6\u6587\u4ef6: {0}
sync.unknown.instanceOrCluster=\u672a\u77e5\u7684\u72ec\u7acb\u670d\u52a1\u5668\u6216\u7fa4\u96c6: {0}
sync.empty_cluster=\u65e0\u6cd5\u751f\u6210\u540c\u6b65\u5305\u3002\u7fa4\u96c6 {0} \u4e0d\u5305\u542b\u5b9e\u4f8b\u3002
export.sync.bundle.success=\u540c\u6b65\u5305: {0}
export.sync.bundle.fail=\u65e0\u6cd5\u5bfc\u51fa\u540c\u6b65\u5305: {0}
export.sync.bundle.retrieveFailed=\u65e0\u6cd5\u68c0\u7d22\u540c\u6b65\u5305: {0}
export.sync.bundle.exportFailed=\u65e0\u6cd5\u5c06\u540c\u6b65\u7684\u5185\u5bb9\u5bfc\u51fa\u5230\u6587\u4ef6 {0}: {1}\u3002
export.sync.bundle.closeStreamFailed=\u65e0\u6cd5\u5173\u95ed\u6587\u4ef6 {0} \u4e0a\u7684\u6d41: {1}
## ServerSynchronizer
serversync.unknown.dir=\u672a\u77e5\u76ee\u5f55: {0}
serversync.exception.processing=ServerSynchronizer: \u5904\u7406\u8bf7\u6c42\u65f6\u53d1\u751f\u5f02\u5e38
## GlassFishClusterExecutor
glassfish.clusterexecutor.notargets=\u672a\u627e\u5230\u76ee\u6807 {0} \u7684\u4efb\u4f55\u9002\u5f53\u5b9e\u4f8b\uff1b\u53ea\u5728 DAS \u4e0a\u6267\u884c\u4e86\u8be5\u547d\u4ee4
glassfish.clusterexecutor.notargetspecified=\u547d\u4ee4\u884c\u4e2d\u672a\u6307\u5b9a\u76ee\u6807\uff1b\u6b63\u5728\u4e2d\u6b62 CLI
glassfish.clusterexecutor.supplementalcmdfailed=\u8865\u5145\u547d\u4ee4 {0} \u5931\u8d25
glassfish.clusterexecutor.dynrecfgdisabled=\u8b66\u544a: \u8be5\u547d\u4ee4\u672a\u590d\u5236\u5230\u6240\u6709\u7fa4\u96c6\u5b9e\u4f8b\uff0c\u56e0\u4e3a\u7fa4\u96c6 {0} \u7684 dynamic-reconfiguration-enabled \u6807\u5fd7\u5df2\u8bbe\u7f6e\u4e3a false

noNode=\u8282\u70b9\u4e3a\u7a7a
noUpdate.nodeInUse=\u65e0\u6cd5\u66f4\u65b0\u8282\u70b9 {0}\u3002\u5b83\u5df2\u7531\u67d0\u4e2a\u670d\u52a1\u5668\u5b9e\u4f8b\u4f7f\u7528\uff0c\u56e0\u6b64\u65e0\u6cd5\u66f4\u6539\u5c5e\u6027 {1}\u3002
notConfigNode=\u8282\u70b9 {0} \u4e0d\u662f\u914d\u7f6e\u8282\u70b9\u3002
notSshNode=\u8282\u70b9 {0} \u4e0d\u662f SSH \u8282\u70b9\u3002
missingNodeRef=\u5b9e\u4f8b {0} \u6ca1\u6709\u5173\u8054\u7684\u8282\u70b9\u3002
missingNode=\u8282\u70b9 {0} \u4e0d\u5b58\u5728\u3002
attribute.mismatch=\u8282\u70b9 "{0}" \u7684\u5c5e\u6027\u4e0d\u5339\u914d: \u547d\u4ee4 ({2}) \u4e2d "{1}" \u5c5e\u6027\u7684\u503c\u4e0e DAS \u914d\u7f6e ({3}) \u4e2d\u7684\u503c\u4e0d\u5339\u914d
attribute.null=\u8282\u70b9 {0} \u4e0a\u7684 {1} \u5c5e\u6027\u4e3a\u7a7a: \u547d\u4ee4\u503c\u4e3a {2}\uff0c\u8282\u70b9\u503c\u4e3a {3}
top.instance.notRunning=\u5b9e\u4f8b {0} \u672a\u8fd0\u884c\u3002
invalid.installdir=Installdir \u503c {0} \u4e0d\u662f\u6709\u6548\u7684 glassfish \u5b89\u88c5\u3002

## CreateInstanceCommand
generic.config=\u6b64\u7fa4\u96c6\u5c06\u4f7f\u7528\u7684\u73b0\u6709\u914d\u7f6e\u540d\u79f0

create.instance=\u521b\u5efa\u65b0\u7684 GlassFish \u670d\u52a1\u5668\u5b9e\u4f8b
create.instance.cluster=\u6b64\u65b0\u5b9e\u4f8b\u5e94\u9644\u52a0\u5230\u7684\u7fa4\u96c6\u540d\u79f0
create.instance.success=\u5df2\u5728\u4e3b\u673a {1} \u4e0a\u521b\u5efa\u5b9e\u4f8b {0}
create.instance.missing.info=\u8282\u70b9 {0} \u4e0a\u672a\u8bbe\u7f6e {1} \u5c5e\u6027\uff0c\u56e0\u6b64\u65e0\u6cd5\u5bf9\u6b64\u8282\u70b9\u4f7f\u7528 {2}\u3002\u5fc5\u987b\u4f7f\u7528 {3} \u547d\u4ee4\u6dfb\u52a0 {1} \u5c5e\u6027\uff0c\u6216\u8005\u901a\u8fc7\u5728\u5b9e\u4f8b\u4e3b\u673a\u4e0a\u76f4\u63a5\u8fd0\u884c {4} \u6765\u521b\u5efa\u5b9e\u4f8b\u3002
create.instance.config=\u5df2\u5728 DAS \u4e0a\u6ce8\u518c\u5b9e\u4f8b {0}\u3002\u5fc5\u987b\u5728\u5b9e\u4f8b\u4e3b\u673a\u4e0a\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u624d\u80fd\u5b8c\u6210\u5b9e\u4f8b\u521b\u5efa: \n {1}
create.instance.usagetext=create-instance --node <node> \n\t[--config <config> | --cluster <cluster>] \n\t[--lbenabled[=<lbenabled>]] \n\t[--checkports[=<checkports(default:true)>]] [--portbase <portbase>] \n\t[--systemproperties <systemproperties>] \n\t[-?|--help[=<help(default:false)>]] instance_name

onlyRunsOnDas=\u8fd9\u662f\u4e00\u4e2a GlassFish \u670d\u52a1\u5668\u5b9e\u4f8b\uff0c\u800c {0} \u53ea\u80fd\u5728 DAS \u4e0a\u8fd0\u884c\u3002
creatingInstance=\u6b63\u5728 {1} \u4e0a\u521b\u5efa\u5b9e\u4f8b {0}
mustRunLocal=\u65e0\u6cd5\u8bbf\u95ee\u8282\u70b9 {1} \u7684\u4e3b\u673a {0}\u3002\u5fc5\u987b\u5728\u4e3b\u673a {0} \u4e0a\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u624d\u80fd\u5b8c\u6210\u5b9e\u4f8b\u521b\u5efa: {2}

noSuchNode=\u8be5\u57df\u4e2d\u4e0d\u5b58\u5728\u540d\u4e3a {0} \u7684\u8282\u70b9\u3002
notConfigNodeType=\u8282\u70b9 {0} \u4e0d\u662f CONFIG \u7c7b\u578b
notSshNodeType=\u8282\u70b9 {0} \u4e0d\u662f SSH \u7c7b\u578b
lbenabledNotForStandaloneInstance=\u72ec\u7acb\u5b9e\u4f8b\u4e0d\u652f\u6301 lbenabled \u9009\u9879\u3002

notAllowed=\u53ea\u80fd\u5728 DAS \u4e0a\u8fd0\u884c\u8be5\u547d\u4ee4\u3002
## StartClusterCommand
start.cluster.command=\u542f\u52a8\u7fa4\u96c6
start.cluster=\u6b63\u5728\u542f\u52a8\u7fa4\u96c6 {0}
stop.cluster.command=\u505c\u6b62\u7fa4\u96c6
stop.cluster=\u6b63\u5728\u505c\u6b62\u7fa4\u96c6 {0}
cluster.command.notDas=\u8fd9\u662f\u4e00\u4e2a GlassFish \u670d\u52a1\u5668\u5b9e\u4f8b\uff0c\u800c {0} \u53ea\u80fd\u5728 DAS \u4e0a\u8fd0\u884c\u3002
cluster.command.instancesSucceeded=\u5bf9 {1} \u6267\u884c\u547d\u4ee4 {0} \u6210\u529f
cluster.command.instancesFailed=\u5bf9 {1} \u6267\u884c\u547d\u4ee4 {0} \u5931\u8d25
cluster.command.instancesTimedOut=\u7b49\u5f85\u9488\u5bf9 {1} \u5b8c\u6210\u547d\u4ee4 {0} \u65f6\u8d85\u65f6
cluster.command.unknownCluster=\u8be5\u57df\u4e2d\u4e0d\u5b58\u5728\u540d\u4e3a {0} \u7684\u7fa4\u96c6\u3002
cluster.command.noInstances=\u7fa4\u96c6 {0} \u4e0d\u5305\u542b\u5b9e\u4f8b\u3002
cluster.command.interrupted=\u6267\u884c\u547d\u4ee4 {3} \u83b7\u5f97\u4e86 {1} \u4e2a\uff08\u5171 {2} \u4e2a\uff09\u5b9e\u4f8b\u7684\u54cd\u5e94\u540e\uff0c\u5df2\u4e2d\u65ad\u5bf9\u7fa4\u96c6 {0} \u6267\u884c\u7684\u547d\u4ee4\u3002
create.instance.remote.failed=\u5df2\u5728 DAS \u914d\u7f6e\u4e2d\u6210\u529f\u521b\u5efa\u5b9e\u4f8b {0}\uff0c\u4f46\u65e0\u6cd5\u5728\u8282\u70b9 {1} \u4e0a\u521b\u5efa\u5b9e\u4f8b\u6587\u4ef6\u3002\n\n\u5728\u4e0b\u9762\u4f4d\u7f6e\u672c\u5730\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u4ee5\u5b8c\u6210\u4e8b\u52a1: {2}\n\n{3}\n\n\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u65e5\u5fd7\u6d88\u606f\u3002
create.instance.local.boot.failed=\u5df2\u5728 DAS \u914d\u7f6e\u4e2d\u6210\u529f\u521b\u5efa\u5b9e\u4f8b {0}\uff0c\u4f46\u5728\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\u65e0\u6cd5\u68c0\u7d22\u914d\u7f6e\u6587\u4ef6\u3002
create.instance.remote.boot.failed=\u5df2\u5728 DAS \u914d\u7f6e\u4e2d\u6210\u529f\u521b\u5efa\u5b9e\u4f8b {0}\uff0c\u4f46\u5728\u5f15\u5bfc\u8fc7\u7a0b\u4e2d\u65e0\u6cd5\u5728\u8282\u70b9 {3} \u4e0a\u5b89\u88c5\u5b9e\u4f8b\u7684\u914d\u7f6e\u6587\u4ef6\u3002\n\nSSH \u914d\u7f6e\u4fe1\u606f\n{1}\n\u5176\u4ed6\u5931\u8d25\u4fe1\u606f: {2}\u3002

deleting.instance=\u6b63\u5728\u5220\u9664 {1} \u4e2d\u7684\u5b9e\u4f8b {0}
instance.shutdown=\u5220\u9664\u5b9e\u4f8b {0} \u4e4b\u524d\u5fc5\u987b\u5c06\u5176\u505c\u6b62\u3002
delete.instance.success=\u5df2\u4ece\u4e3b\u673a {1} \u4e2d\u5220\u9664\u5b9e\u4f8b {0}
delete.instance.failed=\u65e0\u6cd5\u4ece {1} \u4e2d\u5220\u9664\u5b9e\u4f8b {0}
delete.instance.config.failed=\u5df2\u4ece {1} \u4e2d\u6210\u529f\u5220\u9664\u5b9e\u4f8b {0} \u7684\u6587\u4ef6\uff0c\u4f46\u65e0\u6cd5\u4ece DAS \u914d\u7f6e\u4e2d\u5220\u9664\u8be5\u5b9e\u4f8b\u3002
delete.instance.filesystem.failed=\u5df2\u4ece DAS \u914d\u7f6e\u4e2d\u6210\u529f\u5220\u9664\u5b9e\u4f8b {0}\uff0c\u4f46\u65e0\u6cd5\u4ece\u8282\u70b9 {1} ({2}) \u4e2d\u5220\u9664\u5b9e\u4f8b\u6587\u4ef6\u3002

nonzero.status=\u5bf9 {1} \u6267\u884c\u7684\u547d\u4ee4 {0} \u8fd4\u56de\u4e86\u975e\u96f6\u72b6\u6001

restart.instance.command=\u91cd\u65b0\u542f\u52a8\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u670d\u52a1\u5668\u5b9e\u4f8b
list.instances.badTarget=\u76ee\u6807 {0} \u4e0d\u662f\u5b9e\u4f8b\u3001\u7fa4\u96c6\u3001\u57df\u3001\u8282\u70b9\u6216\u914d\u7f6e\u3002
list.instances.targetWithStandaloneOnly=target \u548c standaloneonly \u9009\u9879\u662f\u4e92\u65a5\u7684\u3002\u8bf7\u4ec5\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u3002
list.instances.longAndNoStatus=long \u548c nostatus \u9009\u9879\u662f\u4e92\u65a5\u7684\u3002\u8bf7\u4ec5\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u3002
list.instances.serverTarget=\u5df2\u5c06\u76ee\u6807\u6307\u5b9a\u4e3a DAS\u3002\u8fd9\u662f\u975e\u6cd5\u64cd\u4f5c\u3002DAS \u4e0d\u662f\u5b9e\u4f8b\u670d\u52a1\u5668\u3002

Config.badConfigNames=\u5fc5\u987b\u6307\u5b9a\u6e90\u548c\u76ee\u6807\u914d\u7f6e\u3002
Config.noSuchConfig=\u914d\u7f6e {0} \u4e0d\u5b58\u5728\u3002
Config.copyConfigError=\u590d\u5236\u914d\u7f6e\u65f6\u51fa\u9519\uff0c\u539f\u56e0\u4e3a {0}\u3002
Config.configExists=\u914d\u7f6e {0} \u5df2\u5b58\u5728\u3002
Config.inUseConfig=\u914d\u7f6e {0} \u5df2\u5728\u4f7f\u7528\uff0c\u4e0d\u5f97\u7531\u4efb\u4f55\u670d\u52a1\u5668\u5b9e\u4f8b\u6216\u7fa4\u96c6\u5f15\u7528
Config.defaultConfig=\u65e0\u6cd5\u5220\u9664\u540d\u4e3a default-config \u7684\u9ed8\u8ba4\u914d\u7f6e\u6a21\u677f\u3002
Config.deleteConfigFailed=\u65e0\u6cd5\u5220\u9664\u914d\u7f6e {0}

create.instance.filesystem.failed=\u5df2\u5728 DAS \u914d\u7f6e\u4e2d\u6210\u529f\u521b\u5efa\u5b9e\u4f8b {0}\uff0c\u4f46\u65e0\u6cd5\u5728\u8282\u70b9 {1} ({2}) \u4e0a\u521b\u5efa\u5b9e\u4f8b\u6587\u4ef6\u3002

# Messages for connecting to SSH nodes
# 0=node name, 1=hostname
node.not.ssh=\u8be5\u547d\u4ee4\u8981\u6c42\u4f7f\u7528 SSH \u8fde\u63a5\u5230\u8282\u70b9 {0} ({1}) \u4ee5\u4fbf\u5b8c\u6210\u5176\u64cd\u4f5c\uff0c\u4f46\u8282\u70b9 {0} \u672a\u914d\u7f6e\u4e3a\u4f7f\u7528 SSH\u3002\u53ef\u4ee5\u4f7f\u7528 update-node-ssh \u5c06\u8282\u70b9 {0} \u914d\u7f6e\u4e3a\u4f7f\u7528 SSH\u3002
# 0=node name, 1=hostname, 2=more info
node.ssh.bad.connect=\u8be5\u547d\u4ee4\u8981\u6c42\u4f7f\u7528 SSH \u8fde\u63a5\u5230\u4e3b\u673a {1} \u4ee5\u4fbf\u5b8c\u6210\u5176\u64cd\u4f5c\uff0c\u4f46\u65e0\u6cd5\u5efa\u7acb\u8fde\u63a5:\n\n{2}\n\n\u8bf7\u786e\u8ba4\u5df2\u5728\u7cfb\u7edf\u4e0a\u6b63\u786e\u5730\u914d\u7f6e\u4e86 SSH\uff0c\u5373\u5728\u8282\u70b9 {0} \u4e0a\u8bbe\u7f6e\u4e86\u9002\u5f53\u7684\u5c5e\u6027\u3002\u53ef\u4ee5\u4f7f\u7528 update-node-ssh \u6765\u4fee\u6539\u8fd9\u4e9b\u5c5e\u6027\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 DAS \u65e5\u5fd7\u6587\u4ef6\u3002
# 0=hostname, 1=installdir, 2=more info
node.ssh.tocomplete=\u8981\u5b8c\u6210\u6b64\u64cd\u4f5c\uff0c\u8bf7\u5728\u4e3b\u673a {0} \u4e0a\u7684 GlassFish \u5b89\u88c5\u4f4d\u7f6e {1} \u672c\u5730\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4:\n\n{2}
# A command return a non-zero status
# 0=node, 1=node-host, 2=output from failed command, 3=command
node.command.failed=\u5728\u8282\u70b9 {0} ({1}) \u4e0a\u6267\u884c\u547d\u4ee4 "{3}" \u5931\u8d25: {2}
node.command.failed.short=\u5728\u8282\u70b9 {0} ({1}) \u4e0a\u6267\u884c\u547d\u4ee4\u5931\u8d25: {2}
node.command.failed.local.exception=\u65e0\u6cd5\u6267\u884c\u672c\u5730\u547d\u4ee4: {0}
node.command.failed.local.details=\u65e0\u6cd5\u6267\u884c\u672c\u5730\u547d\u4ee4 "{1}": {0}
# Failed to execute a command via SSH
# 0=node, 1=node-host, 2=command, 3=exception info, 4=SSH settings
node.command.failed.ssh.details=\u65e0\u6cd5\u5728\u8282\u70b9 {0} ({1}) \u4e0a\u8fd0\u884c "{2}": {3}\u3002SSH \u8bbe\u7f6e: {4}

create.node.ssh.continue.force=\u7531\u4e8e\u4f7f\u7528\u4e86 --force\uff0c\u6b63\u5728\u7ee7\u7eed\u521b\u5efa\u8282\u70b9\u3002
create.node.ssh.not.created=\u672a\u521b\u5efa SSH \u8282\u70b9\u3002\u8981\u4f7f\u7528\u8fd9\u4e9b\u53c2\u6570\u5f3a\u5236\u521b\u5efa\u8282\u70b9\uff0c\u8bf7\u4f7f\u7528 --force \u9009\u9879\u91cd\u65b0\u8fd0\u884c\u8be5\u547d\u4ee4\u3002
create.node.ssh.install.failed=\u65e0\u6cd5\u5728 {0} \u4e0a\u5b89\u88c5 GlassFish\u3002\u8bf7\u67e5\u770b DAS server.log\u3002
create.node.ssh.install.success=\u5df2\u5728 {0} \u4e0a\u6210\u529f\u5b89\u88c5 GlassFish\u3002
delete.node.ssh.uninstall.failed=\u5df2\u6210\u529f\u5220\u9664\u8282\u70b9\uff0c\u4f46\u65e0\u6cd5\u5728 {0} \u4e0a\u5378\u8f7d GlassFish\u3002\u8bf7\u624b\u52a8\u8fd0\u884c uninstall-node\u3002
delete.node.ssh.uninstall.success=\u5df2\u5728 {0} \u4e0a\u6210\u529f\u5378\u8f7d GlassFish\u3002
create.node.ssh.no.installdir=\u8282\u70b9\u4e0d\u5305\u542b\u5b89\u88c5\u76ee\u5f55\u3002
create.node.ssh.passfile.error=\u65e0\u6cd5\u521b\u5efa\u5bc6\u7801\u6587\u4ef6\u3002
update.node.ssh.continue.force=\u7531\u4e8e\u4f7f\u7528\u4e86 --force\uff0c\u6b63\u5728\u7ee7\u7eed\u66f4\u65b0\u8282\u70b9\u3002
update.node.ssh.not.updated=\u672a\u66f4\u65b0 SSH \u8282\u70b9\u3002\u8981\u4f7f\u7528\u8fd9\u4e9b\u53c2\u6570\u5f3a\u5236\u66f4\u65b0\u8282\u70b9\uff0c\u8bf7\u4f7f\u7528 --force \u9009\u9879\u91cd\u65b0\u8fd0\u884c\u8be5\u547d\u4ee4\u3002
update.node.config.missing.attribute=\u66f4\u65b0\u8282\u70b9 {0} \u9700\u8981\u4f7f\u7528 {1} \u5c5e\u6027\u3002
update.node.config.defaultnode=\u65e0\u6cd5\u66f4\u65b0\u8282\u70b9 {0}\u3002\u5b83\u662f\u5185\u7f6e\u7684\u672c\u5730\u4e3b\u673a\u8282\u70b9\u3002
node.ssh.invalid.params=\u8b66\u544a: \u67d0\u4e9b\u53c2\u6570\u4f3c\u4e4e\u65e0\u6548\u3002
ssh.bad.connect=\u65e0\u6cd5\u4f7f\u7528 SSH \u8fde\u63a5\u5230\u4e3b\u673a {0}\u3002
ssh.invalid.port=\u7aef\u53e3\u53f7 {0} \u65e0\u6548\u3002
key.path.not.absolute=\u5bc6\u94a5\u6587\u4ef6\u8def\u5f84 {0} \u5fc5\u987b\u662f\u7edd\u5bf9\u8def\u5f84\u3002
key.path.not.found=\u672a\u627e\u5230\u5bc6\u94a5\u6587\u4ef6 {0}\u3002\u5bc6\u94a5\u6587\u4ef6\u8def\u5f84\u5fc5\u987b\u53ef\u4f9b DAS \u8bbf\u95ee\u3002
key.path.not.readable=\u5bc6\u94a5\u6587\u4ef6 {0} \u5bf9 DAS \u7528\u6237 {1} \u4e0d\u53ef\u8bfb\u3002
no.such.password.alias=\u57df\u4e2d\u672a\u627e\u5230\u5bc6\u7801\u522b\u540d {0}\u3002
ping.node.failure=\u65e0\u6cd5\u9a8c\u8bc1\u4e0e\u8282\u70b9 {0} ({1}) \u7684 SSH \u8fde\u63a5
ping.node.success=\u5df2\u6210\u529f\u5efa\u7acb\u4e0e\u8282\u70b9 {0} ({1}) \u7684 SSH \u8fde\u63a5
ping.glassfish.version=\u5728 {0} \u4e0a\u627e\u5230 GlassFish \u7248\u672c:\n{1}
unknown.host=\u672a\u77e5\u7684\u4e3b\u673a {0}
nodehost.required=\u5fc5\u987b\u8bbe\u7f6e\u8282\u70b9\u7684\u4e3b\u673a\u5c5e\u6027\u3002
failed.to.run=\u65e0\u6cd5\u5728 {1} \u4e0a\u8fd0\u884c "{0}"

failed.to.update.node=\u65e0\u6cd5\u66f4\u65b0\u8282\u70b9 {0}\u3002  

## GetHealthCommand
get.health.called=\u5bf9\u7fa4\u96c6 "{0}" \u8c03\u7528\u4e86 get-health
get.health.cluster.name=\u8981\u4e86\u89e3\u5176\u8fd0\u884c\u72b6\u51b5\u4fe1\u606f\u7684\u7fa4\u96c6\u7684\u540d\u79f0\u3002
get.health.command=\u83b7\u53d6\u7fa4\u96c6\u4e2d\u5b9e\u4f8b\u7684\u5f53\u524d\u8fd0\u884c\u72b6\u51b5\u3002
get.health.no.instances=\u5728\u7fa4\u96c6 {0} \u4e2d\u672a\u627e\u5230\u4efb\u4f55\u5b9e\u4f8b\u3002
get.health.noCluster=\u7fa4\u96c6 {0} \u4e0d\u5b58\u5728\u3002
get.health.noGMS=\u6ca1\u6709\u4e3a\u7fa4\u96c6 {0} \u8fd0\u884c\u7ec4\u7ba1\u7406\u670d\u52a1\u3002\u672a\u8fd0\u884c GMS \u65f6\u65e0\u6cd5\u83b7\u53d6\u5b9e\u4f8b\u7684\u8fd0\u884c\u72b6\u51b5\u3002
get.health.noHistoryError=\u610f\u5916\u9519\u8bef: \u627e\u4e0d\u5230 GMS \u8fd0\u884c\u72b6\u51b5\u5386\u53f2\u8bb0\u5f55\u3002
get.health.onlyRunsOnDas=\u8fd9\u662f\u4e00\u4e2a GlassFish \u670d\u52a1\u5668\u5b9e\u4f8b\uff0c\u800c get-health \u53ea\u80fd\u5728 DAS \u4e0a\u8fd0\u884c\u3002
get.health.instance.state={0} {1}
get.health.instance.state.since={0} {1}\uff0c\u56e0\u4e3a {2}

dynamicreconfiguration.diagnostics.supplementalexec=\u6b63\u5728\u6267\u884c\u8865\u5145\u547d\u4ee4 {0}

enable.secure.admin.command=\u542f\u7528\u57df\u8303\u56f4\u5185\u7684\u5b89\u5168\u7ba1\u7406
enable.secure.admin.errenable=\u542f\u7528\u5b89\u5168\u7ba1\u7406\u65f6\u51fa\u9519
disable.secure.admin.command=\u7981\u7528\u57df\u8303\u56f4\u5185\u7684\u5b89\u5168\u7ba1\u7406
disable.secure.admin.errdisable=\u7981\u7528\u5b89\u5168\u7ba1\u7406\u65f6\u51fa\u9519

list.persistence.types.command=\u5217\u51fa\u53ef\u7528\u7684\u6301\u4e45\u6027\u7c7b\u578b
list.persistence.types.container=\u5bb9\u5668\u7c7b\u578b\u4e3a web \u6216 ejb
list.persistence.types.called=\u5bf9 {0} \u5bb9\u5668\u8c03\u7528\u4e86 list-persistence-types
list.persistence.types.null.parameter=\u5fc5\u987b\u5c06\u53c2\u6570\u7c7b\u578b\u6307\u5b9a\u4e3a ejb \u6216 web
list.persistence.types.invalid.parameter=\u53c2\u6570\u7c7b\u578b\u5305\u542b\u65e0\u6548\u503c {0}\u3002\u5fc5\u987b\u5c06\u5176\u6307\u5b9a\u4e3a ejb \u6216 web
