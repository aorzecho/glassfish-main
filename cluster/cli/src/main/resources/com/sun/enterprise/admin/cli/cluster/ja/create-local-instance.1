CREATE-LOCAL-INSTA(1)                                    CREATE-LOCAL-INSTA(1)

名前
       create-local-instance - サブコマンドを実行するホスト上にGlassFish
       Serverインスタンスを作成します

概要
           create-local-instance [--help]
           [--node node-name] [--nodedir node-dir]
           [--config config-name | --cluster cluster-name]
           [--lbenabled={true|false}]
           [--portbase port-number] [--checkports={true|false}]
           [--savemasterpassword={false|true}]
           [--usemasterpassword={false|true}]
           [--systemproperties (name=value)[:name=value]* ]
           instance-name

説明
       create-local-instanceサブコマンドは、サブコマンドを実行するホストを表すノード上にGlassFish
       Serverインスタンスを作成します。このサブコマンドでは、分散コンポーネント・オブジェクト・モデル(DCOM)リモート・プロトコルまたはSecure
       Shell(SSH)を構成する必要はありません。

       このサブコマンドは、インスタンスを配置するノードで表されるホストから実行する必要があります。ドメイン管理サーバー(DAS)にアクセスするには、このサブコマンドでは、DASが稼働しているホストの名前が必要です。管理用にデフォルト以外のポートを使用する場合、このサブコマンドではポート番号も必要です。最初のインスタンスをノードに追加するとき、asadmin(1M)ユーティリティの--hostオプションおよび--portオプションを使用して、この情報を指定する必要があります。2つ目以降のインスタンスについては、ノードのDASプロパティからこの情報が取得されます。

       GlassFish Serverインスタンスは、GlassFish
       Serverを実行している単一ノードに1つのJavaプラットフォームの仮想マシン(Java仮想マシンまたはJVMマシン)です。ノードは、GlassFish
       Serverインスタンスが存在するホストを定義します。JVMマシンは、Java
       Platform,Enterprise Edition(Java EE)と互換性がある必要があります。

       GlassFish Serverインスタンスには、次の項目への参照が必要です。

       ·   インスタンスが存在するホストを定義するノード。ノードはインスタンスを作成するコマンドで指定できますが、必要になるのはノードのファイルが格納されたディレクトリに複数のノードが存在する場合のみです。ノードを指定しない場合、サブコマンドの動作は、ノードが格納されたディレクトリに存在するノードの数によって決まります。

           ·   ノードが存在しない場合は、サブコマンドによってインスタンス用のノードが作成されます。ノードの名前は、サブコマンドを実行するホストの名前になります。

           ·   ノードが1つのみ存在する場合は、サブコマンドによってインスタンス用の既存のノードへの参照が作成されます。

           ·   複数のノードが存在する場合は、エラーが発生します。

       ·   インスタンスの構成を定義する名前付き構成。コマンドで構成を指定してインスタンスを作成することができますが、必須ではありません。クラスタに参加していないインスタンスに構成が指定されていない場合は、サブコマンドによってインスタンスの構成が作成されます。クラスタに参加しているインスタンスは、親クラスタから構成を受け取ります。

       各GlassFish
       Serverインスタンスは、次のタイプのインスタンスのいずれかです。

       スタンドアロン・インスタンス
           スタンドアロン・インスタンスは、他のインスタンスやクラスタと構成を共有しません。次のいずれかの条件が満たされると、スタンドアロン・インスタンスが作成されます。

           ·   インスタンスを作成するコマンドで、構成またはクラスタが指定されていません。

           ·   インスタンスを作成するコマンドで、他のすべてのインスタンスまたはクラスタが参照しない構成が指定されていません。

           構成またはクラスタが指定されていない場合、default-config構成のコピーがインスタンスに対して作成されます。この構成の名前はinstance-name-configで、instance-nameはクラスタ化されていないサーバー・インスタンスの名前を表します。

       共有インスタンス
           共有インスタンスは、他のインスタンスやクラスタと構成を共有します。インスタンスを作成するコマンドで、他のインスタンスまたはクラスタによって参照される構成が指定されている場合、共有インスタンスが作成されます。

       クラスタ化されたインスタンス
           クラスタ化されたインスタンスは、インスタンスが属するクラスタから構成を継承し、クラスタ内の他のインスタンスと構成を共有します。インスタンスを作成するコマンドでクラスタが指定された場合、クラスタ化されたインスタンスが作成されます。

           クラスタに属していないインスタンスは、クラスタ化されていないサーバー・インスタンスと見なされます。したがって、スタンドアロン・インスタンスと共有インスタンスは、クラスタ化されていないサーバー・インスタンスです。

       デフォルトでは、このサブコマンドは作成中のインスタンスで予測されるポートの競合の解決を試みます。また、サブコマンドは、現在使用されておらず、同じノード上の他のインスタンスに割り当てられていないポートを割り当てます。サブコマンドは、サブコマンド内部のアルゴリズムに基づいてこれらのポートを割り当てます。--systempropertiesオプションを使用して、同じノードの追加のインスタンスでのポートの競合を解決します。インスタンスのシステム・プロパティは、create-system-properties(1)サブコマンドおよびdelete-system-property(1)サブコマンドを使用して操作できます。

       インスタンスの作成時、このサブコマンドによって、ドメイン管理サーバー(DAS)との同期が確実に行われるようにするために必要なファイルが取得されます。インスタンスは起動時にDASと同期されます。

オプション
       --help, -?
           サブコマンドに関するヘルプ・テキストが表示されます。

       --node
           インスタンスが作成されるホストを定義するノードの名前。ノードを指定する必要があるのは、ノードが格納されたディレクトリに複数のノードが存在する場合のみです。それ以外の場合、ノードは省略できます。ノードを指定した場合は、そのノードが存在する必要があります。

           ノードを指定しない場合、サブコマンドの動作は、ノードが格納されたディレクトリに存在するノードの数によって決まります。

           ·   ノードが存在しない場合は、サブコマンドによってインスタンス用のノードが作成されます。ノードの名前は、サブコマンドを実行するホストの名前になります。

           ·   ノードが1つのみ存在する場合は、サブコマンドによってインスタンス用の既存のノードへの参照が作成されます。

           ·   複数のノードが存在する場合は、エラーが発生します。

       --nodedir
           インスタンスのノードのファイルが格納されるディレクトリのパス。デフォルトはas-install/nodesです。

       --config
           インスタンスが参照する名前付き構成を指定します。構成が存在していて、その名前がdefault-configまたはserver-configでないことが必要です。--configオプションを指定すると、共有インスタンスが作成されます。

           --configオプションと--clusterオプションは、同時に指定できません。両方のオプションを省略すると、スタンドアロン・インスタンスが作成されます。

       --cluster
           インスタンスが構成を継承するクラスタを指定します。--clusterオプションを指定すると、クラスタ化されたインスタンスが作成されます。

           --configオプションと--clusterオプションは、同時に指定できません。両方のオプションを省略すると、スタンドアロン・インスタンスが作成されます。

       --lbenabled
           インスタンスでロード・バランシングを有効にするかを指定します。使用可能な値は次のとおりです:

           true
               インスタンスでロード・バランシングが有効になります(デフォルト)。

               インスタンスでロード・バランシングが有効になっている場合、ロード・バランサはインスタンスにリクエストを送信します。

           false
               インスタンスでロード・バランシングが無効になります。

               インスタンスでロード・バランシングが無効になっている場合、ロード・バランサはインスタンスにリクエストを送信しません。

       --portbase
           ポート割当てを開始する番号を指定します。インスタンスは、静的に割り当てられたポートの特定の番号を使用します。このportbaseの値によって、どこから割当てを開始するかが決まります。ポートの値は次のように計算されます。

           ·   管理ポート: portbase + 48

           ·   HTTPリスナー・ポート: portbase + 80

           ·   HTTPSリスナー・ポート: portbase + 81

           ·   JMSポート: portbase + 76

           ·   IIOPリスナー・ポート: portbase + 37

           ·   セキュリティ保護されたIIOPリスナー・ポート: portbase + 38

           ·   セキュリティ保護されたIIOP相互認証ポート: portbase + 39

           ·   JMXポート: portbase + 86

           ·   JPAデバッガ・ポート: portbase + 9

           ·   OSGiモジュール管理用Felixシェル・サービス・ポート: portbase +
               66

           --portbaseオプションが指定されると、このサブコマンドの出力には使用されるポートの完全なリストが含まれます。

       --checkports
           管理ポート、HTTPポート、JMSポート、JMXポート、およびIIOPポートの可用性を確認するかを指定します。デフォルト値はtrueです。

       --savemasterpassword
           このオプションをtrueに設定した場合、ファイル・システムにマスター・パスワードを書き込むことができます。ファイル・システムにマスター・パスワードを書き込んだ場合、インスタンスを起動するときにパスワードの入力は要求されません。このオプションがtrueの場合は、コマンド行で指定した値に関係なく、--usemasterpasswordオプションもtrueになります。マスター・パスワードをファイル・システムに書き込むのは安全ではないため、デフォルトはfalseです。

           インスタンスのmaster-passwordファイルは、ドメインのディレクトリではなく、ノードのディレクトリに保存されます。そのため、このオプションを指定する必要があるのは、ドメイン内の各ノードで初めてインスタンスを作成するときのみです。

       --usemasterpassword
           システムに組み込まれているマスター・パスワード、またはユーザー定義のマスター・パスワードの、どちらを使用してキーストアを暗号化するかを指定します。

           false(デフォルト)に設定した場合、システムに組み込まれている既知のパスワードでキーストアが暗号化されます。システムに組み込まれているパスワードでキーストアを暗号化しても、セキュリティは強化されません。

           trueの場合、サブコマンドによって、パスワード・ファイルのAS_ADMIN_MASTERPASSWORDエントリからマスター・パスワードが取得されるか、マスター・パスワードの入力が要求されます。パスワード・ファイルは、asadmin(1M)ユーティリティの--passwordfileオプションで指定されます。

           --savemasterpasswordオプションがtrueの場合は、コマンド行で指定した値に関係なく、このオプションもtrueになります。

           マスター・パスワードは、ドメイン内のすべてのインスタンスで同じものを使用する必要があります。

       --systemproperties
           インスタンスのシステム・プロパティを定義します。これらのプロパティは、インスタンスの構成にあるポート設定のプロパティ定義をオーバーライドします。2つのクラスタ化されたインスタンスが同じホスト上に存在する場合などでは、定義済のポート設定はオーバーライドされます。この状況では、両方のインスタンスが同じ構成を共有するため、一方のインスタンスのポート設定はオーバーライドされる必要があります。

           次のプロパティが使用可能です:

           ASADMIN_LISTENER_PORT
               このプロパティは、DASがインスタンスを管理するためにインスタンスにアクセスするHTTPポートまたはHTTPSポートのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           HTTP_LISTENER_PORT
               このプロパティは、HTTPリクエストのリスニングに使用するポートのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           HTTP_SSL_LISTENER_PORT
               このプロパティは、HTTPSリクエストのリスニングに使用するポートのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           IIOP_LISTENER_PORT
               このプロパティは、IIOP接続に使用するポートのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           IIOP_SSL_LISTENER_PORT
               このプロパティは、セキュリティ保護されたIIOP接続に使用するポートのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           IIOP_SSL_MUTUALAUTH_PORT
               このプロパティは、クライアント認証でセキュリティ保護されたIIOP接続に使用するポートのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           JAVA_DEBUGGER_PORT
               このプロパティは、Java Platform Debugger Architecture (JPDA)
               (http://java.sun.com/javase/technologies/core/toolsapis/jpda/)デバッガへの接続に使用するポートのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           JMS_PROVIDER_PORT
               このプロパティは、Java Message
               Serviceプロバイダのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           JMX_SYSTEM_CONNECTOR_PORT
               このプロパティでは、JMXコネクタがリスニングするポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           OSGI_SHELL_TELNET_PORT
               このプロパティは、Apache Felix Remote
               Shell(http://felix.apache.org/site/apache-felix-remote-shell.html)への接続に使用するポートのポート番号を指定します。このシェルは、Felixシェル・サービスを使用してOSGiモジュール管理サブシステムと相互作用します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

オペランド
       instance-name
           作成されるインスタンスの名前。

           名前は次の要件を満たしてください。

           ·   ASCII文字のみ使用します。

           ·   名前は英数字またはアンダースコアで始めます。

           ·   名前に含めることができるのは次の文字のみです。

               ·   小文字

               ·   大文字

               ·   数値

               ·   ハイフン

               ·   ピリオド

               ·   アンダースコア

           ·   名前はドメイン内で一意にします。また、別のGlassFish
               Serverインスタンス、クラスタ、名前付き構成、またはノードの名前にすることはできません。

           ·   ド
               Serverで予約されている他のキーワードを名前に使用しないでください。

例
       例 1, スタンドアロンGlassFish Serverインスタンスの作成
           この例では、コマンドを実行するホストにスタンドアロン・インスタンスil3を作成します。DASは同じホストで稼働しています。インスタンスは既存のノードのみを参照します。

               asadmin> create-local-instance il3
               Rendezvoused with DAS on localhost:4848.
               Port Assignments for server instance il3:
               JMX_SYSTEM_CONNECTOR_PORT=28686
               JMS_PROVIDER_PORT=27676
               HTTP_LISTENER_PORT=28080
               ASADMIN_LISTENER_PORT=24848
               JAVA_DEBUGGER_PORT=29009
               IIOP_SSL_LISTENER_PORT=23820
               IIOP_LISTENER_PORT=23700
               OSGI_SHELL_TELNET_PORT=26666
               HTTP_SSL_LISTENER_PORT=28181
               IIOP_SSL_MUTUALAUTH_PORT=23920
               Command create-local-instance executed successfully.

       例 2, 特定のノードでのクラスタ化されたGlassFish
       Serverインスタンスの作成
           この例では、クラスタ化されたインスタンスymli2をノードsj02上に作成します。このインスタンスはクラスタymlclustのメンバーです。

           このコマンドは、ノードsj02で表されるホストsj02で実行します。DASはホストsr04で稼働しており、管理用のデフォルトのHTTPポートを使用しています。ノードにインスタンスが存在しないため、DASが稼働しているホストはasadminユーティリティの--hostオプションを使用して指定します。

               sj02# asadmin --host sr04 create-local-instance --cluster ymlclust --node sj02 ymli2
               Rendezvoused with DAS on sr04:4848.
               Port Assignments for server instance ymli2:
               JMX_SYSTEM_CONNECTOR_PORT=28686
               JMS_PROVIDER_PORT=27676
               HTTP_LISTENER_PORT=28080
               ASADMIN_LISTENER_PORT=24848
               JAVA_DEBUGGER_PORT=29009
               IIOP_SSL_LISTENER_PORT=23820
               IIOP_LISTENER_PORT=23700
               OSGI_SHELL_TELNET_PORT=26666
               HTTP_SSL_LISTENER_PORT=28181
               IIOP_SSL_MUTUALAUTH_PORT=23920
               Command create-local-instance executed successfully.

終了ステータス
       0
           コマンドは正常に実行されました

       1
           コマンドの実行時にエラーが発生しました

関連項目
       create-instance(1), create-node-config(1), create-node-dcom(1),
       create-node-ssh(1), create-system-properties(1),
       delete-local-instance(1), delete-system-property(1), list-instances(1),
       start-local-instance(1), stop-local-instance(1)

       asadmin(1M)

                                 2011年12月8日           CREATE-LOCAL-INSTA(1)
