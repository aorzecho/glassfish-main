<?xml version="1.0" encoding="iso-8859-1"?>

<project name="Scripting source integration" default="build" basedir="..">

    <!-- import build.xml for init target and inherited properties -->
    <import file="${basedir}/build.xml"/>

    <property name="scripting.dir" value="${glassfish.external.dir}/scripting"/>
    
    <target name="checkout" depends="init,check.svn,check.hg,check.git" unless="skipCheckout">
        <antcall target="asm.checkout"/>
        <antcall target="grizzly-scripting-common.checkout"/>
        <antcall target="jruby-common.checkout"/>
        <antcall target="jruby-monitoring.checkout"/>
        <antcall target="grizzly-jruby.checkout"/>
        <antcall target="jruby-config.checkout"/>
        <antcall target="jruby-container.checkout"/>
        <antcall target="jruby.checkout"/>
        <antcall target="jline.checkout"/>
        <antcall target="joda-time.checkout"/>
        <antcall target="bytelist.checkout"/>
        <antcall target="jcodings.checkout"/>
        <antcall target="joni.checkout"/>
        <antcall target="jvyamlb.checkout"/>
        <antcall target="jna.checkout"/>
        <antcall target="jna-posix.checkout"/>
        <antcall target="constantine.checkout"/>
        <antcall target="jaffi.checkout"/>
        <property name="skipCheckout" value="true"/>
    </target>

    <target name="build" depends="init">
        <antcall target="scripting.build"/>
    </target>

    <!--
        Checkout targets
    -->
    <target name="asm.checkout" unless="skipCheckout">
        <svn.checkout repo="${asm.svn.url}" dest="scripting/asm"/>
    </target>

    <target name="grizzly-scripting-common.checkout" unless="skipCheckout">
        <svn.checkout dest="scripting/grizzly-scripting-common"
            repo="${grizzly-scripting-common.svn.url}"/>
    </target>

    <target name="jruby-common.checkout" unless="skipCheckout">
        <svn.checkout dest="scripting/jruby-commons"
            repo="${jruby-commons.svn.url}"/>
    </target>

    <target name="jruby-monitoring.checkout" unless="skipCheckout">
        <svn.checkout dest="scripting/jruby-monitoring"
            repo="${jruby-monitor.svn.url}" />
    </target>

    <target name="grizzly-jruby.checkout" unless="skipCheckout">
        <svn.checkout dest="scripting/grizzly-jruby" 
            repo="${grizzly-jruby.svn.url}" />
    </target>

    <target name="jruby-config.checkout" unless="skipCheckout">
        <svn.checkout dest="scripting/jruby-config"
            repo="${jruby-config.svn.url}" />
    </target>

    <target name="jruby-container.checkout" unless="skipCheckout">
        <svn.checkout dest="scripting/jruby-container"
            repo="${jruby-container.svn.url}" />
    </target>

    <target name="jruby.checkout" unless="skipCheckout">
        <git.clone repo="${jruby.git.url}"
            dest="scripting/jruby" tag="${jruby.version}"/>
        <replace file="${scripting.dir}/jruby/pom.xml">
            <replacetoken><![CDATA[<dependency>
                <groupId>bsf</groupId>
                <artifactId>bsf</artifactId>
                <version>2.3.0</version>
                <scope>provided</scope>
            </dependency>]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>
    </target>

    <target name="jline.checkout" unless="skipCheckout">
        <svn.checkout dest="scripting/jline" 
            repo="${jline.svn.url}" />
    </target>

    <target name="joda-time.checkout" unless="skipCheckout">
        <svn.checkout  dest="scripting/joda-time" 
            repo="${joda-time.scripting.svn.url}" />
    </target>

    <target name="bytelist.checkout" unless="skipCheckout">
        <svn.checkout dest="scripting/bytelist"
            repo="${bytelist.svn.url}" />
    </target>

    <target name="jcodings.checkout" unless="skipCheckout">
        <svn.checkout dest="scripting/jcodings" 
            repo="${jcondings.svn.url}" />
    </target>

    <target name="joni.checkout" unless="skipCheckout">
        <svn.checkout dest="scripting/joni"
            repo="${joni.svn.url}" />
    </target>

    <target name="jvyamlb.checkout" unless="skipCheckout">
        <svn.checkout dest="scripting/jvyamlb" 
            repo="${jvyamlb.svn.url}"  />
    </target>

    <target name="jna.checkout" unless="skipCheckout">
        <svn.checkout dest="scripting/jna"
            repo="${jnalib.svn.url}" />
    </target>

    <target name="jna-posix.checkout" unless="skipCheckout">
        <hg.clone repo="${jna-posix.hg.url}"
            dest="scripting/jna-posix" tag="${jna-posix.version}"/>
    </target>

    <target name="constantine.checkout" unless="skipCheckout">
        <!-- there is no tag for 0.6, the tip appears to be 0.6 -->
        <svn.checkout dest="scripting/constantine"
            repo="${constantine.svn.url}" />
    </target>
    
    <target name="jaffi.checkout" unless="skipCheckout">
        <svn.checkout dest="scripting/jaffi" 
            repo="${jaffi.svn.url}" />
    </target>

    <!--
        Build targets
    -->
    <target name="asm.build" depends="asm.checkout">
            <echo message="Building asm ${asm.version}"/>
            <ant dir="${scripting.dir}/asm" target="jar"/>

            <property name="asm.dist.lib.dir"
                value="${scripting.dir}/asm/output/dist/lib"/>
                
            <mvn.publish.local
                file="${asm.dist.lib.dir}/asm-parent-${asm.version}.pom"
                artifactId="asm-parent"
                groupId="asm"
                version="${asm.version}"
                packaging="pom"/>
            <mvn.publish.local.pom
                file="${asm.dist.lib.dir}/asm-${asm.version}.jar"
                pom="${asm.dist.lib.dir}/asm-${asm.version}.pom"/>
            <mvn.publish.local.pom
                file="${asm.dist.lib.dir}/asm-analysis-${asm.version}.jar"
                pom="${asm.dist.lib.dir}/asm-analysis-${asm.version}.pom"/>
            <mvn.publish.local.pom
                file="${asm.dist.lib.dir}/asm-commons-${asm.version}.jar"
                pom="${asm.dist.lib.dir}/asm-commons-${asm.version}.pom" />
            <mvn.publish.local.pom
                file="${asm.dist.lib.dir}/asm-tree-${asm.version}.jar"
                pom="${asm.dist.lib.dir}/asm-tree-${asm.version}.pom"/>
            <mvn.publish.local.pom
                file="${asm.dist.lib.dir}/asm-util-${asm.version}.jar"
                pom="${asm.dist.lib.dir}/asm-util-${asm.version}.pom" />
            <mvn.publish.local.pom
                file="${asm.dist.lib.dir}/asm-xml-${asm.version}.jar"
                pom="${asm.dist.lib.dir}/asm-xml-${asm.version}.pom" />
    </target>

    <!-- grizzly-scripting-common -->
    <target name="grizzly-scripting-common.build" depends="grizzly-scripting-common.checkout">
        <mvn.install skip-test="true" dir="${scripting.dir}/grizzly-scripting-common"/>
    </target>

    <!-- jruby commons -->
    <target name="jruby-common.build" depends="jruby-common.checkout">
        <mvn.install skip-test="true" dir="${scripting.dir}/jruby-commons"/>
    </target>

    <!-- jruby monitoring -->
    <target name="jruby-monitoring.build" depends="jruby-monitoring.checkout">
        <mvn.install skip-test="true" dir="${scripting.dir}/jruby-monitoring"/>
    </target>

    <!-- jruby config -->
    <target name="jruby-config.build" depends="jruby-config.checkout">
        <mvn.install skip-test="true" dir="${scripting.dir}/jruby-config"/>
    </target>

    <!-- grizzly-jruby -->
    <target name="grizzly-jruby.build" depends="grizzly-jruby.checkout">
        <mvn.install skip-test="true" dir="${scripting.dir}/grizzly-jruby"/>
    </target>

    <!-- jruby-container -->
    <target name="jruby-container.build" depends="jruby-container.checkout">
        <mvn.install skip-test="true" dir="${scripting.dir}/jruby-container"/>
    </target>

    <target name="scripting.build" depends="jruby.build">
        <antcall target="grizzly-scripting-common.build"/>
        <antcall target="jruby-common.build"/>
        <antcall target="jruby-monitoring.build"/>
        <antcall target="jruby-config.build"/>
        <antcall target="grizzly-jruby.build"/>
        <antcall target="jruby-container.build"/>
    </target>

    <!-- jruby-complete -->
    <target name="jruby.build">
        <antcall target="jcodings.build"/>
        <antcall target="asm.build"/>
        <antcall target="bytelist.build"/>
        <antcall target="jline.build"/>
        <antcall target="joda-time.build"/>
        <antcall target="joni.build"/>
        <antcall target="jvyamlb.build"/>
        <antcall target="jna.build"/>
        <antcall target="jna-posix.build"/>
        <antcall target="constantine.build"/>
        <antcall target="jaffi.build"/>

        <!-- now that all jruby dependencies are built, time to build jruby itself -->
        <mvn.install dir="${scripting.dir}/jruby"/>
    </target>


    <!-- jline -->
    <target name="jline.build" depends="jline.checkout">
        <mvn.install skip-test="true" dir="${scripting.dir}/jline" />
    </target>

    <!-- joda-time -->
    <target name="joda-time.build" depends="joda-time.checkout">
        <ant dir="${scripting.dir}/joda-time" target="jar">
            <property name="junit.ant" value="true"/>
        </ant>
        <mvn.publish.local.pom
            file="${scripting.dir}/joda-time/build/joda-time-${joda-time.scripting.version}.jar"
            pom="${scripting.dir}/joda-time/pom-release.xml" />
    </target>

    <!-- bytelist -->
    <target name="bytelist.build" depends="bytelist.checkout" >
        <mvn.install skip-test="true" dir="${scripting.dir}/bytelist" />
    </target>

    <!-- jcodings -->
    <target name="jcodings.build" depends="jcodings.checkout" >
        <mvn.install skip-test="true" dir="${scripting.dir}/jcodings" />
    </target>

    <!-- joni -->
    <target name="joni.build" depends="joni.checkout" >
        <mvn.install skip-test="true" dir="${scripting.dir}/joni"/>
    </target>

    <!-- jvyamlb -->
    <target name="jvyamlb.build" depends="jvyamlb.checkout">
        <mvn.install skip-test="true" dir="${scripting.dir}/jvyamlb" />
    </target>

    <!-- jna -->
    <target name="jna.build" depends="jna.checkout">
        <mvn.install skip-test="true" dir="${scripting.dir}/jna" />
    </target>

    <!-- jna-posix -->
    <target name="jna-posix.build" depends="jna-posix.checkout">
        <mvn.install skip-test="true" dir="${scripting.dir}/jna-posix" />
    </target>

    <!-- constantine -->
    <target name="constantine.build" depends="constantine.checkout">
        <!-- there is no tag for 0.6, the tip appears to be 0.6 -->
        <mvn.install skip-test="true" dir="${scripting.dir}/constantine" />
    </target>

    <!-- jaffi -->
    <target name="jaffi.build" depends="jaffi.checkout">
        <mvn.install skip-test="true" dir="${scripting.dir}/jaffi" />
    </target>
</project>
