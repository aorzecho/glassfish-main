CREATE-JDBC-CONNEC(1)                                    CREATE-JDBC-CONNEC(1)

제목
       create-jdbc-connection-pool - JDBC 접속 풀 등록

시놉시스
           create-jdbc-connection-pool [--help]
           [--datasourceclassname=datasourceclassname]
           [--restype=resourcetype]
           [--steadypoolsize=poolsize]
           [--maxpoolsize=maxpoolsize]
           [--maxwait=maxwaittime]
           [--poolresize=poolresizelimit]
           [--idletimeout=idletimeout]
           [--initsql=initsqlstring]
           [--isolationlevel=isolationlevel]
           [--isisolationguaranteed={true|false}]
           [--isconnectvalidatereq={false|true}]
           [--validationmethod=validationmethod]
           [--validationtable=validationtable]
           [--failconnection={false|true}]
           [--allownoncomponentcallers={false|true}]
           [--nontransactionalconnections={false|true}]
           [--validateatmostonceperiod=validationinterval]
           [--leaktimeout=leaktimeout]
           [--leakreclaim={false|true}]
           [--statementleaktimeout=satementleaktimeout]
           [--statmentleakreclaim={false|true}]
           [--creationretryattempts=creationretryattempts]
           [--creationretryinterval=creationretryinterval]
           [--sqltracelisteners=sqltracelisteners[,sqltracelisteners]]
           [--statementtimeout=statementtimeout]
           [--lazyconnectionenlistment={false|true}]
           [--lazyconnectionassociation={false|true}]
           [--associatewiththread={false|true}]
           [--driverclassname=jdbcdriverclassname]
           [--matchconnections={false|true}]
           [--maxconnectionusagecount=maxconnectionusagecount]
           [--ping={false|true}]
           [--pooling={false|true}]
           [--statementcachesize=statementcachesize]
           [--validationclassname=validationclassname]
           [--wrapjdbcobjects={false|true}]
           [--description description]
           [--property name=value)[:name=value]*]
           [--target=target]
           connectionpoolid

설명
       create-jdbc-connection-pool 하위 명령은 지정된 JDBC 접속 풀 이름으로 새
       "JDBC"(Java Database Connectivity) 소프트웨어 접속 풀을 등록합니다.

       --property 옵션을 사용하여 사용자, 비밀번호 또는 기타 접속 정보를
       지정하거나 XML 기술자 파일에 접속 정보를 지정하여 인증이 포함된 JDBC
       접속 풀을 생성할 수 있습니다.

       이 하위 명령은 원격 모드에서만 지원됩니다.

옵션
       --help, -?
           하위 명령에 대한 도움말 텍스트를 표시합니다.

       --datasourceclassname
           공급업체가 제공한 JDBC 데이터 소스 리소스 관리자의 이름입니다. XA
           또는 전역 트랜잭션 가능 데이터 소스 클래스는 javax.sql.XADatasource
           인터페이스를 구현합니다. 비 XA 또는 배타적인 로컬 트랜잭션 데이터
           소스는 javax.sql.Datasource 인터페이스를 구현합니다.

       --restype, 데이터 소스 클래스가 둘 이상의
       인터페이스(javax.sql.DataSource, javax.sql.XADataSource 또는
       javax.sql.ConnectionPoolDataSource)를 구현하거나 드라이버 클래스 이름을
       제공해야 할 경우 필수입니다.

           ·   --restype = java.sql.Driver인 경우 --driverclassname 옵션이
               필수입니다.

           ·   --restype = javax.sql.DataSource, javax.sql.XADataSource 또는
               javax.sql.ConnectionPoolDataSource인 경우 --datasourceclassname
               옵션이 필수입니다.

           ·   --restype을 지정하지 않은 경우 --driverclassname 또는
               --datasourceclassname 옵션을 지정해야 합니다. 단, 두 옵션을
               동시에 지정해서는 안됩니다.

       --steadypoolsize
           풀에서 유지 관리되는 최소 및 초기 접속 수. 기본값은 8입니다.

       --maxpoolsize
           생성할 수 있는 최소 접속 수. 기본값은 32입니다.

       --maxwait
           호출자가 접속 시간 초과를 보내기 전에 대기하는 시간(밀리초
           단위)입니다. 기본값은 60000(60초)입니다. 값이 0이면 호출자는 무기한
           대기합니다.

       --poolresize
           idle-timeout-in-seconds 타이머가 만료될 때 제거할 접속 수입니다. 이
           값은 풀에서 접속 수를 늘리거나 줄이는 단위 수입니다. 늘리기: 풀에
           사용 가능한 접속이 없을 경우 풀에서 이 수만큼 늘립니다. 줄이기:
           부적합하거나 유휴 상태의 접속이 모두 제거되므로 경우에 따라 이
           값보다 큰 수의 접속이 제거됩니다. 시간 초과보다 길게 유휴 상태에
           있는 접속이 제거 대상입니다. Steadypoolsize를 확인합니다. 가능한
           값은 0부터 MAX_INTEGER까지입니다. 기본값은 2입니다.

       --idletimeout
           풀에서 접속이 유휴 상태로 있을 수 있는 최대 시간(초)입니다. 이
           시간이 지나면 구현에서 이 접속을 닫을 수 있습니다. 응용
           프로그램에서 사용할 수 없는 접속의 누적을 방지하려면 이 시간 초과
           값을 데이터베이스 서버측 시간 초과 값보다 작게 유지해야 합니다.
           기본값은 300입니다.

       --initsql
           풀에서 접속이 생성될 때마다 실행되는 SQL 문자열입니다. 기존 접속을
           재사용할 경우 이 문자열이 실행되지 않습니다. 시간 초과보다 길게
           유휴 상태에 있는 접속이 제거 대상입니다. 이 옵션에는 기본값이
           없습니다.

       --isolationlevel
           풀링된 데이터베이스 접속 상의 transaction-isolation-level. 이
           옵션에는 기본값이 없습니다. 지정하지 않을 경우 풀은 JDBC 드라이버가
           제공하는 기본 격리 레벨로 작동합니다. 다음 표준 트랜잭션 격리 레벨
           중 하나를 사용하여 원하는 격리 레벨을 설정할 수 있습니다.
           read-uncommitted, read-committed,
            repeatable-read, serializable. 풀링된 접속에서 격리 레벨을
           변경하는 응용 프로그램은 프로그래밍 방식으로 풀을 변경시킬 위험이
           있습니다. 이로 인해 프로그램 오류가 발생할 수 있습니다.

       --isisolationguaranteed
           이것은 transaction-isolation-level에 특정 격리 레벨이 지정된
           경우에만 적용됩니다. 기본값은 true입니다.

           이 옵션을 사용하면 풀에서 접속을 가져올 때마다 격리 레벨이 원하는
           값으로 설정됩니다. 이것은 JDBC 드라이버의 성능에 다소 영향을 줄 수
           있습니다. 접속을 반환하기 전에 응용 프로그램이 --isolationlevel을
           변경하지 않을 경우 관리자는 이 값을 false로 설정할 수 있습니다.

       --isconnectvalidatereq
           true로 설정된 경우, 접속을 검증 및 검사하여 응용 프로그램으로
           전달하기 전에 해당 접속을 사용할 수 있는지 여부를 확인합니다.
           기본값은 false입니다.

       --validationmethod
           is-connection-validation-required가 true인 경우 수행할 검증
           유형입니다. 적합한 설정은 다음과 같습니다.  auto-commit, meta-data,
           table 또는 custom-validation. 기본값은 table입니다.

       --validationtable
           질의를 수행하여 접속을 검증하는 데 사용되는 검증 테이블의 이름.
           is-connection-validation-required가 true로 설정되고
           connection-validation-type이 table로 설정된 경우 이 옵션은
           필수입니다.

       --failconnection
           true로 설정된 경우, 단일 검증 확인을 실패하면 풀에 있는 모든 접속을
           닫아야 합니다. 기본값은 false입니다. 실패한 접속을 다시 설정하도록
           한 번 시도합니다.

       --allownoncomponentcallers
           이 속성이 true로 설정된 풀은 비 Java EE 구성 요소, 즉 EJB 또는
           Servlet이 아닌 다른 구성 요소에서 사용할 수 있습니다. 반환된 접속은
           트랜잭션 관리자에서 가져온 트랜잭션 컨텍스트를 통해 자동으로
           나열됩니다. 구성 요소가 아닌 호출자에서 가져온 접속은 트랜잭션 종료
           시 컨테이너에 의해 자동으로 정리되지 않습니다. 이러한 접속은
           호출자가 명시적으로 닫아야 합니다.

       --nontransactionalconnections
           이 속성이 true로 설정된 풀은 트랜잭션이 아닌 접속을 반환합니다. 이
           접속은 트랜잭션 관리자를 통해 자동으로 나열되지 않습니다.

       --validateatmostonceperiod
           접속을 최대 한 번 검증하기 위해 연속된 요청 간의 시간 간격(초)을
           지정합니다. 이 속성을 적절한 값으로 설정하면 접속의 검증 요청
           횟수가 최소화됩니다. 기본값은 0입니다. 값이 0이면 속성이 사용으로
           설정되지 않습니다.

       --leaktimeout
           접속 풀의 접속 누출을 추적하는 시간(초 단위)을 지정합니다. 응용
           프로그램이 지정된 기간 내에 접속을 풀로 반환하지 않는 경우 잠재적인
           누출로 간주되어 호출자에 대한 정적 추적이 기록됩니다. 이 옵션은
           접속 누출이 있는지만 감지합니다.  connection-leak-reclaim이 true로
           설정된 경우에만 접속을 회수할 수 있습니다.

           접속 누출 추적이 사용으로 설정된 경우 관리 콘솔을(를) 사용하여 JDBC
           접속 풀을 모니터링하여 접속 누출 수에 대한 통계를 얻을 수 있습니다.
           기본값은 0입니다. 값이 0이면 접속 누출 추적이 사용 안함으로
           설정됩니다.

       --leakreclaim
           누출 접속 추적이 완료된 후 누출된 접속을 접속 풀로 복원할지를
           지정합니다. 가능한 값은 다음과 같습니다.

           false
               누출된 접속이 접속 풀로 복원되지 않

           true
               누출된 접속이 접속 풀로 복원됩니다.

       --statementleaktimeout
           응용 프로그램이 닫지 않은 명령이 감지되기 전까지의 시간(초 단위)을
           지정합니다. 명령 객체가 제대로 닫히지 않은 경우 응용 프로그램에서
           커서를 다 써버릴 수 있습니다. 이 옵션은 명령 누출이 있는지만
           감지합니다.  statement-leak-reclaim이 true로 설정된 경우에만 명령을
           회수할 수 있습니다. 회수되면 누출된 명령이 닫힙니다.

           명령 누출이 감지되면 해당 명령을 생성한 호출자에 대한 정적 추적이
           기록됩니다. 명령 누출 추적이 사용으로 설정된 경우 관리 콘솔을(를)
           사용하여 JDBC 접속 풀을 모니터링하여 명령 누출 수에 대한 통계를
           얻을 수 있습니다. 기본값은 0입니다. 값이 0이면 명령 누출 추적이
           사용 안함으로 설정됩니다.

           명령 누출 시간 초과 값에 다음 제한이 적용됩니다.

           ·   이 값은 접속 leak-timeout에 대해 설정된 값보다 작아야 합니다.

           ·   이 값은 statement-timeout에 대해 설정된 값보다 커야 합니다.

       --statementleakreclaim
           명령이 누출된 후 누출된 명령의 회수 여부를 지정합니다. 가능한 값은
           다음과 같습니다.

           false
               누출된 명령이 회수되지 않

           true
               누출된 명령이 회수됩니다.

       --creationretryattempts
           처음 시도를 실패할 경우 GlassFish Server에서 접속을 생성하기 위해
           재시도하는 최대 횟수를 지정합니다. 기본값은 0입니다. 값이 0이면
           GlassFish Server에서 접속을 생성하기 위한 재시도를 하지 않도록
           지정합니다.

       --creationretryinterval
           연속된 접속 생성 시도 간의 간격(초 단위)을 지정합니다.

           --creationretryattempts가 0인 경우 --creationretryinterval 옵션은
           무시됩니다. 기본값은 10입니다.

       --sqltracelisteners
           데이터베이스 작업에 대한 사용자 정의 로깅을 제공하는 하나 이상의
           사용자 정의 모듈 목록입니다. 각 모듈은
           org.glassfish.api.jdbc.SQLTraceListener 공개 인터페이스를 구현해야
           합니다. 적절한 값으로 설정된 경우 응용 프로그램에서 실행한 SQL
           명령이 추적됩니다. 이 옵션에는 기본값이 없습니다.

       --statementtimeout
           완료되지 않은 질의가 종료되기까지의 시간(초 단위)을 지정합니다.

           질의가 오랜 시간 동안 완료되지 않은 상태로 남아 있으면 해당 질의를
           제출한 응용 프로그램이 중지될 수 있습니다. 이러한 경우를 방지하려면
           이 옵션을 사용하여 생성하려는 접속 풀에서 생성되는 모든 명령에 대해
           시간 초과를 설정합니다. 명령을 생성할 때 GlassFish Server에서
           명령의 QueryTimeout 속성을 지정된 시간으로 설정합니다. 기본값은
           -1입니다. 값이 -1이면 완료되지 않은 질의가 절대 종료되지 않도록
           지정합니다.

       --lazyconnectionenlistment
           트랜잭션에 대한 리소스가 메소드에서 실제로 리소스를 사용할 때에만
           나열되는지 지정합니다. 가능한 값은 다음과 같습니다.

           false
               트랜잭션에 대한 리소스가 항상 나열되고 메소드에서 실제로 해당
               리소스를 사용할 때에만 나열되지 않

           true
               트랜잭션에 대한 리소스가 메소드에서 실제로 해당 리소스를 사용할
               때

       --lazyconnectionassociation
           물리적 접속이 사용될 때에만 물리적 접속을 논리적 접속과 연관시키고
           트랜잭션이 완료되면 연관을 해제해야 하는지를 지정합니다. 이러한
           연관 및 연관 해제는 물리적 접속의 재사용을 가능하게 합니다. 가능한
           값은 다음과 같습니다.

           false
               물리적 접속이 사용되기 전에도 물리적 접속이 논리적 접속과
               연관되고 트랜잭션이 완료되어도 연관이 해제되지
               않

           true
               물리적 접속이 사용될 때에만 물리적 접속을 논리적 접속과
               연관시키고 트랜잭션이 완료되면 연관이 해제됩니다.
               --lazyconnectionenlistment 옵션도 true로 설정되어야 합니다.

       --associatewiththread
           스레드에서 접속을 재사용할 수 있도록 접속을 스레드와 연관시킬지를
           지정합니다. 접속이 스레드와 연관되어 있지 않은 경우 스레드는 해당
           스레드에서 접속을 필요로 할 때마다 풀에서 접속을 가져와야 합니다.
           가능한 값은 다음과 같습니다.

           false
               접속이 스레드와 연관되어 있지 않

           true
               접속이 스레드와 연관되어 있습니다.

       --driverclassname
           공급업체가 제공한 JDBC 드라이버 클래스의 이름입니다. 이 드라이버는
           java.sql.Driver 인터페이스를 구현해야 합니다.

       --matchconnections
           풀에서 선택한 접속이 리소스 어댑터와 일치해야 하는지를 지정합니다.
           풀에 있는 접속이 모두 동일한 경우 해당 풀에서 선택한 접속이 리소스
           어댑터와 일치할 필요가 없습니다. 즉, 이 옵션을 false로 설정할 수
           있습니다. 가능한 값은 다음과 같습니다.

           false
               접속이 리소스 어댑터와 일치할 필요가 없

           true
               접속이 리소스 어댑터와 일치해야 합니다.

       --maxconnectionusagecount
           접속을 재사용할 수 있는 최대 횟수를 지정합니다. 이 제한에 도달하면
           접속이 닫힙니다. 접속을 재사용할 수 있는 최대 횟수를 제한하여 명령
           누출을 방지할 수 있습니다.

           기본값은 0입니다. 값이 0이면 접속을 재사용할 수 있는 횟수에 제한을
           지정하지 않습니다.

       --ping
           생성 또는 재구성 중에 풀에 대해 핑을 수행하여 해당 속성의 잘못된
           값을 식별하고 경고할지를 지정합니다. 기본값은 false입니다.

       --pooling
           풀에 대해 접속 풀링을 사용으로 설정할지를 지정합니다. 기본값은
           true입니다.

       --statementcachesize
           기본 캐시 방식(Least Recently Used)을 사용하여 캐시할 SQL 명령
           수입니다. 기본값은 0입니다. 값이 0이면 명령 캐시가 사용으로
           설정되지 않습니다.

       --validationclassname
           validationmethod 값이 custom-validation인 경우 사용자 정의 검증을
           제공하는 클래스의 이름입니다. 이 클래스는
           org.glassfish.api.jdbc.ConnectionValidation 인터페이스를 구현해야
           하며 GlassFish Server에서 액세스할 수 있어야 합니다. 접속 검증
           유형이 사용자 정의 검증으로 설정된 경우 이 옵션은 필수입니다.

       --wrapjdbcobjects
           풀링 기반 구조에서 래핑된 JDBC 객체를 응용 프로그램에 제공하는지를
           지정합니다. 풀링 기반 구조에서는 래핑된 JDBC 객체를 제공함으로써
           응용 프로그램이 물리적 접속이 아닌 접속 풀의 논리적 접속을
           사용하도록 하여 접속 누출을 방지합니다. 논리적 접속을 사용하면
           접속이 닫혔을 때 해당 접속이 접속 풀로 반환됩니다. 그러나 래핑된
           JDBC 객체의 프로비전은 응용 프로그램의 성능을 저하시킬 수 있습니다.
           기본값은 true입니다.

           풀링 기반 구조에서는 JDBC API의 다음 인터페이스 구현을 위해 래핑된
           객체를 제공합니다.

           ·   java.sql.CallableStatement

           ·   java.sql.DatabaseMetaData

           ·   java.sql.PreparedStatement

           ·   java.sql.ResultSet

           ·   java.sql.Statement

           가능한 --wrapjdbcobjects 값은 다음과 같습니다.

           false
               풀링 기반 구조가 래핑된 JDBC 객체를 응용 프로그램에 제공하지
               않

           true
               풀링 기반 구조에서 래핑된 JDBC 객체를 응용 프로그램에
               제공합니다.

       --description
           지정된 JDBC 접속 풀에 대한 세부 정보를 제공하는 텍스트.

       --property
           풀을 구성하기 위한 선택적 속성 이름/값 쌍입니다. 다음 속성을 사용할
           수 있습니다.

           user
               데이터베이스 접속에 사용되는 사용자 이름을 지정합니다.

           password
               데이터베이스 접속에 사용되는 비밀번호를 지정합니다.

           databaseName
               이 접속 풀의 데이터베이스를 지정합니다.

           serverName
               이 접속 풀의 데이터베이스 서버를 지정합니다.

           port
               데이터베이스 서버에서 요청을 수신하는 포트를 지정합니다.

           networkProtocol
               통신 프로토콜을 지정합니다.

           roleName
               초기 SQL 롤 이름을 지정합니다.

           datasourceName
               기본 XADataSource 또는 접속 풀링이 수행된 경우
               ConnectionPoolDataSource를 지정합니다.

           description
               텍스트 설명을 지정합니다.

           url
               이 접속 풀의 URL을 지정합니다. 표준 속성은 아니지만 일반적으로
               사용됩니다.

            dynamic-reconfiguration-wait-timeout-in-seconds
               풀을 사용 중인 응용 프로그램에 대해 접속 풀의 동적 재구성을
               투명하게 진행하는 데 사용됩니다. 그러면 풀에 대한 속성이나 속성
               변경 사항을 적용하기 위해 응용 프로그램을 다시 사용으로 설정할
               필요가 없습니다. 접속 요청이 시간 초과 기간 내에 있는 한 기존
               풀 구성을 사용하여 실행 중인 트랜잭션의 접속 요청을 완료하여
               트랜잭션을 완료할 수 있습니다. 새 접속 요청은 풀 재구성을
               완료하는 동안 대기하고 수정된 풀 구성을 사용하여 접속을
               가져옵니다.

           LazyConnectionEnlistment
               더 이상 사용되지 않습니다. 동일한 속성을 사용합니다. 기본값은
               false입니다.

           LazyConnectionAssociation
               더 이상 사용되지 않습니다. 동일한 속성을 사용합니다. 기본값은
               false입니다.

           AssociateWithThread
               더 이상 사용되지 않습니다. 동일한 속성을 사용합니다. 기본값은
               false입니다.

           MatchConnections
               더 이상 사용되지 않습니다. 동일한 속성을 사용합니다. 기본값은
               true입니다.

           Prefer-Validate-Over-Recreate
               풀 크기 조정기가 유휴 접속을 삭제하고 접속을 재생성하기 전에
               해당 유휴 접속을 검증해야 하는지를 지정합니다. 기본값은
               true입니다.

           time-to-keep-queries-in-minutes
               자주 사용되는 질의를 계산하는 데 사용하기 위해 캐시되는 시간(분
               단위)을 지정합니다. JDBC 접속 풀에 대해 SQL 추적 및 모니터링이
               사용으로 설정되는 경우 적용됩니다. 기본값은 5분입니다.

           number-of-top-queries-to-report
               가장 자주 사용되는 질의를 보고할 때 나열할 질의 수를
               지정합니다. JDBC 접속 풀에 대해 SQL 추적 및 모니터링이 사용으로
               설정되는 경우 적용됩니다. 기본값은 질의 10개입니다.

               참고
               ┌────────────────────────────────────────┐
               │주 속성 이름 또는 속성값에 콜론이 있는  │
               │경우 백슬래시(\)를 사용하여 이름 또는   │
               │값에 있는 콜론을 이스케이프 처리해야    │
               │합니다. 다른 문자에도 이스케이프 문자가 │
               │필요할 수 있습니다. 명령 옵션의         │
               │이스케이프 문자에 대한 자세한 내용은    │
               │asadmin(1M) 도움말 페이지를             │
               │참조하십시오.                           │
               └────────────────────────────────────────┘

       --target
           이 옵션을 지정하지 마십시오. 이 옵션은 이전 릴리스와의 호환성을
           위해 유지됩니다. 이 옵션을 지정하면 구문 오류가 발생하지 않습니다.
           대신, 하위 명령이 성공적으로 실행되어 이 옵션을 무시한다는 경고
           메시지를 표시합니다.

피연산자
       connectionpoolid
           생성할 JDBC 접속 풀의 이름.

예제
       예 1, JDBC 접속 풀 생성
           이 예제는 sample_derby_pool이라는 JDBC 접속 풀을 생성합니다.

               asadmin> create-jdbc-connection-pool
               --datasourceclassname org.apache.derby.jdbc.ClientDataSource
               --restype javax.sql.XADataSource
               --property portNumber=1527:password=APP:user=APP:serverName=
               localhost:databaseName=sun-appserv-samples:connectionAttributes=\;
               create\\=true sample_derby_pool
               Command create-jdbc-connection-pool executed successfully
           세미콜론(;)을 구별하기 위해 --property 옵션에는 이스케이프 문자
           백슬래시(\)가 사용됩니다. 등호(=)를 구별하기 위해 두 개의
           백슬래시(\\)가 사용됩니다.

종료 상태
       0
           하위 명령이 성공적으로 실행됨

       1
           하위 명령 실행 중 오류 발생

참조
       delete-jdbc-connection-pool(1), list-jdbc-connection-pools(1)

       asadmin(1M)

                                2011년 2월 10일          CREATE-JDBC-CONNEC(1)
