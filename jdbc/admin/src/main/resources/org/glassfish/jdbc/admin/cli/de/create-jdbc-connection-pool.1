CREATE-JDBC-CONNEC(1)                                    CREATE-JDBC-CONNEC(1)

NAME
       create-jdbc-connection-pool - Registriert einen JDBC-Connection Pool

ZUSAMMENFASSUNG
           create-jdbc-connection-pool [--help]
           [--datasourceclassname=datasourceclassname]
           [--restype=resourcetype]
           [--steadypoolsize=poolsize]
           [--maxpoolsize=maxpoolsize]
           [--maxwait=maxwaittime]
           [--poolresize=poolresizelimit]
           [--idletimeout=idletimeout]
           [--initsql=initsqlstring]
           [--isolationlevel=isolationlevel]
           [--isisolationguaranteed={true|false}]
           [--isconnectvalidatereq={false|true}]
           [--validationmethod=validationmethod]
           [--validationtable=validationtable]
           [--failconnection={false|true}]
           [--allownoncomponentcallers={false|true}]
           [--nontransactionalconnections={false|true}]
           [--validateatmostonceperiod=validationinterval]
           [--leaktimeout=leaktimeout]
           [--leakreclaim={false|true}]
           [--statementleaktimeout=satementleaktimeout]
           [--statmentleakreclaim={false|true}]
           [--creationretryattempts=creationretryattempts]
           [--creationretryinterval=creationretryinterval]
           [--sqltracelisteners=sqltracelisteners[,sqltracelisteners]]
           [--statementtimeout=statementtimeout]
           [--lazyconnectionenlistment={false|true}]
           [--lazyconnectionassociation={false|true}]
           [--associatewiththread={false|true}]
           [--driverclassname=jdbcdriverclassname]
           [--matchconnections={false|true}]
           [--maxconnectionusagecount=maxconnectionusagecount]
           [--ping={false|true}]
           [--pooling={false|true}]
           [--statementcachesize=statementcachesize]
           [--validationclassname=validationclassname]
           [--wrapjdbcobjects={false|true}]
           [--description description]
           [--property name=value)[:name=value]*]
           [--target=target]
           connectionpoolid

BESCHREIBUNG
       Der Unterbefehl create-jdbc-connection-pool registriert einen neuen
       Connection Pool für die Java Database Connectivity-("JDBC"-)Software
       mit dem angegebenen JDBC-Connection Pool-Namen.

       Ein JDBC-Connection Pool mit Authentifizierung kann entweder mit der
       Option --property erstellt werden, um Benutzer, Kennwort oder andere
       Verbindungsinformationen anzugeben, oder indem die
       Verbindungsinformationen in der XML-Deskriptordatei angegeben werden.

       Dieser Unterbefehl wird nur im Remote-Modus unterstützt.

OPTIONEN
       --help, -?
           Zeigt den Hilfetext für den Unterbefehl an.

       --datasourceclassname
           Der Name des vom Hersteller bereitgestellten
           JDBC-Datenquellen-Ressourcenmanagers. Eine Datenquellenklasse, die
           XA- oder globale Transaktionen unterstützt, implementiert die
            javax.sql.XADatasource-Schnittstelle. Nicht-XA-Datenquellen und
           Datenquellen, die ausschließlich lokale Transaktionen unterstützen,
           implementieren die javax.sql.Datasource-Schnittstelle.

       --restype, Erforderlich, wenn eine Datenquellenklasse zwei oder mehr
       Schnittstellen (javax.sql.DataSource, javax.sql.XADataSource oder
       javax.sql.ConnectionPoolDataSource) implementiert oder wenn ein
       Treiberklassenname angegeben werden muss.

           ·   Wenn --restype java.sql.Driver entspricht, ist die Option
               --driverclassname erforderlich.

           ·   Wenn --restype javax.sql.DataSource, javax.sql.XADataSource
               oder javax.sql.ConnectionPoolDataSource entspricht, ist die
               Option --datasourceclassname erforderlich.

           ·   Wenn --restype nicht angegeben ist, muss entweder die Option
               --driverclassname oder die Option --datasourceclassname
               angegeben werden, aber nicht beide Optionen.

       --steadypoolsize
           Die minimale und ursprüngliche Anzahl der Verbindungen, die im Pool
           beibehalten werden. Der Standardwert ist 8.

       --maxpoolsize
           Die maximale Anzahl an Verbindungen, die erstellt werden können.
           Der Standardwert lautet 32.

       --maxwait
           Die Dauer in Millisekunden, die ein aufrufendes Programm wartet,
           bevor ein Verbindungs-Timeout gesendet wird. Der Standardwert ist
           60000 (60 Sekunden). Der Wert 0 zwingt das aufrufende Programm,
           unbegrenzt zu warten.

       --poolresize
           Anzahl zu trennender Verbindungen, wenn der
           idle-timeout-in-seconds-Timer abläuft. Dies ist die Menge, um die
           der Pool die Anzahl der Verbindungen nach oben oder unten skaliert.
           Skalierung nach oben: Wenn der Pool keine freien Verbindungen
           enthält, wird der Pool um diese Menge nach oben skaliert.
           Skalierung nach unten: Alle ungültigen Verbindungen und
           Leerlaufverbindungen werden entfernt, was zuweilen dazu führt, dass
           mehr Verbindungen entfernt werden, als durch diesen Wert angegeben
           ist. Verbindungen, die sich über das Timeout hinaus im Leerlauf
           befinden, kommen für die Entfernung in Frage. Steadypoolsize wird
           gewährleistet. Die möglichen Werte reichen von 0 bis MAX_INTEGER.
           Der Standardwert ist 2.

       --idletimeout
           Die maximale Zeit in Sekunden, die sich eine Verbindung im Pool im
           Leerlauf befinden kann. Nach dieser Zeit kann die Implementierung
           diese Verbindung schließen. Dieser Timeout-Wert muss kürzer
           gehalten werden als der Timeout-Wert auf der Datenbankserverseite,
           um die Anhäufung unbrauchbarer Verbindungen in der Anwendung zu
           vermeiden. Der Standardwert beträgt 300.

       --initsql
           Eine SQL-Zeichenfolge, die ausgeführt wird, wenn eine Verbindung
           vom Pool erstellt wird. Wenn eine vorhandene Verbindung erneut
           verwendet wird, wird diese Zeichenfolge nicht ausgeführt.
           Verbindungen, die sich länger als das Timeout im Leerlauf befinden,
           kommen für die Entfernung in Frage. Für diese Option gibt es keinen
           Standardwert.

       --isolationlevel
           Die Transaktionsisolationsebene (transaction-isolation-level) bei
           den gepoolten Datenbankverbindungen. Für diese Option gibt es
           keinen Standardwert. Wenn diese Option nicht angegeben ist,
           arbeitet der Pool mit der vom JDBC-Treiber bereitgestellten
           Standardisolationsebene. Sie können eine gewünschte Isolationsebene
           mit einer der Standardebenen für die Transaktionsisolation
           festlegen: read-uncommitted, read-committed, repeatable-read,
           serializable. Anwendungen, die die Isolationsebene bei einer
           gepoolten Verbindung programmgesteuert ändern, riskieren eine
           Beschädigung des Pools. Die kann zu Programmfehlern führen.

       --isisolationguaranteed
           Dies gilt nur dann, wenn eine bestimmte Isolationsebene für
           transaction-isolation-level angegeben ist. Der Standardwert ist
           "true".

           Diese Option stellt sicher, dass jedes Mal, wenn eine Verbindung
           vom Pool abgerufen wird, die Isolationsebene auf den gewünschten
           Wert gesetzt wird. Dies kann bei einigen JDBC-Treibern gewisse
           Auswirkungen auf die Performance haben. Administratoren können
           diesen Wert auf "false" setzen, wenn die Anwendung --isolationlevel
           nicht ändert, bevor die Verbindung zurückgegeben wird.

       --isconnectvalidatereq
           Wenn dieser Wert auf "true" gesetzt ist, werden Verbindungen
           validiert oder überprüft, um festzustellen, ob sie verwendbar sind,
           bevor sie an die Anwendung ausgegeben werden. Der Standardwert
           lautet "false".

       --validationmethod
           Auszuführender Validierungstyp, wenn
           is-connection-validation-required auf "true" gesetzt ist. Gültige
           Werte sind auto-commit, meta-data, table oder custom-validation.
           Der Standardwert ist table.

       --validationtable
           Der Name der Validierungstabelle, mit der eine Abfrage zur
           Validierung einer Verbindung ausgeführt wird. Wenn
           is-connection-validation-required auf "true" und
           "connection-validation-type" auf "table" gesetzt wird, ist diese
           Option obligatorisch.

       --failconnection
           Falls⋅dieser Wert auf "true" gesetzt ist, müssen alle Verbindungen
           im Pool geschlossen sein, wenn eine einzelne Validierungsprüfung
           nicht erfolgreich ist. Der Standardwert lautet "false". Es wird ein
           einziger Versuch unternommen, nicht erfolgreiche Verbindungen
           wiederherzustellen.

       --allownoncomponentcallers
           Ein Pool, bei dem diese Eigenschaft auf "true" gesetzt ist, kann
           von Nicht-Java EE-Komponenten verwendet werden, d.h. von anderen
           Komponenten als EJBs oder Servlets. Die zurückgegebene Verbindung
           wird automatisch mit dem vom Transaktionsmanager abgerufenen
           Transaktionskontext in Anspruch genommen. Verbindungen, die durch
           Aufrufe von Nicht-Komponenten abgerufen werden, werden am Ende
           einer Transaktion nicht automatisch vom Container bereinigt. Diese
           Verbindungen müssen vom aufrufenden Programm explizit geschlossen
           werden.

       --nontransactionalconnections
           Ein Pool, bei dem diese Eigenschaft auf "true" gesetzt ist, gibt
           Verbindungen zurück, die nicht auf Transaktionen ausgelegt sind.
           Diese Verbindung wird nicht automatisch mit dem Transaktionsmanager
           in Anspruch genommen.

       --validateatmostonceperiod
           Gibt das Zeitintervall (in Sekunden) zwischen aufeinander folgenden
           Anforderungen an, die dazu dienen, eine Verbindung maximal ein Mal
           zu validieren. Wenn Sie dieses Attribut auf einen angemessenen Wert
           setzen, wird die Anzahl der von einer Verbindung ausgegebenen
           Validierungsanforderungen minimiert. Der Standardwert lautet 0,
           d.h. das Attribut ist nicht aktiviert.

       --leaktimeout
           Gibt die Dauer (in Sekunden) an, über die Verbindungslecks in einem
           Connection Pool verfolgt werden sollen. Wenn eine Verbindung von
           der Anwendung nicht innerhalb des angegebenen Zeitraums an den Pool
           zurückgegeben wird, wird diese als potenzielles Leck betrachtet,
           und das Stack Trace des aufrufenden Programms wird protokolliert.
           Diese Option dient nur zur Erkennung, ob ein Verbindungsleck
           vorhanden ist. Die Verbindung kann nur dann zurückgefordert werden,
           wenn connection-leak-reclaim auf "true" gesetzt ist.

           Wenn das Tracing von Verbindungslecks aktiviert ist, können Sie die
           Administrationskonsole verwenden, um den JDBC-Connection Pool zu
           überwachen und Statistiken zur Anzahl der Verbindungslecks
           abzurufen. Der Standardwert ist 0. Bei dieser Einstellung ist das
           Tracing von Verbindungslecks deaktiviert.

       --leakreclaim
           Gibt an, ob Leckverbindungen im Connection Pool wiederhergestellt
           werden, nachdem das Tracing von Verbindungslecks abgeschlossen ist.
           Mögliche Werte:

           false
               Leckverbindungen werden nicht im Connection Pool
               wiederhergestellt (Standard).

           true
               Leckverbindungen werden im Connection Pool wiederhergestellt.

       --statementleaktimeout
           Gibt die Dauer (in Sekunden) an, nach deren Ablauf Anweisungen
           ermittelt werden sollen, die nicht von einer Anwendung geschlossen
           wurden. Anwendungen können die Cursor ausgehen, wenn
           Anweisungsobjekte nicht ordnungsgemäß geschlossen werden. Diese
           Option dient nur zur Erkennung, ob ein Anweisungsleck vorhanden
           ist. Die Anweisung kann nur dann zurückgefordert werden, wenn
           statement-leak-reclaim auf "true" gesetzt ist. Die Leckanweisung
           wird geschlossen, wenn sie zurückgefordert wird.

           Das Stack Trace des aufrufenden Programms, das die Anweisung
           erstellt, wird protokolliert, wenn ein Anweisungsleck erkannt wird.
           Wenn das Tracing von Anweisungslecks aktiviert ist, können Sie die
           Administrationskonsole verwenden, um den JDBC-Connection Pool zu
           überwachen und Statistiken zur Anzahl der Verbindungslecks
           abzurufen. Der Standardwert ist 0. Bei dieser Einstellung ist das
           Tracing von Anweisungslecks deaktiviert.

           Die folgenden Beschränkungen gelten für den Timeout-Wert für
           Anweisungslecks:

           ·   Der Wert muss kleiner als der Wert sein, der für leak-timeout
               der Verbindung festgelegt ist.

           ·   Der Wert muss größer als der Wert sein, der für
               statement-timeout festgelegt ist.

       --statementleakreclaim
           Gibt an, ob Leckanweisungen nach dem Anweisungsleck zurückgefordert
           werden. Mögliche Werte:

           false
               Leckanweisungen werden nicht zurückgefordert (Standard).

           true
               Leckanweisungen werden zurückgefordert.

       --creationretryattempts
           Gibt die maximale Anzahl der Versuche an, die GlassFish Server
           unternimmt, um eine Verbindung herzustellen, wenn der erste Versuch
           nicht erfolgreich ist. Der Standardwert ist 0, was bedeutet, dass
           GlassFish Server nicht erneut versucht, eine Verbindung
           herzustellen.

       --creationretryinterval
           Gibt das Intervall (in Sekunden) zwischen aufeinander folgenden
           Versuchen zur Herstellung einer Verbindung an.

           Wenn --creationretryattempts 0 ist, wird die Option
           --creationretryinterval ignoriert. Der Standardwert ist 10.

       --sqltracelisteners
           Eine Liste mit einem oder mehreren benutzerdefinierten Modulen zum
           benutzerdefinierten Logging von Datenbankaktivitäten. Jedes Modul
           muss die öffentliche Schnittstelle
           org.glassfish.api.jdbc.SQLTraceListener implementieren. Wenn der
           richtige Wert festgelegt wurde, werden von Anwendungen ausgeführte
           SQL-Anwendungen verfolgt. Für diese Option gibt es keinen
           Standardwert.

       --statementtimeout
           Gibt die Zeitspanne in Sekunden an, nach der eine nicht
           abgeschlossene Abfrage beendet wird.

           Eine Abfrage, die über einen langen Zeitraum nicht abgeschlossen
           werden kann, kann dazu führen, dass die Anwendung, die die Abfrage
           weitergeleitet hat, nicht reagiert. Um dies zu verhindern,
           verwenden Sie diese Option, um ein Timeout für alle Anweisungen
           festzulegen, die aus dem erstellten Connection Pool erstellt
           werden. Beim Erstellen einer Anweisung legt GlassFish Server die
           angegebene Zeitspanne für die Eigenschaft QueryTimeout für die
           Anweisung fest. Der Standardwert ist -1, was bedeutet, dass nicht
           abgeschlossene Abfragen nie beendet werden.

       --lazyconnectionenlistment
           Gibt an, ob eine Ressource für eine Transaktion nur dann in
           Anspruch genommen wird, wenn die Ressource tatsächlich von einer
           Methode verwendet wird. Mögliche Werte:

           false
               Ressourcen für eine Transaktion werden immer in Anspruch
               genommen und nicht nur dann, wenn die Ressource tatsächlich von
               einer Methode verwendet wird (Standard).

           true
               Ressourcen für eine Transaktion werden nur dann in Anspruch
               genommen, wenn die Ressource tatsächlich von einer Methode
               verwendet wird.

       --lazyconnectionassociation
           Gibt an, ob eine physische Verbindung nur dann mit der logischen
           Verbindung verknüpft werden soll, wenn die physische Verbindung
           verwendet wird. Die Verknüpfung wird dann aufgehoben, sobald die
           Transaktion abgeschlossen ist. Durch eine solche Verknüpfung und
           deren Aufhebung können physische Verbindungen wiederverwendet
           werden. Mögliche Werte:

           false
               Eine physische Verbindung wird mit der logischen Verbindung
               verknüpft, bevor die physische Verbindung verwendet wird. Die
               Verknüpfung wird nicht aufgehoben, wenn die Transaktion
               abgeschlossen ist (Standard).

           true
               Eine physische Verbindung wird nur dann mit der logischen
               Verbindung verknüpft, wenn die physische Verbindung verwendet
               wird. Die Verknüpfung wird aufgehoben, sobald die Transaktion
               abgeschlossen ist. Die Option --lazyconnectionenlistment muss
               ebenfalls auf true gesetzt sein.

       --associatewiththread
           Gibt an, ob eine Verbindung mit dem Thread verknüpft ist, damit der
           Thread die Verbindung wiederverwenden kann. Wenn keine Verbindung
           mit dem Thread verknüpft ist, muss der Thread immer dann eine
           Verbindung aus dem Pool abrufen, wenn er eine Verbindung benötigt.
           Mögliche Werte:

           false
               Es wird keine Verbindung mit dem Thread verknüpft (Standard).

           true
               Es wird eine Verbindung mit dem Thread verknüpft.

       --driverclassname
           Der Name der vom Hersteller bereitgestellten JDBC-Treiberklasse.
           Dieser Treiber muss die Schnittstelle java.sql.Driver
           implementieren.

       --matchconnections
           Gibt an, ob eine Verbindung, die aus dem Pool ausgewählt wird,
           durch den Ressourcenadapter abgeglichen werden soll. Wenn alle
           Verbindungen im Pool homogen sind, muss eine aus dem Pool
           abgerufene Verbindung nicht vom Ressourcenadapter abgeglichen
           werden. Daher kann diese Option auf "false" gesetzt werden.
           Mögliche Werte:

           false
               Eine Verbindung soll nicht durch den Ressourcenadapter
               abgeglichen werden (Standard).

           true
               Eine Verbindung soll durch den Ressourcenadapter abgeglichen
               werden.

       --maxconnectionusagecount
           Gibt die maximale Anzahl möglicher Wiederverwendungen einer
           Verbindung an. Wenn dieser Grenzwert erreicht ist, wird die
           Verbindung geschlossen. Indem Sie die maximale Anzahl der
           Wiederverwendungen einer Verbindung beschränken, können Sie
           Anweisungslecks vermeiden.

           Der Standardwert ist 0, was bedeutet, dass die Anzahl möglicher
           Wiederverwendungen einer Verbindung nicht begrenzt ist.

       --ping
           Gibt an, ob während der Erstellung oder Neukonfiguration ein
           Pingsignal an den Pool gesendet wird, um bei falschen
           Attributwerten eine Warnmeldung anzuzeigen. Der Standardwert lautet
           "false".

       --pooling
           Gibt an, ob das Connection Pooling für den Pool aktiviert ist. Der
           Standardwert ist "true".

       --statementcachesize
           Die Anzahl der SQL-Anweisungen, die mit dem standardmäßigen
           Caching-Mechanismus (Least Recently Used, Zuletzt nicht verwendet)
           gecacht werden sollen. Der Standardwert ist 0, was bedeutet, dass
           das Anweisungs-Caching nicht aktiviert ist.

       --validationclassname
           Der Name der Klasse für die benutzerdefinierte Validierung, wenn
           der Wert von validationmethod auf custom-validation gesetzt ist.
           Diese Klasse muss die Schnittstelle
           org.glassfish.api.jdbc.ConnectionValidation implementieren und für
           GlassFish Server zugänglich sein. Diese Option ist obligatorisch,
           wenn die benutzerdefinierte Validierung für den
           Verbindungsvalidierungstyp festgelegt wurde.

       --wrapjdbcobjects
           Gibt an, ob die Pooling-Infrastruktur gewrappte JDBC-Objekte für
           Anwendungen bereitstellt. Durch die Bereitstellung gewrappter
           JDBC-Objekte verhindert die Pooling-Infrastruktur Verbindungslecks,
           indem sichergestellt wird, dass Anwendungen logische Verbindungen
           aus dem Connection Pool verwenden und keine physischen
           Verbindungen. Durch die Verwendung von logischen Verbindungen wird
           sichergestellt, dass die Verbindungen an den Connection Pool
           zurückgegeben werden, sobald sie geschlossen sind. Allerdings kann
           die Bereitstellung von gewrappten JDBC-Objekten die Performance der
           Anwendungen beeinträchtigen. Der Standardwert ist "true".

           Die Pooling-Infrastruktur stellt gewrappte Objekte für
           Implementierungen der folgenden Schnittstellen in der JDBC-API
           bereit:

           ·   java.sql.CallableStatement

           ·   java.sql.DatabaseMetaData

           ·   java.sql.PreparedStatement

           ·   java.sql.ResultSet

           ·   java.sql.Statement

           Mögliche Werte von --wrapjdbcobjects:

           false
               Die Pooling-Infrastruktur stellt keine gewrappten JDBC-Objekte
               für Anwendungen bereit. (Standard).

           true
               Die Pooling-Infrastruktur stellt gewrappte JDBC-Objekte für
               Anwendungen bereit.

       --description
           Text, der Details zum angegebenen JDBC-Connection Pool enthält.

       --property
           Optionale Name/Wert-Paare für Attribute zum Konfigurieren des
           Pools. Folgende Eigenschaften stehen zur Verfügung:

           user
               Gibt den Benutzernamen für die Verbindung mit der Datenbank an.

           password
               Gibt das Kennwort für die Verbindung mit der Datenbank an.

           databaseName
               Gibt die Datenbank für diesen Connection Pool an.

           serverName
               Gibt den Datenbankserver für diesen Connection Pool an.

           port
               Gibt den Port an, auf dem der Datenbankserver auf Anforderungen
               horcht.

           networkProtocol
               Gibt das Kommunikationsprotokoll an.

           roleName
               Gibt den ursprünglichen SQL-Rollennamen an.

           datasourceName
               Gibt eine zugrunde liegende XADataSource oder
               ConnectionPoolDataSource an, wenn Connection Pooling ausgeführt
               wird.

           description
               Gibt eine Textbeschreibung an.

           url
               Gibt die URL für diesen Connection Pool an. Obwohl dies keine
               Standardeigenschaft ist, wird sie häufig verwendet.

           dynamic-reconfiguration-wait-timeout-in-seconds
               Wird verwendet, um die dynamische Neukonfiguration des
               Connection Pools transparent für die Anwendungen zu aktivieren,
               die den Pool verwenden, sodass Anwendungen nicht neu aktiviert
               werden müssen, damit die Attribut- oder Eigenschaftsänderungen
               am Pool in Kraft treten. Jegliche Verbindungsanforderungen von
               In-Flight-Transaktionen können mit der alten Poolkonfiguration
               abgeschlossen werden, solange die Verbindungsanforderungen
               innerhalb des Timeouts liegen, um die Transaktion
               abzuschließen. Neue Verbindungsanforderungen warten, bis die
               Poolkonfiguration abgeschlossen wurde, und Verbindungen werden
               mit der geänderten Poolkonfiguration abgerufen.

           LazyConnectionEnlistment
               Veraltet. Verwenden Sie das äquivalente Attribut. Der
               Standardwert lautet "false".

           LazyConnectionAssociation
               Veraltet. Verwenden Sie das äquivalente Attribut. Der
               Standardwert lautet "false".

           AssociateWithThread
               Veraltet. Verwenden Sie das äquivalente Attribut. Der
               Standardwert lautet "false".

           MatchConnections
               Veraltet. Verwenden Sie das äquivalente Attribut. Der
               Standardwert ist "true".

           Prefer-Validate-Over-Recreate
               Gibt an, ob Leerlaufverbindungen von einem Poolskalierer
               validiert werden sollen, bevor diese endgültig gelöscht und neu
               erstellt werden. Der Standardwert ist "true".

           time-to-keep-queries-in-minutes
               Gibt die Anzahl an Minuten an, die zur Berechnung häufiger
               Abfragen gecacht werden. Tritt in Kraft, wenn SQL-Tracing und
               -Überwachung für den JDBC-Connection Pool aktiviert sind. Der
               Standardwert beträgt 5 Minuten.

           number-of-top-queries-to-report
               Gibt die Anzahl an Abfragen an, die aufgelistet werden, wenn
               die am häufigsten verwendeten Abfragen gemeldet werden. Tritt
               in Kraft, wenn SQL-Tracing und -Überwachung für den
               JDBC-Connection Pool aktiviert sind. Der Standardwert beträgt
               10 Abfragen.

               Anmerkung
               ┌────────────────────────────────────────┐
               │Hinweis Wenn ein Attributname oder      │
               │Attributwert einen Doppelpunkt enthält, │
               │muss der umgekehrte Schrägstrich (\)    │
               │verwendet werden, um den Doppelpunkt im │
               │Namen oder Wert zu escapen. Andere      │
               │Zeichen können ebenfalls ein            │
               │Escape-Zeichen erfordern. Weitere       │
               │Informationen zu Escape-Zeichen in      │
               │Befehlsoptionen finden Sie in der       │
               │asadmin(1M)-Manpage.                    │
               └────────────────────────────────────────┘

       --target
           Geben Sie diese Option nicht an. Diese Option ist für die
           Kompatibilität mit früheren Releases vorbehalten. Wenn Sie diese
           Option angeben, tritt kein Syntaxfehler auf. Stattdessen wird der
           Unterbefehl erfolgreich ausgeführt, und es wird eine Warnmeldung
           angezeigt, dass die Option ignoriert wird.

OPERANDEN
       connectionpoolid
           Der Name des zu erstellenden JDBC-Connection Pools.

BEISPIELE
       Beispiel 1, JDBC-Connection Pools erstellen
           In diesem Beispiel wird ein JDBC-Connection Pool namens
           sample_derby_pool erstellt.

               asadmin> create-jdbc-connection-pool
               --datasourceclassname org.apache.derby.jdbc.ClientDataSource
               --restype javax.sql.XADataSource
               --property portNumber=1527:password=APP:user=APP:serverName=
               localhost:databaseName=sun-appserv-samples:connectionAttributes=\;
               create\\=true sample_derby_pool
               Command create-jdbc-connection-pool executed successfully
           Der als Escape-Zeichen dienende umgekehrte Schrägstrich (\) wird in
           der Option --property verwendet, um das Semikolon ( ;) zu
           unterscheiden. Zwei umgekehrte Schrägstriche (\\) werden verwendet,
           um das Gleichheitszeichen (=) zu unterscheiden.

BEENDIGUNGSSTATUS
       0
           Unterbefehl erfolgreich ausgeführt

       1
           Fehler beim Ausführen des Unterbefehls

SIEHE AUCH
       delete-jdbc-connection-pool(1), list-jdbc-connection-pools(1)

       asadmin(1M)

                               10. Februar 2011          CREATE-JDBC-CONNEC(1)
