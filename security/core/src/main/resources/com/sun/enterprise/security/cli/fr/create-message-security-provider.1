CREATE-MESSAGE-SEC(1)                                    CREATE-MESSAGE-SEC(1)

NOM
       create-message-security-provider - permet aux administrateurs de créer
       un fournisseur de sécurité des messages qui indique comment les
       messages SOAP seront sécurisés.

SYNOPSIS
           create-message-security-provider [--help]
           [--target target]
           --classname provider_class
           [--layer message_layer] [--providertype provider_type]
           [--requestauthsource request_auth_source ]
           [--requestauthrecipient request_auth_recipient ]
           [--responseauthsource response_auth_source ]
           [--responseauthrecipient response_auth_recipient ]
           [--isdefaultprovider] [--property name=value[:name=value]*]
           provider_name

DESCRIPTION
       La sous-commande create-message-security-provider permet à
       l'administrateur de créer un fournisseur de sécurité des messages pour
       le service de sécurité, qui indique comment les messages SOAP seront
       sécurisés.

       Cette commande est prise en charge en mode distant uniquement.

OPTIONS
       Si une option possède un nom d'option court, l'option courte précède le
       nom d'option long. Les options courtes contiennent un tiret alors que
       les options longues en contiennent deux.

       --help, -?
           Affiche le texte d'aide de la sous-commande.

       --target
           Indique la cible pour laquelle vous créez le fournisseur de
           sécurité des messages. Les valeurs suivantes sont valides :

           server
               Crée le fournisseur pour l'option server d'instance de serveur
               par défaut et constitue la valeur par défaut.

           domain
               Crée le fournisseur pour le domaine.

           cluster_name
               Crée le fourisseur pour chaque instance de serveur du cluster.

           instance_name
               Crée le fournisseur pour une instance de serveur donnée.

       --classname
           Définit la classe d'implémentation Java du fournisseur. Les
           fournisseurs d'authentification client doivent implémenter
           l'interface com.sun.enterprise. security.jauth.ClientAuthModule.
           Les fournisseurs côté serveur doivent implémenter l'interface
           com.sun.enterprise.security jauth.ServerAuthModule. Un fournisseur
           peut implémenter les deux interfaces, mais il doit obligatoirement
           implémenter l'interface correspondant à son type.

       --layer
           Entité message-layer utilisée pour définir la valeur de l'attribut
           auth-layer des éléments message-security-config. La valeur par
           défaut est HttpServlet. L'autre valeur possible est SOAP.

       --providertype
           Détermine si le fournisseur doit être utilisé en tant que
           fournisseur d'authentification client, fournisseur
           d'authentification de serveur ou les deux. Les options valides pour
           cette propriété incluent client, server et client-server.

       --requestauthsource
           L'attribut auth-source définit les exigences pour
           l'authentification d'expéditeur message-layer (par exemple, nom
           utilisateur et mot de passe) ou l'authentification de contenu (par
           exemple, signature numérique) à appliquer aux messages de demande.
           Les valeurs possibles sont sender ou content. Si cet argument n'est
           pas spécifié, l'authentification source de la demande n'est pas
           requise.

       --requestauthrecipient
           L'attribut auth-recipient définit les exigences pour
           l'authentification message-layer du destinataire du message vers
           son expéditeur (par exemple, par cryptage XML). Les valeurs
           possibles sont before-content ou after-content. La valeur par
           défaut est after-content.

       --responseauthsource
           L'attribut auth-source définit les exigences pour
           l'authentification d'expéditeur message-layer (par exemple, nom
           utilisateur et mot de passe) ou l'authentification de contenu (par
           exemple, signature numérique) à appliquer aux messages de réponse.
           Les valeurs possibles sont sender ou content. Si cette option n'est
           pas spécifiée, l'authentification source de la réponse n'est pas
           requise.

       --responseauthrecipient
           L'attribut auth-recipient définit les exigences pour
           l'authentification message-layer du destinataire du message de
           réponse vers son expéditeur (par exemple, par cryptage XML). Les
           valeurs possibles sont before-content ou after-content. La valeur
           par défaut est after-content.

       --isdefaultprovider
           L'attribut default-provider est utilisé pour désigner le
           fournisseur comme fournisseur par défaut (au niveau de la couche)
           des types identifiés par l'argument providertype. Aucune valeur par
           défaut n'est associée à cette option.

       --property
           Utilisez cette propriété pour transmettre au fournisseur les
           valeurs de propriété qui lui sont propres lors de son
           initialisation. Les propriétés transmises de cette manière peuvent
           inclure des alias de clé que le fournisseur va utiliser pour
           récupérer des clés dans les keystores, des signatures, des
           canonisations, des algorithmes de cryptage, etc.

           Les propriétés suivantes peuvent être définies :

           security.config
               Spécifie l'emplacement du fichier de configuration de sécurité
               des messages. Pour pointer vers un fichier de configuration du
               répertoire domain-dir/config, utilisez la propriété système
               ${com.sun.aas.instanceRoot}/config/, par exemple :
               ${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml.
               La valeur par défaut est domain-dir/config/
               wss-serverconfig-1.0.xml.

           debug
               La valeur true active le vidage des messages de débogage du
               fournisseur du serveur vers le journal du serveur. La valeur
               par défaut est false.

           dynamic.username. password
               La valeur true permet de signaler au fournisseur, au moment de
               l'exécution, de collecter le nom utilisateur et le mot de passe
               à partir de CallbackHandler pour chaque demande. Si la valeur
               est false, le nom utilisateur et le mot de passe de
               wsse:UsernameToken sont collectés une seule fois, lors de
               l'initialisation du module. Cette propriété s'applique
               uniquement à ClientAuthModule. La valeur par défaut est false.

           encryption.key.alias
               Spécifie la clé de cryptage utilisée par le fournisseur. La clé
               est identifiée par son alias de keystore. La valeur par défaut
               est s1as.

           signature.key.alias
               Spécifie la clé de signature utilisée par le fournisseur. La
               clé est identifiée par son alias de keystore. La valeur par
               défaut est s1as.

OPÉRANDES
       provider_name
           Nom du fournisseur utilisé pour référencer l'élément
           provider-config.

EXEMPLES
       Exemple 1, Création d'un fournisseur de sécurité des messages
           L'exemple suivant illustre la création d'un fournisseur de sécurité
           des messages pour un client.

               asadmin> create-message-security-provider
               --classname com.sun.enterprise.security.jauth.ClientAuthModule
               --providertype client mySecurityProvider

STATUT DE SORTIE
       0
           commande correctement exécutée

       1
           erreur lors de l'exécution de la commande

VOIR AUSSI
       delete-message-security-provider(1), list-message-security-providers(1)

       asadmin(1M)

                                 22 déc. 2010            CREATE-MESSAGE-SEC(1)
