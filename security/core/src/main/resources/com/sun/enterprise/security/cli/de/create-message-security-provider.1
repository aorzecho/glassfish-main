CREATE-MESSAGE-SEC(1)                                    CREATE-MESSAGE-SEC(1)

NAME
       create-message-security-provider - ermöglicht Administratoren, einen
       Nachrichtensicherheitsprovider zu erstellen, der angibt, wie
       SOAP-Nachrichten gesichert werden.

ÜBERSICHT
           create-message-security-provider [--help]
           [--target target]
           --classname provider_class
           [--layer message_layer] [--providertype provider_type]
           [--requestauthsource request_auth_source ]
           [--requestauthrecipient request_auth_recipient ]
           [--responseauthsource response_auth_source ]
           [--responseauthrecipient response_auth_recipient ]
           [--isdefaultprovider] [--property name=value[:name=value]*]
           provider_name

BESCHREIBUNG
       Der Unterbefehl create-message-security-provider ermöglicht dem
       Administrator, einen Nachrichtensicherheitsprovider für den
       Sicherheitsservice zu erstellen, der festlegt, wie SOAP-Nachrichten
       gesichert werden.

       Dieser Befehl wird nur im Remote-Modus unterstützt.

OPTIONEN
       Wenn eine Option einen kurzen Optionsnamen hat, geht die kurze Option
       dem langen Optionsnamen voraus. Kurze Optionen haben einen Bindestrich,
       lange Optionen haben zwei Bindestriche.

       --help, -?
           Zeigt den Hilfetext für den Unterbefehl an.

       --target
           Gibt das Ziel an, für das Sie den Nachrichtensicherheitsprovider
           erstellen. Folgende Werte sind gültig:

           server
               Erstellt den Provider für die standardmäßige Serverinstanz
               server und ist der Standardwert.

           domain
               Erstellt den Provider für die Domain.

           cluster_name
               Erstellt den Provider für jede Serverinstanz im Cluster.

           instance_name
               Erstellt den Provider für eine bestimmte Serverinstanz.

       --classname
           Definiert die Java-Implementierungsklasse des Providers.
           Clientauthentifizierungsprovider müssen die com.sun.enterprise.
           security.jauth.ClientAuthModule-Schnittstelle implementieren.
           Serverseitige Provider müssen die
           com.sun.enterprise.security.jauth.ServerAuthModule-Schnittstelle
           implementieren. Ein Provider kann beide Schnittstellen
           implementieren, es muss jedoch die für den Providertyp geeignete
           Schnittstelle implementiert werden.

       --layer
           Die Nachrichtenschicht-Entity, die verwendet wird, um den Wert des
           Attributs auth-layer der message-security-config-Elemente zu
           definieren. Der Standardwert ist HttpServlet. Eine weitere Option
           ist SOAP.

       --providertype
           Legt fest, ob der Provider als Clientauthentifzierungsprovider,
           Serverauthentifizierungsprovider oder beides verwendet werden soll.
           Gültige Optionen für diese Eigenschaft sind client, server oder
           client-server.

       --requestauthsource
           Das Attribut auth-source definiert eine Anforderung für die
           Senderauthentifizierung der Nachrichtenschicht (z.B. Benutzername
           und Kennwort) oder die Contentauthentifizierung (z.B. digitale
           Signatur), die auf die Anforderungsnachrichten angewendet werden
           soll. Mögliche Werte sind sender oder content. Wenn dieses Argument
           nicht angegeben ist, ist die Quellenauthentifizierung der
           Anforderung nicht erforderlich.

       --requestauthrecipient
           Das Attribut auth-recipient definiert eine Anforderung für die
           Nachrichtenschichtauthentifizierung des Empfängers einer Nachricht
           für den Absender (beispielsweise durch XML-Verschlüsselung).
           Mögliche Werte sind before-content oder after-content. Der
           Standardwert ist after-content.

       --responseauthsource
           Das Attribut auth-source definiert eine Anforderung für die
           Absenderauthentifizierung der Nachrichtenschicht (z.B. Benutzername
           und Kennwort) oder die Contentauthentifizierung (z.B. digitale
           Signatur), die auf Antwortnachrichten angewendet werden soll.
           Mögliche Werte sind sender oder content. Wenn diese Option nicht
           angegeben ist, ist die Quellenauthentifizierung der Antwort nicht
           erforderlich.

       --responseauthrecipient
           Das Attribut auth-recipient definiert eine Anforderung für die
           Nachrichtschichtauthentifizierung des Empfängers einer
           Antwortnachricht für den Absender (beispielsweise durch
           XML-Verschlüsselung). Mögliche Werte sind before-content oder
           after-content. Der Standardwert ist after-content.

       --isdefaultprovider
           Das Attribut default-provider wird verwendet, um den Provider als
           Standardprovider (auf der entsprechenden Ebene) des Typs oder der
           Typen zu definieren, die vom Argument providertype angegeben
           werden. Für diese Option gibt es keinen Standardwert.

       --property
           Verwenden Sie diese Eigenschaft, um providerspezifische
           Eigenschaftswerte an den Provider bei dessen Initialisierung zu
           übergeben. Eigenschaften, die auf diese Weise übergeben werden,
           können Schlüsselaliase enthalten, die vom Provider verwendet
           werden, um Schlüssel aus Keystores, Signaturen, Kanonisierungen,
           Verschlüsselungsalgorithmen usw. abzurufen.

           Folgende Eigenschaften können festgelegt werden:

           security.config
               Gibt das Verzeichnis der Datei für die
               Nachrichtensicherheitskonfiguration an. Um auf eine
               Konfigurationsdatei im Verzeichnis domain-dir/config zu zeigen,
               verwenden Sie die Systemeigenschaft
               ${com.sun.aas.instanceRoot}/config/, zum Beispiel:
               ${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml.
               Der Standard ist domain-dir/config/ wss-serverconfig-1.0.xml.

           Debug
               Bei true wird das Dumping der Serverprovider-Debug-Meldungen
               zum Serverlog aktiviert. Der Standardwert ist false.

           dynamic.username. password
               Bei true wird der Providerlaufzeit signalisiert, den
               Benutzernamen und das Kennwort vom CallbackHandler für jede
               Anforderung zu erfassen. Bei false werden Benutzername und
               Kennwort für wsse:UsernameToken(s) einmal während der
               Modulinitialisierung erfasst. Diese Eigenschaft ist nur auf ein
               ClientAuthModule anwendbar. Der Standardwert ist false.

           encryption.key.alias
               Legt den vom Provider verwendeten Verschlüsselungsschlüssel
               fest. Der Schlüssel wird durch seinen Keystore-Alias
               identifiziert. Der Standardwert ist s1as.

           signature.key.alias
               Legt den vom Provider verwendeten Signaturschlüssel fest. Der
               Schlüssel wird durch seinen Keystore-Alias identifiziert. Der
               Standardwert ist s1as.

OPERANDEN
       provider_name
           Der Name des Providers, mit dem das Element provider-config
           referenziert wird.

BEISPIELE
       Beispiel 1, Erstellen eines Nachrichtensicherheitsproviders
           Das folgende Beispiel zeigt, wie ein Nachrichtensicherheitsprovider
           für einen Client erstellt wird.

               asadmin> create-message-security-provider
               --classname com.sun.enterprise.security.jauth.ClientAuthModule
               --providertype client mySecurityProvider

BEENDIGUNGSSTATUS
       0
           Befehl erfolgreich ausgeführt

       1
           Fehler beim Ausführen des Befehls

SIEHE AUCH
       delete-message-security-provider(1), list-message-security-providers(1)

       asadmin(1M)

                                 22. Dez. 2010           CREATE-MESSAGE-SEC(1)
