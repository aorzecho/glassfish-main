CREATE-MESSAGE-SEC(1)                                    CREATE-MESSAGE-SEC(1)

名前
       create-message-security-provider -
       管理者はSOAPメッセージをセキュリティ保護する方法を指定するメッセージ・セキュリティ・プロバイダを作成できます。

概要
           create-message-security-provider [--help]
           [--target target]
           --classname provider_class
           [--layer message_layer] [--providertype provider_type]
           [--requestauthsource request_auth_source ]
           [--requestauthrecipient request_auth_recipient ]
           [--responseauthsource response_auth_source ]
           [--responseauthrecipient response_auth_recipient ]
           [--isdefaultprovider] [--property name=value[:name=value]*]
           provider_name

説明
       create-message-security-providerサブコマンドを使用すると、管理者はSOAPメッセージをセキュリティ保護する方法を指定するセキュリティ・サービスのメッセージ・セキュリティ・プロバイダを作成できます。

       このサブコマンドは、リモート・モードでのみサポートされます。

オプション
       オプションに短いオプション名がある場合は、長いオプション名よりも前に来ます。短形式のオプションにはダッシュが(-)が、長形式のオプションには二重ダッシュ(--)が付いています。

       --help, -?
           サブコマンドに関するヘルプ・テキストが表示されます。

       --target
           メッセージ・セキュリティ・プロバイダを作成するターゲットを指定します。次の値が有効です。

           server
               デフォルトのサーバー・インスタンスserverのプロバイダを作成します。これはデフォルト値です。

           domain
               ドメインにプロバイダを作成します。

           cluster_name
               クラスタ内のすべてのサーバー・インスタンスにプロバイダを作成します。

           instance_name
               特定のサーバー・インスタンスにプロバイダを作成します。

       --classname
           プロバイダのJava実装クラスを定義します。クライアント認証プロバイダは、com.sun.enterprise.security.jauth.ClientAuthModuleインタフェースを実装する必要があります。サーバー側プロバイダはcom.sun.enterprise.security
           jauth.ServerAuthModuleインタフェースを実装する必要があります。プロバイダはどちらのインタフェースも実装できますが、プロバイダ・タイプに対応したインタフェースを実装する必要があります。

       --layer
           message-security-config要素のauth-layer属性の値の定義に使用されるmessage-layerエンティティ。デフォルトはHttpServletです。もう1つのオプションはSOAPです。

       --providertype
           プロバイダがクライアント認証プロバイダ、サーバー認証プロバイダ、あるいはこの両方のいずれかとして使用されるようにします。このプロパティの有効なオプションには、client、server、またはclient-serverが含まれます。

       --requestauthsource
           auth-source属性は、ユーザー名/パスワードなどのメッセージ層送信側認証、リクエスト・メッセージに適用する必要があるデジタル署名などのコンテンツ認証、のいずれかの要件を定義します。使用可能な値はsenderまたはcontentです。この引数が指定されない場合、リクエストのソース認証は必須ではありません。

       --requestauthrecipient
           auth-recipient属性は、XML暗号化などによる、送信側に対するメッセージ受信側のメッセージ層認証の要件を定義します。使用可能な値はbefore-contentまたはafter-contentです。デフォルト値はafter-contentです。

       --responseauthsource
           auth-source属性は、ユーザー名/パスワードなどのメッセージ層送信側認証、レスポンス・メッセージに適用する必要があるデジタル署名などのコンテンツ認証、のいずれかの要件を定義します。使用可能な値はsenderまたはcontentです。このオプションが指定されない場合、レスポンスのソース認証は必須ではありません。

       --responseauthrecipient
           auth-recipient属性は、XML暗号化などによる、送信側に対するレスポンス・メッセージ受信側のメッセージ層認証の要件を定義します。使用可能な値はbefore-contentまたはafter-contentです。デフォルト値はafter-contentです。

       --isdefaultprovider
           default-provider属性は、プロバイダをprovidertype引数で指定される1つまたは複数のタイプの(該当する層での)デフォルト・プロバイダに指定する場合に使用します。このオプションにはデフォルト設定はありません。

       --property
           このプロパティを使用すると、初期化時にプロバイダにプロバイダ固有のプロパティ値を渡せます。この方法で渡されたプロパティにはキー別名が含まれる場合があり、キーストア、署名、標準化、暗号化などの各アルゴリズムから鍵を取得するためにプロバイダで使用されます。

           次のプロパティを設定できます。

           security.config
               メッセージ・セキュリティ構成ファイルの場所を指定します。domain-dir/configディレクトリにある構成ファイルを指し示すには、システム・プロパティ${com.sun.aas.instanceRoot}/config/を使用します(例:
               ${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml)。デフォルトはdomain-dir/config/
               wss-serverconfig-1.0.xmlです。

           debug
               trueの場合、サーバー・プロバイダのデバッグ・メッセージがサーバー・ログに出力されます。デフォルトはfalseです。

           dynamic.username. password
               trueの場合、リクエストごとにCallbackHandlerからユーザー名とパスワードを収集するよう、プロバイダ・ランタイムに指示します。falseの場合は、モジュールの初期化中にwsse:UsernameTokenのユーザー名とパスワードが1回のみ収集されます。このプロパティは、ClientAuthModuleのみに適用できます。デフォルトはfalseです。

           encryption.key.alias
               プロバイダで使用する暗号化鍵を指定します。鍵はキーストアの別名で識別されます。デフォルト値はs1asです。

           signature.key.alias
               プロバイダで使用される署名鍵を指定します。鍵はキーストアの別名で識別されます。デフォルト値はs1asです。

オペランド
       provider_name
           provider-config要素を参照するときに使用されるプロバイダの名前。

例
       例 1, メッセージ・セキュリティ・プロバイダの作成
           次の例は、クライアントのメッセージ・セキュリティ・プロバイダを作成する方法を示しています。

               asadmin> create-message-security-provider
               --classname com.sun.enterprise.security.jauth.ClientAuthModule
               --providertype client mySecurityProvider

終了ステータス
       0
           コマンドは正常に実行されました

       1
           コマンドの実行時にエラーが発生しました

関連項目
       delete-message-security-provider(1), list-message-security-providers(1)

       asadmin(1M)

                                2010年12月22日           CREATE-MESSAGE-SEC(1)
