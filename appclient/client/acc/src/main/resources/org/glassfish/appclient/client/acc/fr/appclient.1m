APPCLIENT(1M)                                                    APPCLIENT(1M)

NOM
       appclient - lance le conteneur de client d'application et appelle
       l'application client généralement packagée dans le fichier JAR de
       l'application

SYNOPSIS
           appclient [client_application_classfile | -client client_application_jar]
           [-mainclass main_class_name | -name display_name]
           [-xml sun-acc.xml file] [-textauth]
           [-targetserver host[:port][,host[:port]...]]
           [-user username] [-passwordfile password_file]
           [application-options]

           appclient [jvm-options]
           [-mainclass main_class_name | -name display_name]
           [-xml client_config_xml_file] [-textauth]
           [-targetserver host[:port][,host[:port]...]]
           [-user username] [-passwordfile password_file]
           class-selector [application-options]

DESCRIPTION
       Utilisez la commande appclient pour lancer le conteneur de client
       d'application et appeler une application cliente généralement incluse
       dans un fichier JAR d'application. Le fichier JAR de client
       d'application est indiqué et créé au cours du déploiement par la
       Console d'administration ou la commande asadmin deploy avec l'option
       --retrieve. Vous pouvez également extraire le fichier JAR client à
       l'aide de la commande asadmin get-client-stubs.

       Le conteneur de client d'application est un jeu de classes Java, de
       bibliothèques et d'autres fichiers nécessaires à l'exécution d'un
       programme client d'application de premier niveau sur une machine
       virtuelle pour la plate-forme Java (JVM). Le conteneur de client
       d'application communique avec le serveur par le biais du protocole
       RMI-IIOP.

       Le fichier JAR client extrait après le déploiement d'une application
       doit être transmis avec l'option -client ou -jar lors de l'exécution de
       l'utilitaire appclient. Le nom de fichier JAR client est au format
       app-nameClient.jar. Si le fichier EAR contient plusieurs clients
       d'application, vous devez utiliser l'option -mainclass ou -name pour
       indiquer le client à appeler.

       Si le client d'application est un module autonome ou le seul client
       dans un fichier EAR, le conteneur de client d'application peut
       rechercher le client sans utiliser les options -mainclass ou -name. Si
       vous indiquez une valeur -mainclass ou -name différente de la valeur
       figurant dans le client, le conteneur de client d'application lance le
       client malgré tout mais avertit que la sélection ne correspond pas aux
       informations dans le client. L'avertissement affiche également les
       valeurs réelles mainclass et name du client.

OPTIONS
       jvm-options
           Facultatif : vous pouvez définir des options JVM pour l'application
           client. Toutes les options de commande java valides sont
           disponibles à l'exception des options -client ou -jar. Les
           options JVM peuvent être mêlées à d'autres options de commande
           appclient tant que les deux types d'options apparaissent avant
           class-selector.

       client_application_classfile
           Facultatif : nom du chemin d'accès au système de fichiers du
           fichier .class de l'application client. Un nom de chemin d'accès
           relatif doit être relatif au répertoire en cours. Ce fichier de
           classe doit contenir la méthode main() devant être appelée par le
           conteneur de client d'application.

           Si vous utilisez client_application_classfile et que la classe
           dépend d'autres classes utilisateur, vous devez également définir
           la variable d'environnement CLASSPATH. Vous pouvez soit utiliser
           l'option JVM -classpath dans la commande appclient, soit définir la
           variable d'environnement CLASSPATH. Pour plus d'informations sur la
           définition d'une variable d'environnement CLASSPATH, reportez-vous
           à Setting the Class Path, version Oracle Solaris
           (http://download.oracle.com/javase/6/docs/technotes/tools/solaris/classpath.html)
           ou à Setting the Class Path, version Windows
           (http://download.oracle.com/javase/6/docs/technotes/tools/windows/classpath.html).

       -client
           Facultatif : nom et emplacement du fichier JAR client.

       -mainclass
           Facultatif : nom de classe complet de l'application client
           principale comme spécifié dans l'entrée Main-Class du fichier
           MANIFEST.MF. Utilisé pour les applications multiclient. Par défaut,
           utilise la classe spécifiée dans client jar. Par exemple,
           com.example.test.AppClient.

       -name
           Facultatif : nom d'affichage de l'application client. Utilisé pour
           les applications multiclient. Par défaut, le nom d'affichage est
           spécifié dans le fichier JAR client application-client.xml,
           identifié par l'attribut display-name.

       -xml
           Requis sauf si vous utilisez le domaine, l'instance et le nom par
           défaut (sun-acc.xml) ; identifie le nom et l'emplacement du
           fichier XML de configuration client. Si cette option n'est pas
           spécifiée, la valeur par défaut est définie sur le fichier
           sun-acc.xml dans le répertoire domain-dir/config.

       -textauth
           Facultatif : spécifie l'utilisation de l'authentification au format
           texte lorsque celle-ci est nécessaire.

       -targetserver
           Facultatif : liste séparée par des virgules des spécifications
           serveur pour les adresses ORB. Chaque spécification serveur doit
           comprendre au moins l'hôte. Une spécification serveur peut
           éventuellement inclure le port également. Si le port est omis dans
           une spécification serveur, la valeur par défaut 3700 est utilisée
           pour cet hôte.

       -user
           Facultatif : utilisateur de l'application autorisé à avoir accès à
           certains composants protégés dans l'application, comme les
           composants EJB.

       -passwordfile
           Facultatif : indique le nom, incluant le chemin d'accès complet,
           d'un fichier contenant le mot de passe pour des clients
           d'application au format suivant :

               PASSWORD=appclient-password
           Si cette option est omise, le mot de passe est indiqué de manière
           interactive dans l'invite de commande.

               Attention
               ┌────────────────────────────────────────┐
               │Attention Evitez d'indiquer un mot de   │
               │passe de manière interactive dans       │
               │l'invite de commande. Ce type de mot de │
               │passe peut être vu par les utilisateurs │
               │qui peuvent exécuter des commandes pour │
               │afficher des processus en cours         │
               │d'exécution et des commandes pour les   │
               │démarrer, telles que ps.                │
               └────────────────────────────────────────┘
           Pour des raisons de sécurité, un mot de passe spécifié en tant que
           variable d'environnement n'est pas lu par l'utilitaire appclient.

       class-selector
           Requis : vous devez spécifier la classe d'application client à
           l'aide de l'un des sélecteurs de classe suivants.

           -jar jar-file
               Nom et emplacement du fichier JAR client. Le fichier JAR client
               d'application est spécifié et créé au cours du déploiement par
               la commande asadmin deploy. S'il est indiqué, le paramètre
               -classpath n'est pas pris en compte au profit du paramètre
               Class-Path dans le fichier manifest du fichier JAR client.

           class-name
               Nom qualifié complet de la classe principale du client
               d'application. Le conteneur de client d'application appelle la
               méthode principale de cette classe pour démarrer le client. Par
               exemple, com.example.test.AppClient.

               Si vous utilisez class-name en tant que sélecteur de classe,
               vous devez également définir la variable d'environnement
               CLASSPATH. Vous pouvez soit utiliser l'option JVM -classpath
               dans la commande appclient, soit définir la variable
               d'environnement CLASSPATH. Pour plus d'informations sur la
               définition d'une variable d'environnement CLASSPATH,
               reportez-vous à Setting the Class Path, version Oracle Solaris
               (http://download.oracle.com/javase/6/docs/technotes/tools/solaris/classpath.html)
               ou à Setting the Class Path, version Windows
               (http://download.oracle.com/javase/6/docs/technotes/tools/windows/classpath.html).

       application-options
           Facultatif : vous pouvez définir des arguments d'application
           client.

EXEMPLES
       Exemple 1, A l'aide de la commande appclient

               appclient -xml sun-acc.xml -jar myclientapp.jar scott sample
           Où : sun-acc.xml est le nom du fichier XML de la configuration
           cliente, myclientapp.jar est le fichier .jar de l'application
           cliente, et scott et sample sont les arguments à transmettre à
           l'application. Si sun-acc.xml et myclientapp.jar ne se trouvent pas
           dans le répertoire en cours, vous devez indiquer les emplacements
           de chemin absolu. A défaut, les chemins relatifs seront utilisés.
           Le chemin relatif est relatif au répertoire dans lequel la commande
           est exécutée.

ATTRIBUTS
       Reportez-vous à attributes(5) pour une description des attributs
       suivants :

       ┌───────────────────────┬──────────────────────────┐
       │                       │                          │
       │       TYPE D'ATTRIBUT │        VALEUR D'ATTRIBUT │
       ├───────────────────────┼──────────────────────────┤
       │                       │                          │
       │       Stabilité de    │        Instable          │
       │       l'interface     │                          │
       └───────────────────────┴──────────────────────────┘

VOIR AUSSI
       get-client-stubs(1)

       asadmin(1M), package-appclient(1M)

                                 16 déc. 2010                    APPCLIENT(1M)
