APPCLIENT(1M)                                                    APPCLIENT(1M)

제목
       appclient - 응용 프로그램 클라이언트 컨테이너를 시작하고 일반적으로
       응용 프로그램 JAR 파일로 패키지화되어 있는 클라이언트 응용 프로그램
       호출

시놉시스
           appclient [client_application_classfile | -client client_application_jar]
           [-mainclass main_class_name | -name display_name]
           [-xml sun-acc.xml file] [-textauth]
           [-targetserver host[:port][,host[:port]...]]
           [-user username] [-passwordfile password_file]
           [application-options]

           appclient [jvm-options]
           [-mainclass main_class_name | -name display_name]
           [-xml client_config_xml_file] [-textauth]
           [-targetserver host[:port][,host[:port]...]]
           [-user username] [-passwordfile password_file]
           class-selector [application-options]

설명
       응용 프로그램 클라이언트 컨테이너를 시작하고 일반적으로 응용 프로그램
       JAR 파일로 패키지화되어 있는 클라이언트 응용 프로그램을 호출하려면
       appclient 명령을 사용합니다. 응용 프로그램 클라이언트 JAR 파일은 관리
       콘솔 또는 asadmin deploy 명령(--retrieve 옵션 포함)을 사용하여 배치하는
       동안 지정되어 생성됩니다. 또한 asadmin get-client-stubs 명령을 사용하여
       클라이언트 JAR 파일을 검색할 수 있습니다.

       응용 프로그램 클라이언트 컨테이너는 Java 플랫폼용 가상 시스템(JVM
       시스템)에서 첫번째 계층 응용 프로그램 클라이언트 프로그램을 실행하는 데
       필요한 Java 클래스, 라이브러리 및 기타 파일 세트입니다. 응용 프로그램
       클라이언트 컨테이너는 RMI-IIOP를 사용하여 서버와 통신합니다.

       appclient 유틸리티를 실행할 때 응용 프로그램을 배치한 후 검색된
       클라이언트 JAR 파일은 -client 또는 -jar 옵션을 사용하여 전달해야
       합니다. 클라이언트 JAR 파일 이름은 app-name Client.jar 형식입니다. EAR
       파일에 응용 프로그램 클라이언트가 여러 개 있을 경우 -mainclass 또는
       -name 옵션을 사용하여 호출할 클라이언트를 지정해야 합니다.

       응용 프로그램 클라이언트가 독립형 모듈이거나 EAR 파일에 있는 유일한
       클라이언트인 경우 응용 프로그램 클라이언트 컨테이너는 -mainclass 또는
       -name 옵션을 사용하지 않고 클라이언트를 찾을 수 있습니다. 클라이언트에
       있는 값과 일치하지 않는 -mainclass 또는 -name 값을 제공하는 경우에도
       응용 프로그램 클라이언트 컨테이너는 클라이언트를 시작하기는 하지만 선택
       사항이 클라이언트에 있는 정보와 일치하지 않는다는 경고를 표시합니다.
       또한 경고에는 해당 클라이언트의 실제 주 클래스 및 이름 값이 표시됩니다.

옵션
       jvm-options
           선택 사항이며, 클라이언트 응용 프로그램에 대한 JVM 옵션을 설정할 수
           있습니다. 이러한 선택 사항은 -client 또는 -jar을 제외한 임의의
           적합한 java 명령 옵션일 수 있습니다. JVM 옵션은 두 옵션 유형이
           class-selector 앞에 표시되는 한 다른 appclient 명령 옵션과 함께
           사용할 수 있습니다.

       client_application_classfile
           선택 사항이며, 클라이언트 응용 프로그램 .class 파일의 파일 시스템
           경로 이름입니다. 상대 경로 이름은 현재 디렉토리에 대해 상대적이어야
           합니다. 이 클래스 파일은 응용 프로그램 클라이언트 컨테이너에서
           호출할 main() 메소드를 포함해야 합니다.

           client_application_classfile을 사용하고 클래스가 다른 사용자
           클래스에 종속되는 경우 클래스 경로도 설정해야 합니다.  appclient
           명령에 -classpath JVM 옵션을 사용하거나 CLASSPATH 환경 변수를
           설정할 수 있습니다. 클래스 경로 설정에 대한 자세한 내용은 Oracle
           Solaris
           Version(http://download.oracle.com/javase/6/docs/technotes/tools/solaris/classpath.html)
           또는 Windows
           Version(http://download.oracle.com/javase/6/docs/technotes/tools/windows/classpath.html)을
           참조하십시오.

       -client
           선택 사항이며, 클라이언트 JAR 파일의 이름 및 위치입니다.

       -mainclass
           선택 사항이며, MANIFEST.MF 파일의 Main-Class 항목에 지정된 대로 주
           클라이언트 응용 프로그램의 전체 클래스 이름입니다. 여러 클라이언트
           응용 프로그램에 사용됩니다. 기본적으로 client jar에 지정된 클래스를
           사용합니다. 예를 들어 com.example.test.AppClient입니다.

       -name
           선택 사항이며, 클라이언트 응용 프로그램의 표시 이름입니다. 여러
           클라이언트 응용 프로그램에 사용됩니다. 기본적으로 표시 이름은
           클라이언트 jar application-client.xml 파일에 지정되어 있으며, 이
           이름은 display-name 속성으로 식별됩니다.

       -xml
           기본 도메인, 인스턴스 및 이름(sun-acc.xml)을 사용하는 경우 선택
           사항이며, 그렇지 않은 경우 필수입니다. 클라이언트 구성 XML 파일의
           이름 및 위치를 식별합니다. 지정되지 않은 경우 기본적으로
           domain-dir/config 디렉토리의 sun-acc.xml 파일로 지정됩니다.

       -textauth
           선택 사항이며, 인증이 필요할 때 텍스트 형식 인증을 사용하여
           지정하는 데 사용됩니다.

       -targetserver
           선택 사항이며, ORB 끝점에 대한 하나 이상의 서버 사양의 쉼표로
           구분된 목록입니다. 각 서버 사양은 최소한 호스트를 포함해야 합니다.
           선택적으로 서버 사양은 포트도 포함할 수 있습니다. 포트가 서버
           사양에서 생략된 경우 해당 호스트에 대해 기본값 3700이 사용됩니다.

       -user
           선택 사항이며, 응용 프로그램의 보호되는 특정 구성 요소(예: EJB 구성
           요소)에 대한 액세스 권한을 가지는 응용 프로그램 사용자입니다.

       -passwordfile
           선택 사항이며, 다음 형식으로 응용 프로그램 클라이언트의 비밀번호를
           포함하는 파일의 이름(전체 경로 포함)을 지정합니다.

               PASSWORD=appclient-password
           이 옵션을 생략하면 명령 프롬프트에서 대화식으로 비밀번호가
           지정됩니다.

               경고
               ┌───────────────────────────────────────┐
               │주의 가급적 명령 프롬프트에서          │
               │대화식으로 비밀번호를 지정하지 않도록  │
               │하십시오. 이러한 비밀번호는 실행 중인  │
               │프로세스를 표시하는 명령과 시작하는    │
               │명령(예: ps)을 실행할 수 있는 사용자가 │
               │볼 수 있습니다.                        │
               └───────────────────────────────────────┘
           보안상의 이유로, 환경 변수로 지정된 비밀번호는 appclient
           유틸리티에서 읽지 않습니다.

       class-selector
           필수이며, 다음 클래스 선택기 중 하나를 사용하여 클라이언트 응용
           프로그램 클래스를 지정해야 합니다.

           -jar jar-file
               클라이언트 JAR 파일의 이름 및 위치입니다. 응용 프로그램
               클라이언트 JAR 파일은 asadmin deploy 명령을 사용하여 배치하는
               동안 지정되어 생성됩니다. 지정된 경우 클라이언트 JAR 파일의
               매니페스트에 있는 Class-Path 설정에 따라 -classpath 설정이
               무시됩니다.

           class-name
               응용 프로그램 클라이언트의 주 클래스의 정규화된 이름입니다.
               응용 프로그램 클라이언트 컨테이너는 이 클래스의 main 메소드를
               호출하여 클라이언트를 시작합니다. 예를 들어
               com.example.test.AppClient입니다.

               클래스 선택기로 class-name을 사용하는 경우 클래스 경로도
               설정해야 합니다.  appclient 명령에 -classpath JVM 옵션을
               사용하거나 CLASSPATH 환경 변수를 설정할 수 있습니다. 클래스
               경로 설정에 대한 자세한 내용은 Oracle Solaris
               Version(http://download.oracle.com/javase/6/docs/technotes/tools/solaris/classpath.html)
               또는 Windows
               Version(http://download.oracle.com/javase/6/docs/technotes/tools/windows/classpath.html)을
               참조하십시오.

       application-options
           선택 사항이며, 클라이언트 응용 프로그램 인수를 설정할 수 있습니다.

예제
       예 1, appclient 명령 사용

               appclient -xml sun-acc.xml -jar myclientapp.jar scott sample
           여기서 sun-acc.xml은 클라이언트 구성 XML 파일의 이름이고
           myclientapp.jar은 클라이언트 응용 프로그램 .jar 파일이고 scott 및
           sample은 응용 프로그램으로 전달할 인수입니다.  sun-acc.xml 및
           myclientapp.jar이 현재 디렉토리에 없는 경우 절대 경로 위치를
           제공해야 합니다. 그렇지 않은 경우 상대 경로가 사용됩니다. 상대
           경로는 명령이 실행될 디렉토리에 대해 상대적입니다.

속성
       다음 속성에 대한 설명은 attributes(5)를 참조하십시오.

       ┌─────────────────────────┬───────────────┐
       │                         │               │
       │       속성 유형         │        속성값 │
       ├─────────────────────────┼───────────────┤
       │                         │               │
       │       인터페이스 안정성 │        불안정 │
       └─────────────────────────┴───────────────┘

참조
       get-client-stubs(1)

       asadmin(1M), package-appclient(1M)

                               2010년 12월 16일                  APPCLIENT(1M)
