<?xml version="1.0"?>

<!--JavaTM Enterprise Edition 6 JavaDocs  -->
<project name="GlassFish JavaEE6 JavaDocs" default="default" basedir="." xmlns:artifact="urn:maven-artifact-ant">

  <import file="build.xml"/>
  <property file="${basedir}/build.properties"/>
  <property file="${basedir}/javadoc.properties"/>
  <property name="build.javadocs" value="${basedir}/javadocs"/>
  <property name="Name" value="Java&lt;sup&gt;&lt;font size=-2&gt;TM&lt;/font&gt;&lt;/sup&gt; Platform, Enterprise Edition 6 " />
  <property name="Title" value="Java EE 6 - DRAFT" />
<!--
  <property name="remote.repository" value="http://download.java.net/maven/2/" />
-->
  <property name="remote.repository" value="http://maven.glassfish.org/content/groups/glassfish/" />

  <path id="src.dir">
    <dirset dir="${basedir}">

      <include name="v3/**/javax/**"/>

      <!-- adding the subdirectories that includes "javax." since ant include does not pickup the "javax." subdirectories -->
      <include name="v3/javaee-api/**/src/main/java/**"/>
      <include name="v3/ejb/**/src/main/java/**"/>
      <include name="v3/deployment/**/src/main/java/**"/>
      <include name="v3/admin/**/src/main/java/**"/>
      <include name="v3/connectors/**/src/main/java/**"/>
      <include name="v3/security/**/src/main/java/**"/>
      <include name="v3/transaction/**/src/main/java/**"/>
      <include name="v3/web/**/src/main/java/**"/>

      <include name="external/jaxr-api/**"/>
      <include name="external/jaxr-ri/**"/>
      <include name="external/hk2/src/**"/>
      <include name="external/javamail/**"/>
      <include name="external/jaxrpc-api/src/**"/>
      <include name="external/jaxb-api/**"/>
      <include name="external/jaxr/**"/>
      <include name="external/jaxws-api/**"/>
      <include name="external/jsf/**"/>
      <include name="external/jsp/**"/>
      <include name="external/jsr181/**"/>
      <include name="external/jsr250/api/src/**"/>
      <include name="external/jsr311/**"/>
      <include name="external/jstl-api/**"/>
      <include name="external/mq-distribution/mq/src/share/java/**"/>
      <include name="external/eclipse.persistence/**"/>
      <include name="external/saaj-api/**" />
      <include name="external/uel/**/src/main/java/**"/>
      <include name="external/validation-api/src/main/java/**"/>
      <include name="external/webbeans-api/**"/>
    </dirset>
  </path>


  <target name="default" description="Default target">
      <antcall target="checkout.source" />
      <antcall target="create-javadocs" />
      <antcall target="copy-jsf-image-files" />
      <antcall target="jar-javadoc" />
  </target>


  <target name="initialize.maven">
        <get
           src="http://maven.glassfish.org/content/repositories/maven.central/org/apache/maven/maven-ant-tasks/2.0.9/maven-ant-tasks-2.0.9.jar"
           dest="${basedir}/maven-ant-tasks-2.0.9.jar"
           verbose="true"
           usetimestamp="true"/>
        <path id="maven-ant-tasks.classpath" path="${basedir}/maven-ant-tasks-2.0.9.jar" />
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
                 classpathref="maven-ant-tasks.classpath" />
        <artifact:install-provider artifactId="wagon-svn" groupId="org.jvnet.wagon-svn" version="1.7">
        <artifact:remoteRepository id="nexus.repository" url="${remote.repository}" />
        <artifact:localRepository path="${maven.repo.local}"/>
        </artifact:install-provider>
  </target>

  <target name="checkout.source" description="Checkout JavaEE6 source">
      <ant antfile="build.xml" target="init" />
      <antcall target="v3.checkout" />
      <!-- ant antfile="hk2.xml" target="hk2.checkout" / -->
      <antcall target="hk2.download" />
      <antcall target="jaxr-api.checkout" />
      <antcall target="javamail.download" />
      <antcall target="jaxrpc.checkout" />
      <antcall target="jaxb-api.checkout" />
      <antcall target="jaxr.checkout" />
      <antcall target="jaxws-api.checkout" />
      <antcall target="jsf.download" />
      <antcall target="jsp.download" />
      <antcall target="jsr181.download" />
      <antcall target="jsr250.checkout" />
      <antcall target="jsr311.download" />
      <antcall target="jstl-api.download" />
      <antcall target="mq.download" />
      <antcall target="eclipse-persistence.download" />
      <antcall target="saaj-api.download" />
      <antcall target="uel.checkout" />
      <antcall target="bean-validator.checkout" />
      <antcall target="webbeans-api.download" />
  </target>

  <target name="v3.checkout" description="Checkout v3 workspace"> 
      <echo message="checkout v3 from ${v3.svn.url}."/>
      <!-- checkout v3 source -->
      <exec executable="svn" dir="${basedir}" failonerror="true" >
	  <arg line="checkout" />
          <arg line="${v3.svn.url}" />
          <arg line="--username" />
          <arg line="guest" />
          <arg line="v3" />
	</exec>
  </target>


  <target name="hk2.download" description="Download HK2" depends="initialize.maven">
      <artifact:dependencies sourcesFilesetId="sources.dependency.hk2">
          <dependency groupId="com.sun.enterprise" artifactId="hk2" version="0.3.67"/>
          <dependency groupId="com.sun.enterprise" artifactId="hk2-core" version="0.3.67"/>
          <dependency groupId="com.sun.enterprise" artifactId="hk2-maven" version="0.3.67"/>
          <dependency groupId="com.sun.enterprise" artifactId="osgi-adapter" version="0.3.67"/>
          <dependency groupId="com.sun.enterprise" artifactId="osgi-main" version="0.3.67"/>
          <dependency groupId="com.sun.enterprise" artifactId="stax-osgi" version="0.3.67"/>
          <remoteRepository refid="nexus.repository" />
          <localRepository path="${maven.repo.local}"/>
      </artifact:dependencies>
      <mkdir dir="${external.dir}/hk2" />
      <copy todir="${external.dir}/hk2" verbose="true">
          <fileset refid="sources.dependency.hk2" />
          <mapper type="flatten" />
      </copy>
      <unjar dest="${external.dir}/hk2"  >
          <fileset dir="${external.dir}/hk2">
              <include name="**/hk2*.jar"/>
              <include name="**/osgi*.jar"/>
              <include name="**/stax*.jar"/>
          </fileset>
      </unjar>
  </target>


  <target name="jaxr-api.checkout" description="Checkout JAXR-API and JAXR-RI"> 
      <echo message="checkout jaxr-api and jaxr-ri from ${cvsroot}."/>
      <exec executable="cvs" dir="${external.dir}" failonerror="true" >
	  <arg line="-d" />
          <arg line="${cvsroot}" />
          <arg line="co" />
	  <arg line="-d" />
	  <arg line="jaxr-api" />
	  <arg line="${jaxr-api.cvs.location}" />
	</exec>
      <exec executable="cvs" dir="${external.dir}" failonerror="true" >
	  <arg line="-d" />
          <arg line="${cvsroot}" />
          <arg line="co" />
	  <arg line="-d" />
	  <arg line="jaxr-ri" />
	  <arg line="${jaxr-ri.cvs.location}" />
	</exec>
  </target>

  <target name="javamail.download" description="Download JavaMail 1.4.2" depends="initialize.maven">
      <artifact:dependencies sourcesFilesetId="sources.dependency.javamail">
          <dependency groupId="javax.mail" artifactId="mail" version="1.4.2"/>
          <remoteRepository refid="nexus.repository" />
          <localRepository path="${maven.repo.local}"/>
      </artifact:dependencies>
      <mkdir dir="${external.dir}/javamail" />
      <copy todir="${external.dir}/javamail" verbose="true">
          <fileset refid="sources.dependency.javamail" />
          <mapper type="flatten" />
      </copy>
      <unjar dest="${external.dir}/javamail"  >
          <fileset dir="${external.dir}/javamail">
              <include name="**/*.jar"/>
          </fileset>
<!--
fileset refid of artifact:dependencies does not work in unjar
          <fileset refid="sources.dependency.javamail"/>
          <mapper type="flatten" />
-->
      </unjar>
  </target>


  <target name="jaxrpc.checkout" description="Checkout JAXRPC-API"> 
      <echo message="checkout jaxrpc-api from ${cvsroot}."/>
      <exec executable="cvs" dir="${external.dir}" failonerror="true" >
	  <arg line="-d" />
          <arg line="${sfbay.cvsroot}" />
          <arg line="co" />
	  <arg line="-r" />
	  <arg line="${jaxrpc.api.cvs.branch}" />
	  <arg line="${jaxrpc.api.cvs.location}" />
	</exec>
  </target>


  <target name="jaxb-api.checkout" description="Checkout JAXB-API"> 
      <mkdir dir="${external.dir}/jaxb-api" />
      <get
           src="${jaxb-api.url}"
           dest="${external.dir}/jaxb-api/jaxb-api-src.zip"
           verbose="true"
           usetimestamp="true"/>
      <unzip dest="${external.dir}/jaxb-api"  >
          <fileset dir="${external.dir}/jaxb-api">
              <include name="**/*.zip"/>
          </fileset>
      </unzip>
  </target>

  <target name="jaxr.checkout" description="Checkout JAXR" >
      <mkdir dir="${external.dir}/jaxr" />
      <get
           src="${jaxr.url}"
           dest="${external.dir}/jaxr/jaxr-1_0-fr-apisrc.jar"
           verbose="true"
           usetimestamp="true"/>
      <unjar dest="${external.dir}/jaxr"  >
          <fileset dir="${external.dir}/jaxr">
              <include name="**/*.jar"/>
          </fileset>
      </unjar>
  </target>

  <target name="jaxws-api.checkout" description="Checkout JAXWS-API" >
      <mkdir dir="${external.dir}/jaxws-api" />
      <get
           src="${jaxws-api.url}"
           dest="${external.dir}/jaxws-api/jaxws-api-src.zip"
           verbose="true"
           usetimestamp="true"/>
      <unzip dest="${external.dir}/jaxws-api"  >
          <fileset dir="${external.dir}/jaxws-api">
              <include name="**/*.zip"/>
          </fileset>
      </unzip>
  </target>


  <target name="jsf.download" description="Download JSF" depends="initialize.maven">
      <artifact:dependencies sourcesFilesetId="sources.dependency.jsf">
          <dependency groupId="com.sun.faces" artifactId="jsf-api" version="2.0.0-b13"/>
          <remoteRepository refid="nexus.repository" />
          <localRepository path="${maven.repo.local}"/>
      </artifact:dependencies>
      <mkdir dir="${external.dir}/jsf" />
      <copy todir="${external.dir}/jsf" verbose="true">
          <fileset refid="sources.dependency.jsf" />
          <mapper type="flatten" />
      </copy>
      <unjar dest="${external.dir}/jsf"  >
          <fileset dir="${external.dir}/jsf">
              <include name="**/*.jar"/>
          </fileset>
      </unjar>
  </target>

  <target name="jsp.download" description="Download JSP" depends="initialize.maven">
      <artifact:dependencies sourcesFilesetId="sources.dependency.jsp">
          <dependency groupId="javax.servlet.jsp" artifactId="jsp-api" version="2.1.3-b02"/>
          <dependency groupId="org.glassfish.web" artifactId="jsp-impl" version="2.1.3-b10"/>
          <remoteRepository refid="nexus.repository" />
          <localRepository path="${maven.repo.local}"/>
      </artifact:dependencies>
      <mkdir dir="${external.dir}/jsp" />
      <copy todir="${external.dir}/jsp" verbose="true">
          <fileset refid="sources.dependency.jsp" />
          <mapper type="flatten" />
      </copy>
      <unjar dest="${external.dir}/jsp"  >
          <fileset dir="${external.dir}/jsp">
              <include name="**/jsp*.jar"/>
          </fileset>
      </unjar>
  </target>

  <target name="jsr181.download" description="Download JSR 181" depends="initialize.maven">
      <artifact:dependencies sourcesFilesetId="sources.dependency.jsr181">
          <dependency groupId="javax.jws" artifactId="jsr181-api" version="1.0-MR1"/>
          <remoteRepository refid="nexus.repository" />
          <localRepository path="${maven.repo.local}"/>
      </artifact:dependencies>
      <mkdir dir="${external.dir}/jsr181" />
      <copy todir="${external.dir}/jsr181" verbose="true">
          <fileset refid="sources.dependency.jsr181" />
          <mapper type="flatten" />
      </copy>
      <unjar dest="${external.dir}/jsr181"  >
          <fileset dir="${external.dir}/jsr181">
              <include name="**/*.jar"/>
          </fileset>
      </unjar>
  </target>

  <target name="jsr250.checkout" description="Checkout JSR250"> 
      <echo message="checkout jsr250 from ${cvsroot}."/>
      <exec executable="cvs" dir="${external.dir}" failonerror="true" >
	  <arg line="-d" />
          <arg line="${cvsroot}" />
          <arg line="co" />
	  <arg line="-d" />
	  <arg line="jsr250" />
	  <arg line="${jsr250.cvs.location}" />
	</exec>
  </target>

  <target name="jsr311.download" description="Download JSR 311" depends="initialize.maven">
      <artifact:dependencies sourcesFilesetId="sources.dependency.jsr311">
          <dependency groupId="javax.ws.rs" artifactId="jsr311-api" version="1.1"/>
          <remoteRepository refid="nexus.repository" />
          <localRepository path="${maven.repo.local}"/>
      </artifact:dependencies>
      <mkdir dir="${external.dir}/jsr311" />
      <copy todir="${external.dir}/jsr311" verbose="true">
          <fileset refid="sources.dependency.jsr311" />
          <mapper type="flatten" />
      </copy>
      <unjar dest="${external.dir}/jsr311"  >
          <fileset dir="${external.dir}/jsr311">
              <include name="**/*.jar"/>
          </fileset>
      </unjar>
  </target>

  <target name="jstl-api.download" description="Download JSTL-API" depends="initialize.maven">
      <artifact:dependencies sourcesFilesetId="sources.dependency.jstl">
          <dependency groupId="javax.servlet.jsp.jstl" artifactId="jstl-api" version="1.2-rev-1"/>
          <remoteRepository refid="nexus.repository" />
          <localRepository path="${maven.repo.local}"/>
      </artifact:dependencies>
      <mkdir dir="${external.dir}/jstl-api" />
      <copy todir="${external.dir}/jstl-api" verbose="true">
          <fileset refid="sources.dependency.jstl" />
          <mapper type="flatten" />
      </copy>
      <unjar dest="${external.dir}/jstl-api"  >
          <fileset dir="${external.dir}/jstl-api">
              <include name="**/jstl*.jar"/>
          </fileset>
      </unjar>
  </target>


  <target name="mq.download" description="Download MQ" depends="initialize.maven" >
      <artifact:dependencies filesetId="dependency.fileset" sourcesFilesetId="sources.dependency.mq" >
          <dependency groupId="org.glassfish" artifactId="mq-distribution" version="4.4-011" classifier="sources" type="zip"/>
          <dependency groupId="org.glassfish" artifactId="mq-distribution" version="4.4-011" type="zip"/>
          <remoteRepository refid="nexus.repository" />
          <localRepository path="${maven.repo.local}"/>
      </artifact:dependencies>
      <mkdir dir="${external.dir}/mq-distribution" />
      <copy todir="${external.dir}/mq-distribution" verbose="true">
          <!-- fileset refid="sources.dependency.mq" / -->
          <fileset refid="dependency.fileset" />
          <mapper type="flatten" />
      </copy>
      <unzip dest="${external.dir}/mq-distribution"  >
          <fileset dir="${external.dir}/mq-distribution">
              <include name="**/mq-distribution*sources.zip"/>
          </fileset>
      </unzip>
      <!-- delete examples directory since it was causing error in javadoc.  not able to use exclude dirset  -->
      <echo message="delete examples directory" />
      <delete dir="${external.dir}/mq-distribution/mq/src/share/java/examples" />
  </target>


  <target name="eclipse-persistence.download" description="Download Eclipse Persistence source" depends="initialize.maven" > 
      <artifact:dependencies sourcesFilesetId="sources.dependency.eclipse-persistence">
          <dependency groupId="org.eclipse.persistence" artifactId="javax.persistence" version="2.0.0-M3"/>
          <remoteRepository refid="nexus.repository" />
          <localRepository path="${maven.repo.local}"/>
      </artifact:dependencies>
      <mkdir dir="${external.dir}/eclipse.persistence" />
      <copy todir="${external.dir}/eclipse.persistence" verbose="true">
          <fileset refid="sources.dependency.eclipse-persistence" />
          <mapper type="flatten" />
      </copy>
      <unjar dest="${external.dir}/eclipse.persistence"  >
          <fileset dir="${external.dir}/eclipse.persistence">
              <include name="**/javax.persistence*.jar"/>
          </fileset>
      </unjar>
  </target>


  <target name="saaj-api.download" description="Download Saaj-API" depends="initialize.maven" >
      <artifact:dependencies sourcesFilesetId="sources.dependency.saaj-api" >
          <dependency groupId="javax.xml.soap" artifactId="saaj-api" version="1.3" classifier="sources" />
          <remoteRepository refid="nexus.repository" />
          <localRepository path="${maven.repo.local}"/>
      </artifact:dependencies>
      <mkdir dir="${external.dir}/saaj-api" />
      <copy todir="${external.dir}/saaj-api" verbose="true">
          <fileset refid="sources.dependency.saaj-api" />
          <mapper type="flatten" />
      </copy>
      <unjar dest="${external.dir}/saaj-api"  >
          <fileset dir="${external.dir}/saaj-api">
              <include name="**/saaj-api*sources.jar"/>
          </fileset>
      </unjar>
  </target>


  <target name="uel.checkout" description="Checkout UEL workspace"> 
      <echo message="checkout UEL from ${uel.svn.url}." />
      <!-- checkout UEL source -->
      <exec executable="svn" dir="${basedir}" failonerror="true" >
	  <arg line="checkout" />
          <arg line="${uel.svn.url}" />
          <arg line="--username" />
          <arg line="guest" />
          <arg line="external/uel" />
	</exec>
  </target>

  <target name="bean-validator.checkout" description="Checkout BeanValidator workspace"> 
      <echo message="checkout UEL from ${bean-validator.svn.url}." />
      <!-- checkout BeanValidator source -->
      <exec executable="svn" dir="${basedir}" failonerror="true" >
	  <arg line="checkout" />
          <arg line="${bean-validator.svn.url}/api/checkout-source/src" />
          <arg line="external/validation-api/src" />
	</exec>
  </target>


  <target name="webbeans-api.download" description="Download WebBeans API" depends="initialize.maven" >
      <artifact:dependencies sourcesFilesetId="sources.dependency.webbeans-api" >
          <dependency groupId="org.jboss.webbeans" artifactId="jsr299-api" version="1.0.0.PREVIEW2.SP2" classifier="sources" />
          <remoteRepository refid="nexus.repository" />
          <localRepository path="${maven.repo.local}"/>
      </artifact:dependencies>
      <mkdir dir="${external.dir}/webbeans-api" />
      <copy todir="${external.dir}/webbeans-api" verbose="true">
          <fileset refid="sources.dependency.webbeans-api" />
          <mapper type="flatten" />
      </copy>
      <unjar dest="${external.dir}/webbeans-api"  >
          <fileset dir="${external.dir}/webbeans-api">
              <include name="**/*.jar"/>
          </fileset>
      </unjar>
  </target>

  <target name="clean-javadocs-dir" description="Delete JavaDocs directory">
          <delete dir="${build.javadocs}" quiet="true" />
  </target>

  <target name="create-javadocs" description="Creates JavaEE 6 JavaDocs">
    <antcall target="clean-javadocs-dir" />
    <mkdir dir="${build.javadocs}"/>
    <javadoc sourcepathref="src.dir"
             destdir="${build.javadocs}"
	     excludepackagenames="com.*,org.*,sample.*,killer.*,net.*,testing.*,java.*,javax.xml.messaging.*,javax.xml.registry.samples.*,javax.xml.namespace.*,javax.faces.bean"
             maxmemory="2048m"
             author="true"
             version="true"
             source="1.6"
             encoding="ISO-8859-1"
             windowtitle="${Title}"
             doctitle="&lt;h1&gt;${Name} &lt;br&gt;API Specification&lt;/h1&gt;&lt;p&gt;This document is the API specification for version 6 of the Java&lt;sup&gt;TM&lt;/sup&gt; Platform, Enterprise Edition."
             bottom="&lt;font size=&quot;-1&quot;&gt;&lt;a href=&quot;http://java.sun.com/webapps/bugreport&quot;&gt;Submit a bug or feature&lt;/a&gt; &lt;p&gt; Copyright &amp;copy; 2009 Sun Microsystems, Inc. All Rights Reserved. Use is subject to &lt;a href=&quot;http://java.sun.com/javaee/downloads/licenses/JavaEE6platformspec_license.txt&quot; target=&quot;_top&quot;&gt;license terms.&lt;/a&gt; &lt;/font&gt;"
             Header="DRAFT" 
             Footer="DRAFT" >
    </javadoc>
  </target>

  <target name="copy-jsf-image-files" description="Copy JSF image files" >
      <copy todir="javadocs/javax/faces">
          <fileset dir="${external.dir}/jsf/javax/faces" includes="**/*.jpg"/>
      </copy>
      <copy todir="javadocs">
<!--
Per Ed Burns' request to not include drop the color coding for JSF docs so removing jsf-api.css file.
Also removed 'stylesheetfile="jsf/jsf-api/jsf-api.css"' when generating the javadoc. 
-->
          <fileset dir="${external.dir}/jsf" includes="**/*.css,**/*.png"/>
      </copy>
  </target>

  <target name="jar-javadoc" description="Bundle JavaEE6 jar" >
      <jar destfile="${build.javadocs}/javadocee6.jar" basedir="${build.javadocs}"/>
  </target>
</project>


