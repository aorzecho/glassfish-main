DOTTED-NAMES(5ASC)                                          DOTTED-NAMES(5ASC)

NOME
       dotted-names - sintaxe para usar pontos a fim de separar elementos de
       nome

DESCRIçãO
       Um nome com pontos é um identificador para um elemento em particular do
       GlassFish Server como um objeto configurável ou monitorável. Um nome
       com pontos utiliza o ponto (.) como delimitador para separar as partes
       do nome de um elemento. O ponto em um nome com pontos é similar ao
       caractere barra (/), que delimita os níveis no nome do caminho absoluto
       de um arquivo no sistema de arquivos UNIX.

       Os subcomandos do utilitário asadmin usam nomes com pontos da seguinte
       forma:

       ·   O subcomando list fornece os nomes com pontos totalmente
           qualificados de atributos de componentes de gerenciamento.

       ·   O subcomando get fornece acesso aos atributos.

       ·   O subcomando set permite modificar atributos configuráveis e
           definir propriedades.

       A hierarquia de configuração é imprecisamente baseada no documento de
       esquema de domínio e os atributos são modificáveis. Os atributos da
       hierarquia de monitoramento são de somente para leitura.

       O formato a seguir é utilizado para nomes com pontos de configuração
       (itálico indica substituível):

       config-name.config-element-name.primary-key.attribute-name |
       instance-name.config-element-name.primary-key.attribute-name

       O formato a seguir é utilizado para nomes com pontos de recursos
       (itálico indica substituível):

       server-name.resource-name.primary-key.attribute-name |
       domain.resources.resource-name.primary-key.attribute-name

       As seguintes regras se aplicam à formação de nomes com pontos:

       ·   O nível superior é configuração, servidor ou nome do domínio. Por
           exemplo, server-config (configuração default), server (servidor
           default) ou domain1 (domínio default).

       ·   Um ponto (.) sempre separa duas partes sequenciais do nome.

       ·   Uma parte do nome normalmente identifica o subsistema de um
           servidor ou sua instância específica. Por exemplo, web-container,
           log-service , thread-pool-1.

       ·   Se qualquer parte do nome contiver um ponto (.), ele deverá ter
           escape com uma \ (barra invertida) precedente para que o .  (ponto)
           não seja interpretado como delimitador. Para obter mais informações
           sobre caracteres de escape, consulte a página de ajuda asadmin(1M)
           .

       ·   Um caractere * (asterisco) pode ser usado em qualquer lugar do nome
           com pontos e age como o caractere curinga em expressões regulares.
           Além disso, um * pode contrair todas as partes do nome com pontos.
           Por exemplo, um nome longo com pontos, como
           this.is.really.long.hierarchy , poderá ser abreviado como
           th*.hierarchy. O
            .  (ponto) sempre delimita as partes do nome com pontos.

               Nota
               ┌───────────────────────────────────────┐
               │Observação Caracteres que tenham       │
               │significado especial para o shell ou o │
               │interpretador de comandos, como *      │
               │(asterisco), deverão estar entre aspas │
               │ou caracteres de escape de forma       │
               │apropriada ao shell, por exemplo,      │
               │colocando o argumento entre aspas. Em  │
               │multimodo, aspas são necessárias       │
               │somente para argumentos que incluam    │
               │espaços, aspas ou barra invertida.     │
               └───────────────────────────────────────┘

       ·   A opção --monitor dos subcomandos get e list seleciona a hierarquia
           de monitoramento ou de configuração. Se o subcomando especificar
           --monitor=false (o default), a hierarquia de configuração será
           selecionada. Se o subcomando especificar --monitor=true, a
           hierarquia de monitoramento será selecionada.

       ·   Se você souber o nome com pontos completo e não precisar usar um
           curinga, os subcomandos list, get e set tratarão o nome de forma
           diferente:

           ·   O subcomando list trata um nome com pontos completo como o nome
               de um nó superior na hierarquia abstrata. Ao especificar esse
               nome para o subcomando list, os nomes dos filhos imediatos
               daquele nível são retornados. Por exemplo, o comando a seguir
               lista todos os módulos da web implantados no domínio ou no
               servidor default:

                   asadmin> list server.applications.web-module

           ·   Os subcomandos
                get e set tratam um nome com pontos completo como o nome
               totalmente qualificado do atributo de um nó (cujo nome com
               pontos propriamente dito é o nome obtido ao remover a última
               parte deste nome com pontos). Ao especificar esse nome para o
               subcomando get ou set, o subcomando age sobre o valor daquele
               atributo, caso exista. Você nunca começará com esse caso pois,
               para encontrar os nomes dos atributos de um nó particular na
               hierarquia, é preciso usar o caractere curinga *. Por exemplo,
               o seguinte comando com pontos retorna a raiz do contexto da
               aplicação Web implantada no domínio ou no servidor default:

                   server.applications.web-module.JSPWiki.context-root

EXEMPLOS
       Exemplo 1, Listando todos os elementos configuráveis
           Esse exemplo lista todos os elementos configuráveis.

               asadmin> list *
           Uma saída similar a seguinte é exibida:

               applications
               configs
               configs.config.server-config
               configs.config.server-config.admin-service
               configs.config.server-config.admin-service.das-config
               configs.config.server-config.admin-service.jmx-connector.system
               configs.config.server-config.admin-service.property.adminConsoleContextRoot
               configs.config.server-config.admin-service.property.adminConsoleDownloadLocation
               configs.config.server-config.admin-service.property.ipsRoot
               configs.config.server-config.ejb-container
               configs.config.server-config.ejb-container.ejb-timer-service
               configs.config.server-config.http-service
               configs.config.server-config.http-service.access-log
               configs.config.server-config.http-service.virtual-server.__asadmin
               configs.config.server-config.http-service.virtual-server.server
               configs.config.server-config.iiop-service
               configs.config.server-config.iiop-service.iiop-listener.SSL
               configs.config.server-config.iiop-service.iiop-listener.SSL.ssl
               configs.config.server-config.iiop-service.iiop-listener.SSL_MUTUALAUTH
               configs.config.server-config.iiop-service.iiop-listener.SSL_MUTUALAUTH.ssl
               configs.config.server-config.iiop-service.iiop-listener.orb-listener-1
               configs.config.server-config.iiop-service.orb
               configs.config.server-config.java-config
               configs.config.server-config.jms-service
               configs.config.server-config.jms-service.jms-host.default_JMS_host
               configs.config.server-config.mdb-container
               configs.config.server-config.monitoring-service
               configs.config.server-config.monitoring-service.module-monitoring-levels
               ...
               property.administrative.domain.name
               resources
               resources.jdbc-connection-pool.DerbyPool
               resources.jdbc-connection-pool.DerbyPool.property.DatabaseName
               resources.jdbc-connection-pool.DerbyPool.property.Password
               resources.jdbc-connection-pool.DerbyPool.property.PortNumber
               resources.jdbc-connection-pool.DerbyPool.property.User
               resources.jdbc-connection-pool.DerbyPool.property.connectionAttributes
               resources.jdbc-connection-pool.DerbyPool.property.serverName
               resources.jdbc-connection-pool.__TimerPool
               resources.jdbc-connection-pool.__TimerPool.property.connectionAttributes
               resources.jdbc-connection-pool.__TimerPool.property.databaseName
               resources.jdbc-resource.jdbc/__TimerPool
               resources.jdbc-resource.jdbc/__default
               servers
               servers.server.server
               servers.server.server.resource-ref.jdbc/__TimerPool
               servers.server.server.resource-ref.jdbc/__default
               system-applications
               Command list executed successfully.

       Exemplo 2, Listando todos os objetos monitoráveis
           O exemplo a seguir lista todos os objetos monitoráveis.

               asadmin> list --monitor *
           Uma saída similar a seguinte é exibida:

               server
               server.jvm
               server.jvm.class-loading-system
               server.jvm.compilation-system
               server.jvm.garbage-collectors
               server.jvm.garbage-collectors.Copy
               server.jvm.garbage-collectors.MarkSweepCompact
               server.jvm.memory
               server.jvm.operating-system
               server.jvm.runtime
               server.network
               server.network.admin-listener
               server.network.admin-listener.connections
               server.network.admin-listener.file-cache
               server.network.admin-listener.keep-alive
               server.network.admin-listener.thread-pool
               server.network.http-listener-1
               server.network.http-listener-1.connections
               server.network.http-listener-1.file-cache
               server.network.http-listener-1.keep-alive
               server.network.http-listener-1.thread-pool
               server.transaction-service
               Command list executed successfully.

CONSULTE TAMBéM
       list(1), get(1), set(1)

       asadmin(1M)

                            14 de setembro de 2009          DOTTED-NAMES(5ASC)
