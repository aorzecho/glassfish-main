DOTTED-NAMES(5ASC)                                          DOTTED-NAMES(5ASC)

名前
       dotted-names - ピリオドを使用して名前要素を分けるための構文

説明
       ドット表記名は、構成可能なオブジェクトや監視可能なオブジェクトのような、特定のGlassFish
       Server要素の識別子です。ドット表記名では、名前要素を複数に分けるためのデリミタとしてドットと呼ばれるピリオド(.)を使用します。ドット表記名のピリオドは、UNIXファイル・システムでファイルの絶対パス名のレベルを区切るスラッシュ(/)に類似しています。

       asadminユーティリティのサブコマンドは、ドット表記名を次のように使用します。

       ·   listサブコマンドは、管理コンポーネントの属性の完全修飾ドット表記名を提供します。

       ·   getサブコマンドは、属性にアクセスできます。

       ·   setサブコマンドを使用すると、構成可能な属性の変更とプロパティの設定が可能になります。

       構成階層は、大まかにドメインのスキーマ・ドキュメントに基づいており、属性は変更可能です。監視階層の属性は読取り専用です。

       構成のドット表記名には次の形式が使用されます(斜体部分は置換可能)。

       config-name.config-element-name.primary-key.attribute-name |
       instance-name.config-element-name.primary-key.attribute-name

       リソースのドット表記名には次の形式が使用されます(斜体部分は置換可能)。

       server-name.resource-name.primary-key.attribute-name |
       domain.resources.resource-name.primary-key.attribute-name

       ドット表記名の形成には次のルールが適用されます。

       ·   最上位は構成名、サーバー名、またはドメイン名になります。たとえば、server-config(デフォルト構成)、server(デフォルト・サーバー)、またはdomain1(デフォルト・ドメイン)のようになります。

       ·   ドット(.)は常に、名前を連続した2つの部分に区切ります。

       ·   名前の1つの部分は、通常、サーバーのサブシステムまたはその固有のインスタンスを特定します。たとえば、web-container、log-service、thread-pool-1のようになります。

       ·   名前の一部にドット(.)が含まれている場合は、ドットの前に\(バックスラッシュ)を付けてドットをエスケープし、.(ドット)がデリミタとして機能しないようにする必要があります。エスケープ文字の詳細は、asadmin(1M)のヘルプ・ページを参照してください。

       ·   *(アスタリスク)は、ドット表記名の任意の場所で使用できます。これは正規表現におけるワイルドカード文字のような役割を果たします。また、*によって、ドット表記名のすべての部分を折りたたむことができます。たとえば、this.is.really.long.hierarchyのような長いドット表記名は、th*.hierarchyのように省略できます。.(ドット)は常に、ドット表記名の各部分を区切ります。

               注記
               ┌──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
               │注                                                                                                                                                                                                                                                                                                            │
               │*(アスタリスク)のような、シェルまたはコマンド・インタプリタに対して特別な意味を持つ文字は、たとえば引数を引用符で囲む方法を使用して、シェルに対して適切に引用符で囲むかエスケープする必要があります。マルチモードでは、空白、引用符、またはバックスラッシュが含まれた引数に対してのみ引用符が必要になります。 │
               └──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘

       ·   getおよびlistサブコマンドの--monitorオプションは、監視階層または構成階層を選択します。サブコマンドが--monitor=false(デフォルト)を指定すると、構成階層が選択されます。サブコマンドが--monitor=trueを指定すると、監視階層が選択されます。

       ·   完全なドット表記名がわかるためワイルドカードを使用する必要がない場合、list、getおよびsetの各サブコマンドは、ドット表記名を異なる方法で処理します。

           ·   listサブコマンドは、完全なドット表記名を、抽象階層内の親ノードの完全な名前として処理します。この名前をlistサブコマンドに指定すると、そのレベルの直接の子ノードの名前が返されます。たとえば、次のコマンドは、ドメインまたはデフォルトのサーバーにデプロイされたすべてのWebモジュールを一覧表示します。

                   asadmin> list server.applications.web-module

           ·   getおよびsetサブコマンドは、完全なドット表記名を、ノードの属性の完全修飾名(ノードのドット表記名そのものが、このドット表記名の最後の部分を削除したときに取得する名前となる)として処理します。この名前をgetまたはsetサブコマンドに指定すると、サブコマンドはその属性の値(そうした属性が存在する場合)に対して機能します。したがって、最初からこれを実行することはできません。まず、階層内の特定のノードの属性名を見つけるために、ワイルドカード文字の*を使用する必要があります。たとえば、次のドット表記名は、ドメインまたはデフォルト・サーバーにデプロイされたWebアプリケーションのコンテキスト・ルートを返します。

                   server.applications.web-module.JSPWiki.context-root

例
       例 1, すべての構成可能な要素の一覧表示
           この例では、すべての構成可能な要素を一覧表示します。

               asadmin> list *
           次のような内容が表示されます。

               applications
               configs
               configs.config.server-config
               configs.config.server-config.admin-service
               configs.config.server-config.admin-service.das-config
               configs.config.server-config.admin-service.jmx-connector.system
               configs.config.server-config.admin-service.property.adminConsoleContextRoot
               configs.config.server-config.admin-service.property.adminConsoleDownloadLocation
               configs.config.server-config.admin-service.property.ipsRoot
               configs.config.server-config.ejb-container
               configs.config.server-config.ejb-container.ejb-timer-service
               configs.config.server-config.http-service
               configs.config.server-config.http-service.access-log
               configs.config.server-config.http-service.virtual-server.__asadmin
               configs.config.server-config.http-service.virtual-server.server
               configs.config.server-config.iiop-service
               configs.config.server-config.iiop-service.iiop-listener.SSL
               configs.config.server-config.iiop-service.iiop-listener.SSL.ssl
               configs.config.server-config.iiop-service.iiop-listener.SSL_MUTUALAUTH
               configs.config.server-config.iiop-service.iiop-listener.SSL_MUTUALAUTH.ssl
               configs.config.server-config.iiop-service.iiop-listener.orb-listener-1
               configs.config.server-config.iiop-service.orb
               configs.config.server-config.java-config
               configs.config.server-config.jms-service
               configs.config.server-config.jms-service.jms-host.default_JMS_host
               configs.config.server-config.mdb-container
               configs.config.server-config.monitoring-service
               configs.config.server-config.monitoring-service.module-monitoring-levels
               ...
               property.administrative.domain.name
               resources
               resources.jdbc-connection-pool.DerbyPool
               resources.jdbc-connection-pool.DerbyPool.property.DatabaseName
               resources.jdbc-connection-pool.DerbyPool.property.Password
               resources.jdbc-connection-pool.DerbyPool.property.PortNumber
               resources.jdbc-connection-pool.DerbyPool.property.User
               resources.jdbc-connection-pool.DerbyPool.property.connectionAttributes
               resources.jdbc-connection-pool.DerbyPool.property.serverName
               resources.jdbc-connection-pool.__TimerPool
               resources.jdbc-connection-pool.__TimerPool.property.connectionAttributes
               resources.jdbc-connection-pool.__TimerPool.property.databaseName
               resources.jdbc-resource.jdbc/__TimerPool
               resources.jdbc-resource.jdbc/__default
               servers
               servers.server.server
               servers.server.server.resource-ref.jdbc/__TimerPool
               servers.server.server.resource-ref.jdbc/__default
               system-applications
               Command list executed successfully.

       例 2, すべての監視可能なオブジェクトの一覧表示
           次の例では、すべての監視可能なオブジェクトを一覧表示します。

               asadmin> list --monitor *
           次のような内容が表示されます。

               server
               server.jvm
               server.jvm.class-loading-system
               server.jvm.compilation-system
               server.jvm.garbage-collectors
               server.jvm.garbage-collectors.Copy
               server.jvm.garbage-collectors.MarkSweepCompact
               server.jvm.memory
               server.jvm.operating-system
               server.jvm.runtime
               server.network
               server.network.admin-listener
               server.network.admin-listener.connections
               server.network.admin-listener.file-cache
               server.network.admin-listener.keep-alive
               server.network.admin-listener.thread-pool
               server.network.http-listener-1
               server.network.http-listener-1.connections
               server.network.http-listener-1.file-cache
               server.network.http-listener-1.keep-alive
               server.network.http-listener-1.thread-pool
               server.transaction-service
               Command list executed successfully.

関連項目
       list(1), get(1), set(1)

       asadmin(1M)

                                 2009年9月14日              DOTTED-NAMES(5ASC)
