ASADMIN(1M)                                                        ASADMIN(1M)

제목
       asadmin - Oracle GlassFish Server에 대한 관리 작업 수행용 유틸리티

시놉시스
           asadmin [--host host]
           [--port port]
           [--user admin-user]
           [--passwordfile filename]
           [--terse={true|false}]
           [--secure={false|true}]
           [--echo={true|false}]
           [--interactive={true|false}]
           [--help]
           [subcommand [options] [operands]]

설명
       Oracle GlassFish Server에 대한 관리 작업을 수행하려면 asadmin
       유틸리티를 사용합니다. 관리 콘솔 인터페이스 대신 이 유틸리티를 사용할
       수 있습니다.

   asadmin 유틸리티의 하위 명령
       하위 명령은 수행 중인 연산 또는 작업을 식별합니다. 하위 명령은
       대소문자를 구분합니다. 각 하위 명령은 로컬 하위 명령 또는 원격 하위
       명령입니다.

       ·   로컬 하위 명령은 DAS(도메인 관리 서버)를 실행하지 않고 실행할 수
           있습니다. 그러나 하위 명령을 실행하고 설치 디렉토리 및 도메인
           디렉토리에 액세스하려면 도메인을 호스팅하는 시스템에 사용자가
           로그인되어 있어야 합니다.

       ·   원격 하위 명령은 항상 DAS에 접속하고 거기서 하위 명령을 실행하여
           실행됩니다. DAS를 실행해야 합니다.

   asadmin 유틸리티 옵션 및 하위 명령 옵션
       옵션은 asadmin 유틸리티 및 해당 하위 명령의 동작을 제어합니다. 또한
       옵션은 대소문자를 구분합니다.

       asadmin 유틸리티에는 다음 유형의 옵션이 있습니다.

       ·   asadmin 유틸리티 옵션.  이러한 옵션은 asadmin 유틸리티의 동작을
           제어하지만 하위 명령의 동작은 제어하지 않습니다.  asadmin 유틸리티
           옵션은 하위 명령의 앞에 위치하거나 뒤에 위치할 수 있지만 하위 명령
           뒤에 위치한 asadmin 유틸리티 옵션은 사용되지 않습니다. 모든 asadmin
           유틸리티 옵션은 하위 명령의 앞에 위치하거나 뒤에 위치해야 합니다.
           asadmin 유틸리티 옵션이 하위 명령의 앞과 뒤에 모두 지정되어 있는
           경우 오류가 발생합니다.  asadmin 유틸리티 옵션에 대한 설명은 이
           도움말 정보의 "옵션" 섹션을 참조하십시오.

       ·   하위 명령 옵션.  이러한 옵션은 하위 명령의 동작을 제어하지만
           asadmin 유틸리티의 동작은 제어하지 않습니다. 하위 명령 옵션은 하위
           명령 뒤에 위치해야 합니다. 하위 명령 옵션에 대한 설명은 하위 명령에
           대한 도움말 정보를 참조하십시오.

       하위 명령 옵션의 이름은 asadmin 유틸리티 옵션의 이름과 같을 수 있지만
       두 옵션의 효과는 서로 다릅니다.

       asadmin 유틸리티 옵션 및 일부 하위 명령 옵션은 긴 형식 및 짧은 형식을
       가집니다.

       ·   옵션의 긴 형식은 두 개의 대시(--) 뒤에 옵션 단어가 있습니다.

       ·   옵션의 짧은 형식은 한 개의 대시(-) 뒤에 한 개의 문자가 있습니다.

       예를 들어 간결한 출력을 지정하기 위한 옵션의 긴 형식 및 짧은 형식은
       다음과 같습니다.

       ·   긴 형식: --terse

       ·   짧은 형식: -t

       기능을 사용 또는 사용 안함으로 설정하도록 전환하는 부울 옵션을 제외한
       대부분의 옵션에는 인수 값이 필요합니다.

   asadmin 하위 명령의 피연산자
       피연산자는 하위 명령이 작용할 항목을 지정합니다. 피연산자는 하위 명령
       옵션의 인수 값 뒤에 위치해야 하며 공백, 탭 또는 두 개의 대시(--) 뒤에
       위치합니다.  asadmin 유틸리티는 하위 명령 옵션 및 해당 값 뒤에 위치한
       모든 부분을 피연산자로 간주합니다.

   asadmin 유틸리티에 대한 옵션의 이스케이프 문자
       다음 유형의 문자에는 asadmin 유틸리티의 옵션에 이스케이프 문자가
       필요합니다.

       ·   UNIX 운영 체제의 메타 문자.  이러한 문자는 셸에서 특별한 의미를
           지닙니다. UNIX 운영 체제의 메타 문자는 다음과 같습니다.
           \/,.!$%^&*|{}[]"'`~;.

           이러한 문자를 사용 안함으로 설정하려면 백슬래시(\) 이스케이프
           문자를 사용하거나 전체 명령행 인수를 작은따옴표(') 문자로 묶습니다.

           다음 예제는 * 문자에 대한 이스케이프 문자의 영향을 보여줍니다.
           이러한 예제에서 현재 작업 디렉토리는 도메인 디렉토리입니다.

           ·   다음 명령(이스케이프 문자 없음)은 현재 디렉토리의 모든 파일을
               표시합니다.

                   prompt% echo *
                   domain1 domain2

           ·   다음 명령(백슬래시(\) 이스케이프 문자가 * 문자 앞에 위치함)은 *
               문자를 표시합니다.

                   prompt% echo \*
                   *

           ·   다음 명령(* 문자가 작은따옴표(') 문자로 묶여 있음)은 * 문자를
               표시합니다.

                   prompt% echo '*'
                   *

           또한 이스케이프 문자는 UNIX 운영 체제 및 Java 언어에서 특수
           문자입니다. 따라서 UNIX 운영 체제 및 다중 모드에서는 명령행의 모든
           이스케이프 문자에 이스케이프 문자를 추가로 적용해야 합니다. 이 요구
           사항은 Windows 운영 체제에는 적용되지 않

           예를 들어 옵션 인수 Test\Escape\Character의 백슬래시(\) UNIX 운영
           체제 메타 문자는 UNIX 및 Windows 시스템에서 다음과 같이 지정되어
           있습니다.

           ·   UNIX 시스템에서 각 백슬래시는 두번째 백슬래시로 이스케이프
               처리되어야 합니다.

                   Test\\Escape\\Character

           ·   Windows 시스템에서는 이스케이프 문자가 필요하지 않습니다.

                   Test\Escape\Character

               참고
               ┌────────────────────────────────────────┐
               │주 UNIX 운영 체제에서 메타 문자가       │
               │분명한 경우 이러한 문자에 이스케이프    │
               │문자가 필요 없습니다. 예를 들어, set(1) │
               │하위 명령에서 설정할 값이 name=value로  │
               │지정됩니다.  name에 등호를 포함할 수    │
               │없으므로 등호를 사용 안함으로 설정하는  │
               │데 이스케이프 문자가 필요 없습니다.     │
               │따라서 등호 뒤의 모든 항목은 set 하위   │
               │명령이 변경 없이 사용하는 해석되지 않은 │
               │문자열입니다.                           │
               └────────────────────────────────────────┘

       ·   공백.  공백은 명령행 인터페이스의 구분 기호입니다. 명령행 인수의
           공백을 명령행 인터페이스의 구분 기호와 구별하려면 다음과 같이
           공백을 이스케이프 처리해야 합니다.

           ·   단일 모드 및 다중 모드의 UNIX 운영 체제 및 다중 모드의 모든
               운영 체제의 경우 백슬래시(\) 이스케이프 문자를 사용하거나 전체
               명령행 인수를 작은따옴표(') 문자나 큰따옴표(") 문자로 묶습니다.

           ·   단일 모드의 Windows 운영 체제의 경우 전체 명령행 인수를
               큰따옴표(") 문자로 묶습니다.

       ·   옵션 구분자.  asadmin 유틸리티는 일부 옵션에 대한 구분자로 콜론
           문자(:)를 사용합니다. 콜론이 다음 항목의 일부분일 경우 백슬래시(\)
           이스케이프 문자가 필요합니다.

           ·   속성

           ·   Java 플랫폼용 가상 시스템(Java Virtual Machine 또는 JVM
               시스템)의 옵션"Java Virtual Machine"과 "JVM"은 Java 플랫폼용
               가상 시스템을 의미합니다.

           예를 들어 하위 명령 create-jvm-options(1)의 피연산자는 다음
           형식으로 JVM 시스템 옵션을 지정합니다.

               (jvm-option-name[=jvm-option-value])
               [:jvm-option-name[=jvm-option-value]]*
           create-jvm-options 하위 명령의 피연산자에 있는 여러 JVM 시스템
           옵션은 콜론(:) 구분자로 구분됩니다.  jvm-option-name 또는
           jvm-option-value에 콜론이 포함된 경우 콜론 앞에 백슬래시(\)
           이스케이프 문자가 필요합니다.

           콜론을 구분자로 사용하는 옵션에서 작은따옴표(') 문자나 큰따옴표(")
           문자 앞에도 백슬래시(\) 이스케이프 문자가 필요합니다.

           작은따옴표(') 문자 없이 사용되는 경우, 이스케이프 문자는 명령행
           인터페이스에서 옵션 구분자를 사용 안함으로 설정합니다.

           단일 모드 및 다중 모드의 UNIX 운영 체제 및 다중 모드의 모든 운영
           체제의 경우 콜론을 구분자로 사용하는 옵션에서 콜론 문자와 백슬래시
           문자가 다음과 같이 지정되어야 합니다.

           ·   리터럴 백슬래시를 하위 명령에 전달하려면 두 개의 백슬래시가
               필요합니다. 따라서 콜론(:)은 두 개의 백슬래시(\\)로 이스케이프
               처리되어야 합니다.

           ·   하위 명령이 백슬래시를 특수 문자로 처리하지 않도록 하려면
               백슬래시를 이스케이프 처리해야 합니다. 따라서 두 개의 리터럴
               백슬래시(\\)를 하위 명령에 전달해야 합니다. 셸이 이러한
               백슬래시를 특수 문자로 처리하지 않도록 하려면 각 백슬래시를
               이스케이프 처리해야 합니다. 따라서 백슬래시는 총 네 개의
               백슬래시(\\\\)로 지정되어야 합니다.

           단일 모드의 Windows 운영 체제의 경우 콜론을 구분자로 사용하는
           옵션에서 콜론(:) 및 백슬래시(\)를 이스케이프 처리하는 데
           백슬래시(\)가 필요합니다.

       백슬래시(\) 이스케이프 문자를 사용하는 대신 큰따옴표(") 문자나
       작은따옴표(') 문자를 사용할 수 있습니다. 백슬래시(\) 문자에 대한 서로
       다른 유형의 따옴표 문자의 영향은 다음과 같습니다.

       ·   큰따옴표(") 문자 사이의 백슬래시(\) 문자는 특수 문자입니다.

       ·   작은따옴표(') 문자 사이의 백슬래시(\) 문자는 특수 문자가 아

   --secure 옵션 사용을 위한 요구 사항
       --secure 옵션 사용을 위한 요구 사항은 다음과 같습니다.

       ·   관리할 도메인이 보안에 대해 구성되어 있어야 합니다.

       ·   DAS 구성에 있는 http-listener 요소의 security-enabled 속성을 true로
           설정해야 합니다.

           이 속성을 설정하려면 set 하위 명령을 사용합니다.

   생성 또는 삭제 후 서버 재시작
       asadmin 하위 명령을 사용하여 구성 항목을 생성하거나 삭제하는 경우 변경
       사항을 적용하려면 DAS를 재시작해야 합니다. DAS를 재시작하려면
       restart-domain(1) 하위 명령을 사용합니다.

   하위 명령 및 asadmin 유틸리티에 대한 도움말 정보
       asadmin 유틸리티 하위 명령에 대한 도움말 정보를 가져오려면 관심 있는
       하위 명령을 help 하위 명령의 피연산자로 지정합니다. 예를 들어
       start-domain(1) 하위 명령에 대한 도움말 정보를 가져오려면 다음을
       입력합니다.

           asadmin help start-domain

       피연산자 없이 help 하위 명령을 실행하는 경우 asadmin 유틸리티에 대한 이
       도움말 정보가 표시됩니다.

       사용 가능한 asadmin 하위 명령 목록을 가져오려면 list-commands(1) 하위
       명령을 사용합니다.

옵션
       --host, -H
           DAS가 실행되고 있는 시스템 이름입니다. 기본값은 localhost입니다.

       --port, -p
           관리용 HTTP 포트 또는 HTTPS 포트입니다. 이 포트는 사용자가 도메인을
           관리하기 위해 웹 브라우저에 지정하는 URL의 포트입니다. 예를 들어
           URL http://localhost:4949에서 포트는 4949입니다.

           관리용 기본 포트 번호는 4848입니다.

       --user, -u
           DAS의 인증된 관리 사용자의 사용자 이름입니다.

           asadmin login 명령을 사용하여 도메인에 인증한 경우 해당 도메인에
           대해서는 후속 작업 시 --user 옵션을 지정할 필요가 없습니다.

       --passwordfile, -W
           특정 형식의 비밀번호 항목을 포함하는 파일의 이름(전체 경로 포함)을
           지정합니다.

           비밀번호 항목에는 AS_ADMIN_ 접두어 뒤에 대문자로 된 비밀번호 이름,
           등호 및 비밀번호가 있어야 합니다.

           asadmin 유틸리티에서 읽는 파일의 항목은 다음과 같습니다.

           ·   AS_ADMIN_PASSWORD=administration-password

           ·   AS_ADMIN_MASTERPASSWORD=master-password

           하위 명령에서 읽는 이 파일의 항목은 다음과 같습니다.

           ·   AS_ADMIN_NEWPASSWORD=new-administration-password
               (start-domain(1) 하위 명령에서 읽음)

           ·   AS_ADMIN_USERPASSWORD=user-password (create-file-user(1) 하위
               명령에서 읽음)

           ·   AS_ADMIN_ALIASPASSWORD=alias-password (create-password-alias(1)
               하위 명령에서 읽음)

           ·   AS_ADMIN_MAPPEDPASSWORD=mapped-password
               (create-connector-security-map(1) 하위 명령에서 읽음)

           ·   AS_ADMIN_WINDOWSPASSWORD=windows-password (create-node-dcom(1),
               install-node-dcom(1), update-node-dcom(1) 하위 명령에서 읽음)

           ·   AS_ADMIN_SSHPASSWORD=sshd-password (create-node-ssh(1),
               install-node(1), install-node-ssh(1), update-node-ssh(1) 하위
               명령에서 읽음)

           ·   AS_ADMIN_SSHKEYPASSPHRASE=sshd-passphrase (create-node-ssh(1),
               install-node(1), install-node-ssh(1), update-node-ssh(1) 하위
               명령에서 읽음)

           ·   AS_ADMIN_JMSDBPASSWORD= jdbc-user-password
               (configure-jms-cluster(1) 하위 명령에서 읽음)

           이러한 비밀번호 항목은 비밀번호 파일에 일반 텍스트로 저장됩니다.
           보안을 강화하려면 create-password-alias 하위 명령을 사용하여 원격
           하위 명령에서 사용될 비밀번호의 별칭을 생성할 수 있습니다. 별칭을
           생성하는 비밀번호는 암호화된 형식으로 저장됩니다. 비밀번호에 대한
           별칭이 존재하면 다음과 같이 별칭이 비밀번호에 대한 항목에
           지정됩니다.

               AS_ADMIN_password-name=${ALIAS=password-alias-name}
           예를 들면 다음과 같습니다.

               AS_ADMIN_SSHPASSWORD=${ALIAS=ssh-password-alias}
               AS_ADMIN_SSHKEYPASSPHRASE=${ALIAS=ssh-key-passphrase-alias}
           인증되지 않은 로그인을 허용하지 않는 도메인에서 모든 원격 하위
           명령은 DAS에 인증하기 위한 관리 비밀번호를 지정해야 합니다.
           비밀번호는 다음 방법 중 하나로 지정할 수 있습니다.

           ·   --passwordfile 옵션을 통해

           ·   login(1) 하위 명령을 통해

           ·   명령 프롬프트에서 대화식으로

           login 하위 명령은 관리 비밀번호를 지정하는 데에만 사용할 수
           있습니다. 원격 하위 명령에서 필요로 하는 다른 비밀번호의 경우
           --passwordfile 옵션을 사용하거나 명령 프롬프트에서 해당 비밀번호를
           지정합니다.

           asadmin login 명령을 사용하여 도메인에 인증한 후 해당 도메인에
           대해서는 후속 작업 시 --passwordfile 옵션을 통해 관리 비밀번호를
           지정할 필요가 없습니다. 그러나 AS_ADMIN_PASSWORD 옵션만 필요하지
           않습니다. 개별 하위 명령(예: update-file-user(1))에서 필요로 하는
           경우 다른 비밀번호(예: AS_ADMIN_USERPASSWORD)를 계속 제공해야
           합니다.

           보안상의 이유로, 환경 변수로 지정된 비밀번호는 asadmin 유틸리티에서
           읽지 않습니다.

           마스터 비밀번호는 명령행이나 환경 변수에서 전달되지 않으며
           --passwordfile 옵션에서 지정하는 파일에서 지정할 수 있습니다.

           AS_ADMIN_MASTERPASSWORD의 기본값은 changeit입니다.

       --terse, -t
           true인 경우 출력 데이터는 사용자가 읽을 수 있도록 하기 위한 것이
           아니라 스크립트 사용에 최적화된 형식으로 간소화됩니다. 일반적으로
           설명 텍스트 및 자세한 상태 메시지도 출력 데이터에서 생략됩니다.
           기본값은 false입니다.

       --secure, -s
           true로 설정된 경우 SSL/TLS를 사용하여 DAS와 통신합니다.

           기본값은 false입니다.

       --echo, -e
           true로 설정된 경우 명령행 명령이 표준 출력에 표시됩니다. 기본값은
           false입니다.

       --interactive, -I
           true로 설정된 경우 필수 옵션에 대한 프롬프트만 표시됩니다.

           기본값은 asadmin 유틸리티가 실행되는 방법에 따라 다릅니다.

           ·   asadmin 유틸리티가 콘솔 창에서 실행되는 경우 기본값은
               true입니다.

           ·   asadmin 유틸리티가 콘솔 창 없이 실행되는 경우(예: 스크립트
               내에서) 기본값은 false입니다.

       --help, -?
           asadmin 유틸리티에 대한 도움말 텍스트를 표시합니다.

예제
       예 1, 단일 모드에서 asadmin 유틸리티 하위 명령 실행
           이 예제는 단일 모드에서 list-applications(1) 하위 명령을
           실행합니다. 이 예제에서는 모든 옵션의 기본값이 사용됩니다.

           이 예제는 응용 프로그램 hello가 로컬 호스트에 배치되었음을
           보여줍니다.

               asadmin list-applications
               hello <web>

               Command list-applications executed successfully.

       예 2, 하위 명령으로 asadmin 유틸리티 옵션 지정
           이 예제는 단일 모드에서 list-applications 하위 명령으로 --host
           asadmin 유틸리티 옵션을 지정합니다. 이 예제에서 DAS는 호스트
           srvr1.example.com에서 실행되고 있습니다.

           이 예제는 응용 프로그램 basic-ezcomp, scrumtoys, ejb31-war 및
           automatic-timer-ejb가 호스트 srvr1.example.com에 배치되었음을
           보여줍니다.

               asadmin --host srvr1.example.com list-applications
               basic-ezcomp <web>
               scrumtoys <web>
               ejb31-war <ejb, web>
               automatic-timer-ejb <ejb>

               Command list-applications executed successfully.

       예 3, asadmin 유틸리티 옵션 및 하위 명령 옵션 지정
           이 예제는 단일 모드에서 list-applications 하위 명령으로 --host
           asadmin 유틸리티 옵션 및 --type 하위 명령 옵션을 지정합니다. 이
           예제에서 DAS는 호스트 srvr1.example.com에서 실행되고 있으며 web
           유형의 응용 프로그램이 나열되어 있습니다.

               asadmin --host srvr1.example.com list-applications --type web
               basic-ezcomp <web>
               scrumtoys <web>
               ejb31-war <ejb, web>

               Command list-applications executed successfully.

       예 4, 작은따옴표 문자로 명령행 인수 이스케이프 처리
           이 예제의 명령은 속성값 c:\extras\pmdapp에 백슬래시(\) UNIX 운영
           체제 메타 문자 및 콜론(:) 옵션 구분자를 지정합니다.

           단일 모드 및 다중 모드의 UNIX 운영 체제 및 다중 모드의 모든 운영
           체제의 경우 백슬래시(\) 메타 문자 및 콜론(:) 옵션 구분자를
           이스케이프 처리하는 데 백슬래시(\)가 필요합니다.

               asadmin deploy --property extras.home='c\:\\extras\\pmdapp' pmdapp.war
               Application deployed with name pmdapp.
               Command deploy executed successfully
           단일 모드의 Windows 운영 체제의 경우 작은따옴표(')가 다음과 같은
           다른 이스케이프 문자에 대한 필요성을 없애줍니다.

               asadmin deploy --property extras.home='c:\extras\pmdapp' pmdapp.war
               Application deployed with name pmdapp.
               Command deploy executed successfully

       예 5, 옵션에 UNIX 운영 체제 메타 문자 지정
           이 예제의 명령은 옵션 인수 Test\Escape\Character에 백슬래시(\) UNIX
           운영 체제 메타 문자를 지정합니다.

           단일 모드 및 다중 모드의 UNIX 운영 체제 및 다중 모드의 모든 운영
           체제의 경우 백슬래시(\) 메타 문자를 이스케이프 처리하는 데
           백슬래시(\)가 필요합니다.

               asadmin --user admin --passwordfile gfpass create-jdbc-connection-pool
               --datasourceclassname sampleClassName
               --description Test\\Escape\\Character
               sampleJDBCConnectionPool
           단일 모드의 Windows 운영 체제의 경우 다음과 같은 이스케이프 문자가
           필요하지 않습니다.

               asadmin --user admin --passwordfile gfpass create-jdbc-connection-pool
               --datasourceclassname sampleClassName
               --description Test\Escape\Character
               sampleJDBCConnectionPool

       예 6, 공백을 포함하는 명령행 인수 지정
           이 예제의 명령은 피연산자 C:\Documents and
           Settings\gfuser\apps\hello.war에 공백을 지정합니다.

           단일 모드 또는 다중 모드의 모든 운영 체제의 경우 전체 피연산자를
           큰따옴표(") 문자로 묶을 수 있습니다.

               asadmin deploy "C:\Documents and Settings\gfuser\apps\hello.war"
               Application deployed with name hello.
               Command deploy executed successfully.
           단일 모드 및 다중 모드의 UNIX 운영 체제 및 다중 모드의 모든 운영
           체제의 경우 전체 명령행 인수를 작은따옴표(') 문자로 묶을 수
           있습니다.

               asadmin> deploy 'C:\Documents and Settings\gfuser\apps\hello.war'
               Application deployed with name hello.
               Command deploy executed successfully.
           다른 방법으로, 단일 모드 및 다중 모드의 UNIX 운영 체제 및 다중
           모드의 모든 운영 체제의 경우 피연산자의 각 공백 앞에 백슬래시(\)
           이스케이프 문자를 사용할 수 있습니다. 이 경우 피연산자의 각
           백슬래시 앞에 백슬래시(\) 이스케이프 문자가 필요합니다.

               asadmin> deploy C:\\Documents\ and\ Settings\\gfuser\\apps\\hello.war
               Application deployed with name hello.
               Command deploy executed successfully.

       예 7, 속성에 메타 문자 및 옵션 구분자 문자 지정
           이 예제의 명령은 create-jdbc-connection-pool(1) 하위 명령의
           --property 옵션에 백슬래시(\) UNIX 운영 체제 메타 문자 및 콜론(:)
           옵션 구분자 문자를 지정합니다.

           --property 옵션의 이름 및 값 쌍은 다음과 같습니다.

               user=dbuser
               passwordfile=dbpasswordfile
               DatabaseName=jdbc:derby
               server=http://localhost:9092
           단일 모드 및 다중 모드의 UNIX 운영 체제 및 다중 모드의 모든 운영
           체제의 경우 콜론(:) 및 백슬래시(\)를 이스케이프 처리하는 데
           백슬래시(\)가 필요합니다.

               asadmin --user admin --passwordfile gfpass create-jdbc-connection-pool
               --datasourceclassname com.derby.jdbc.jdbcDataSource
               --property user=dbuser:passwordfile=dbpasswordfile:
               DatabaseName=jdbc\\:derby:server=http\\://localhost\\:9092 javadb-pool
           또는 --property 옵션에 대한 전체 인수를 작은따옴표(') 문자로 묶을
           수 있습니다.

               asadmin --user admin --passwordfile gfpass create-jdbc-connection-pool
               --datasourceclassname com.derby.jdbc.jdbcDataSource
               --property 'user=dbuser:passwordfile=dbpasswordfile:
               DatabaseName="jdbc:derby":server="http://localhost:9092"' javadb-pool
           단일 모드의 Windows 운영 체제의 경우 콜론(:)을 이스케이프 처리하는
           데에만 백슬래시(\)가 필요하고 백슬래시(\)를 이스케이프 처리하는
           데에는 백슬래시가 필요하지 않

               asadmin --user admin --passwordfile gfpass create-jdbc-connection-pool
               --datasourceclassname com.derby.jdbc.jdbcDataSource
               --property user-dbuser:passwordfile-dbpasswordfile:
               DatabaseName=jdbc\:derby:server=http\://localhost\:9092 javadb-pool
           모든 운영 체제의 경우 값을 큰따옴표 문자 또는 작은따옴표 문자로
           묶으면 값에 있는 콜론(:)을 이스케이프 처리할 필요가 없습니다.

               asadmin --user admin --passwordfile gfpass create-jdbc-connection-pool
               --datasourceclassname com.derby.jdbc.jdbcDataSource
               --property user=dbuser:passwordfile=dbpasswordfile:
               DatabaseName=\"jdbc:derby\":server=\"http://localhost:9092\" javadb-pool

       예 8, JVM 시스템 옵션에 옵션 구분자 및 이스케이프 문자 지정
           이 예제의 명령은 -Dlocation=c:\sun\appserver JVM 시스템 옵션에
           다음과 같은 문자를 지정합니다.

           ·   콜론(:) 옵션 구분자

           ·   백슬래시(\) 이스케이프 문자

           단일 모드 및 다중 모드의 UNIX 운영 체제 및 다중 모드의 모든 운영
           체제의 경우 이러한 문자가 다음과 같이 지정되어야 합니다.

           ·   리터럴 백슬래시를 하위 명령에 전달하려면 두 개의 백슬래시가
               필요합니다. 따라서 콜론(:)은 두 개의 백슬래시(\\)로 이스케이프
               처리되어야 합니다.

           ·   하위 명령이 백슬래시를 특수 문자로 처리하지 않도록 하려면
               백슬래시를 이스케이프 처리해야 합니다. 따라서 두 개의 리터럴
               백슬래시(\\)를 하위 명령에 전달해야 합니다. 셸이 이러한
               백슬래시를 특수 문자로 처리하지 않도록 하려면 각 백슬래시를
               이스케이프 처리해야 합니다. 따라서 백슬래시는 총 네 개의
               백슬래시(\\\\)로 지정되어야 합니다.

           결과 명령은 다음과 같습니다.

               asadmin create-jvm-options --target test-server
               -e -Dlocation=c\\:\\\\sun\\\\appserver
           단일 모드의 Windows 운영 체제의 경우 콜론(:) 및 백슬래시(\)를
           이스케이프 처리하는 데 백슬래시(\)가 필요합니다.

               asadmin create-jvm-options --target test-server
               -e -Dlocation=c\:\\sun\\appserver

       예 9, 이스케이프 문자가 포함된 옵션 지정
           이 예제의 명령은 "Hello\App"\authentication 옵션 인수에 백슬래시(\)
           문자 및 큰따옴표(") 문자를 지정합니다.

           단일 모드 및 다중 모드의 UNIX 운영 체제 및 다중 모드의 모든 운영
           체제의 경우 큰따옴표 문자(") 및 백슬래시(\)를 이스케이프 처리하는
           데 백슬래시(\)가 필요합니다.

               asadmin set-web-env-entry --name="Hello User" --type=java.lang.String
               --value=techscribe --description=\"Hello\\App\"\\authentication hello
           단일 모드의 Windows 운영 체제의 경우 큰따옴표(")를 이스케이프
           처리하는 데에만 백슬래시(\)가 필요하고 백슬래시(\)를 이스케이프
           처리하는 데에는 백슬래시가 필요하지 않

               asadmin set-web-env-entry --name="Hello User" --type=java.lang.String
               --value=techscribe --description=\"Hello\App\"\authentication hello

환경 변수
       환경 변수는 다음 표에 표시된 것처럼 asadmin 유틸리티 옵션의 기본값을
       수정합니다.

       ┌─────────────────────────────┬─────────────────────────┐
       │                             │                         │
       │       환경 변수             │        asadmin 유틸리티 │
       │                             │        옵션             │
       ├─────────────────────────────┼─────────────────────────┤
       │                             │                         │
       │       AS_ADMIN_TERSE        │        --terse          │
       ├─────────────────────────────┼─────────────────────────┤
       │                             │                         │
       │       AS_ADMIN_ECHO         │        --echo           │
       ├─────────────────────────────┼─────────────────────────┤
       │                             │                         │
       │       AS_ADMIN_INTERACTIVE  │        --interactive    │
       ├─────────────────────────────┼─────────────────────────┤
       │                             │                         │
       │       AS_ADMIN_HOST         │        --host           │
       ├─────────────────────────────┼─────────────────────────┤
       │                             │                         │
       │       AS_ADMIN_PORT         │        --port           │
       ├─────────────────────────────┼─────────────────────────┤
       │                             │                         │
       │       AS_ADMIN_SECURE       │        --secure         │
       ├─────────────────────────────┼─────────────────────────┤
       │                             │                         │
       │       AS_ADMIN_USER         │        --user           │
       ├─────────────────────────────┼─────────────────────────┤
       │                             │                         │
       │       AS_ADMIN_PASSWORDFILE │        --passwordfile   │
       ├─────────────────────────────┼─────────────────────────┤
       │                             │                         │
       │       AS_ADMIN_HELP         │        --help           │
       └─────────────────────────────┴─────────────────────────┘

속성
       다음 속성에 대한 설명은 attributes(5)를 참조하십시오.

       ┌─────────────────────────┬───────────────┐
       │                         │               │
       │       속성 유형         │        속성값 │
       ├─────────────────────────┼───────────────┤
       │                         │               │
       │       인터페이스 안정성 │        불안정 │
       └─────────────────────────┴───────────────┘

참조
       configure-jms-cluster(1), create-connector-security-map(1),
       create-file-user(1), create-jdbc-connection-pool(1),
       create-jvm-options(1), create-node-dcom(1), create-node-ssh(1),
       create-password-alias(1), deploy(1), install-node(1),
       install-node-dcom(1), install-node-ssh(1), list-applications(1),
       list-commands(1), login(1), restart-domain(1), set(1),
       set-web-env-entry(1), start-domain(1), update-file-user(1),
       update-node-dcom(1), update-node-ssh(1)

       attributes(5)

                                2012년 1월 6일                     ASADMIN(1M)
