DOTTED-NAMES(5ASC)                                          DOTTED-NAMES(5ASC)

參考名
       dotted-names - 使用句點分隔名稱元素的語法

說明
       帶點名稱是用於特定 GlassFish Server
       元素的識別碼，例如可組態或可監視的物件。帶點名稱使用圓點的點號 (.)
       做為分隔符，以分隔元素名稱的各個部分。帶點名稱中的點號類似於 UNIX
       檔案系統中分隔檔案絕對路徑名稱層級的斜線 (/) 字元。

       asadmin 公用程式的子命令如下使用帶點名稱：

       ·   list 子命令提供管理元件屬性的完全合格帶點名稱。

       ·   get 子命令提供屬性的存取權。

       ·   set 子命令會讓您修改可組態屬性和設定特性。

       組態階層並非嚴格基於網域的模式文件，並且屬性可以修改。監視階層的屬性是唯讀。

       組態帶點名稱使用下列格式 (斜體表示可以置換)：

       config-name.config-element-name.primary-key.attribute-name |
       instance-name.config-element-name.primary-key.attribute-name

       資源帶點名稱使用下列格式 (斜體表示可以置換)：

       server-name.resource-name.primary-key.attribute-name |
       domain.resources.resource-name.primary-key.attribute-name

       下列規則適用於構成帶點名稱：

       ·   最上層是組態、伺服器或網域名稱。例如，server-config
           (預設組態)、server (預設伺服器) 或 domain1 (預設網域)。

       ·   名稱中的兩個連續部分皆會以點號 (.) 來分隔。

       ·   名稱中的某部分通常可用來識別伺服器子系統或其特定實例。例如，web-container、log-service、thread-pool-1。

       ·   如果名稱本身的任何部分包含點號 (.)，則必須在該點號前面加上 /
           (反斜線) 以逸出，這樣 .  (點號)
           才不會被當成分隔符號。如需退出字元的更多資訊，請參閱 asadmin(1M)
           說明頁面。

       ·   * (星號)
           字元可用在帶點名稱中的任何位置，且它的作用如同常規表示式中的萬用字元。此外，*
           可摺疊帶點名稱的所有部分。例如，較長的帶點名稱
           this.is.really.long.hierarchy 可以縮寫為
           th*.hierarchy。帶點名稱的各個部分皆會以 .  (點號) 來分隔。

               注意
               ┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
               │注意 對於 shell                                                                                                      │
               │或命令解譯器具有特殊意義的字元，例如 *                                                                               │
               │(星號)，應該根據 Shell                                                                                               │
               │的適當情況使用引號括住或使用逸出字元，例如，將引數放在引號中。在多重模式中，僅包含空格、引號或反斜線的參數需要引號。 │
               └─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘

       ·   get 和 list 子命令的 --monitor
           選項會選取監視或組態階層。如果子命令指定 --monitor=false
           (預設值)，則會選取組態階層。如果子命令指定
           --monitor=true，將選取監視層級。

       ·   如果您知道完整帶點名稱並且不需要使用萬用字元，則 list、get 和 set
           子命令會以不同方式處理此名稱：

           ·   list
               子命令會將此完整的帶點名稱視為抽象階層中父系節點的名稱。如果將此名稱指定至
               list
               子命令，將傳回該層級的下一層名稱。例如，下列命令將列出已建置至該網域或預設伺服器的所有
               Web 模組：

                   asadmin> list server.applications.web-module

           ·   get 和 set 子命令會將完整的帶點名稱視為節點
               (其帶點名稱本身是移除此帶點名稱最後一個部分後所得的名稱)
               屬性的完全合格的名稱。將此名稱指定至 get 或 set
               子命令時，該子命令會作用於具有該屬性的值
               (如果存在此類屬性)。您永遠不會遇到此情況，因為為了尋找階層中特定節點的屬性名稱，您必須使用萬用字元
               *。例如，下列帶點名稱會傳回已建置至該網域或預設伺服器的 Web
               應用程式的環境根目錄：

                   server.applications.web-module.JSPWiki.context-root

範例
       範例 1, 列出所有可組態的元素
           此範例會列出所有可組態的元素。

               asadmin> list *
           將顯示類似以下的輸出：

               applications
               configs
               configs.config.server-config
               configs.config.server-config.admin-service
               configs.config.server-config.admin-service.das-config
               configs.config.server-config.admin-service.jmx-connector.system
               configs.config.server-config.admin-service.property.adminConsoleContextRoot
               configs.config.server-config.admin-service.property.adminConsoleDownloadLocation
               configs.config.server-config.admin-service.property.ipsRoot
               configs.config.server-config.ejb-container
               configs.config.server-config.ejb-container.ejb-timer-service
               configs.config.server-config.http-service
               configs.config.server-config.http-service.access-log
               configs.config.server-config.http-service.virtual-server.__asadmin
               configs.config.server-config.http-service.virtual-server.server
               configs.config.server-config.iiop-service
               configs.config.server-config.iiop-service.iiop-listener.SSL
               configs.config.server-config.iiop-service.iiop-listener.SSL.ssl
               configs.config.server-config.iiop-service.iiop-listener.SSL_MUTUALAUTH
               configs.config.server-config.iiop-service.iiop-listener.SSL_MUTUALAUTH.ssl
               configs.config.server-config.iiop-service.iiop-listener.orb-listener-1
               configs.config.server-config.iiop-service.orb
               configs.config.server-config.java-config
               configs.config.server-config.jms-service
               configs.config.server-config.jms-service.jms-host.default_JMS_host
               configs.config.server-config.mdb-container
               configs.config.server-config.monitoring-service
               configs.config.server-config.monitoring-service.module-monitoring-levels
               ...
               property.administrative.domain.name
               resources
               resources.jdbc-connection-pool.DerbyPool
               resources.jdbc-connection-pool.DerbyPool.property.DatabaseName
               resources.jdbc-connection-pool.DerbyPool.property.Password
               resources.jdbc-connection-pool.DerbyPool.property.PortNumber
               resources.jdbc-connection-pool.DerbyPool.property.User
               resources.jdbc-connection-pool.DerbyPool.property.connectionAttributes
               resources.jdbc-connection-pool.DerbyPool.property.serverName
               resources.jdbc-connection-pool.__TimerPool
               resources.jdbc-connection-pool.__TimerPool.property.connectionAttributes
               resources.jdbc-connection-pool.__TimerPool.property.databaseName
               resources.jdbc-resource.jdbc/__TimerPool
               resources.jdbc-resource.jdbc/__default
               servers
               servers.server.server
               servers.server.server.resource-ref.jdbc/__TimerPool
               servers.server.server.resource-ref.jdbc/__default
               system-applications
               Command list executed successfully.

       範例 2, 列出所有可監視的物件
           下列範例會列出所有可監視的物件。

               asadmin> list --monitor *
           將顯示類似以下的輸出：

               server
               server.jvm
               server.jvm.class-loading-system
               server.jvm.compilation-system
               server.jvm.garbage-collectors
               server.jvm.garbage-collectors.Copy
               server.jvm.garbage-collectors.MarkSweepCompact
               server.jvm.memory
               server.jvm.operating-system
               server.jvm.runtime
               server.network
               server.network.admin-listener
               server.network.admin-listener.connections
               server.network.admin-listener.file-cache
               server.network.admin-listener.keep-alive
               server.network.admin-listener.thread-pool
               server.network.http-listener-1
               server.network.http-listener-1.connections
               server.network.http-listener-1.file-cache
               server.network.http-listener-1.keep-alive
               server.network.http-listener-1.thread-pool
               server.transaction-service
               Command list executed successfully.

另請參閱
       list(1), get(1), set(1)

       asadmin(1M)

                              2009 年 9 月 14 日            DOTTED-NAMES(5ASC)
