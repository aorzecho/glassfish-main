ASADMIN(1M)                                                        ASADMIN(1M)

名前
       asadmin - Oracle GlassFish Serverの管理タスクを実行するユーティリティ

概要
           asadmin [--host host]
           [--port port]
           [--user admin-user]
           [--passwordfile filename]
           [--terse={true|false}]
           [--secure={false|true}]
           [--echo={true|false}]
           [--interactive={true|false}]
           [--help]
           [subcommand [options] [operands]]

説明
       asadminユーティリティを使用して、Oracle GlassFish
       Serverの管理タスクを実行します。このユーティリティは、管理コンソールインタフェースのかわりに使用できます。

   asadminユーティリティのサブコマンド
       このサブコマンドは、実行する操作またはタスクを識別します。サブコマンドは大文字と小文字を区別します。サブコマンドは、ローカル・サブコマンドとリモート・サブコマンドのいずれかです。

       ·   ローカル・サブコマンドは、ドメイン管理サーバー(DAS)を稼働させずに実行できます。ただし、サブコマンドを実行してインストール・ディレクトリやドメイン・ディレクトリにアクセスするには、ドメインのホスト・マシンにログインする必要があります。

       ·   リモート・コマンドは常に、DASに接続してDASでサブコマンドを実行することにより実行されます。稼働中のDASが必要です。

   asadminユーティリティのオプションとサブコマンドのオプション
       オプションは、asadminユーティリティとそのサブコマンドの動作を制御します。オプションでも大文字と小文字を区別します。

       asadminユーティリティには、次のタイプのオプションがあります。

       ·   asadminユーティリティのオプション。これらのオプションは、asadminユーティリティの動作を制御します。サブコマンドの動作は制御しません。asadminユーティリティのオプションは、サブコマンドの前後に指定できますが、サブコマンドの後にasadminユーティリティのオプションを指定することは推奨しません。asadminユーティリティのオプションは、サブコマンドの前または後のいずれか一方にすべて指定する必要があります。asadminユーティリティのオプションをサブコマンドの前と後の両方に指定した場合、エラーが発生します。asadminユーティリティのオプションの詳細は、このヘルプ情報の「オプション」の項を参照してください。

       ·   サブコマンド・オプション。これらのオプションは、サブコマンドの動作を制御しますが、asadminユーティリティの動作は制御しません。サブコマンド・オプションは、サブコマンドの後に指定する必要があります。サブコマンドのオプションの詳細は、サブコマンドのヘルプ情報を参照してください。

       サブコマンド・オプションの名前が、asadminユーティリティのオプションの名前と同じ場合がありますが、2つのオプションの効果は異なります。

       asadminユーティリティのオプションと、一部のサブコマンドのオプションには、長い形式と短い形式があります。

       ·   オプションの長い形式では、ダッシュ2つ(--)の後にオプションのワードが続きます。

       ·   オプションの短い形式では、ダッシュ1つ(-)の後に文字1つが続きます。

       たとえば、terse出力を指定するオプションの長い形式と短い形式は次のとおりです。

       ·   長い形式: --terse

       ·   短い形式: -t

       ブール型オプションを除く多くのオプションには、機能の有効と無効を切り替える引数の値が必要です。

   asadminサブコマンドのオペランド
       オペランドは、サブコマンドの動作対象となる項目を指定します。オペランドは、サブコマンド・オプションの引数の後に指定する必要があり、空白1文字、タブ1文字、またはダッシュ2文字(--)で区切ります。asadminユーティリティは、サブコマンド・オプションとその値に続くものはすべて、オペランドとして扱います。

   asadminユーティリティのオプションで使用するエスケープ文字
       asadminユーティリティのオプションでは、次のタイプの文字に対してエスケープ文字が必要になります。

       ·   UNIXオペレーティング・システムのメタ文字。これらの文字は、シェル内で特別な意味を持ちます。UNIXオペレーティング・システムのメタ文字には次のものが含まれます:
           \/,.!$%^&*|{}[]"'`~;

           これらの文字を無効にするには、バックスラッシュ(\)のエスケープ文字を使用するか、コマンド行の引数全体を単一引用符(')文字で囲みます。

           次の例は、*文字に与えるエスケープ文字の影響を示しています。これらの例では、現在の作業ディレクトリはドメインのディレクトリになります。

           ·   次のコマンドは、エスケープ文字を使用せずに、現在のディレクトリにあるすべてのファイルをエコーします。

                   prompt% echo *
                   domain1 domain2

           ·   バックスラッシュ(\)エスケープ文字を*文字の前に配置した次のコマンドは、*文字をエコーします。

                   prompt% echo \*
                   *

           ·   *文字を単一引用符(')文字で囲んだ次のコマンドは、*文字をエコーします。

                   prompt% echo '*'
                   *

           エスケープ文字は、UNIXオペレーティング・システムとJAVA言語でも特殊文字となります。そのため、UNIXオペレーティング・システムとマルチモードでは、コマンド行の各エスケープ文字に追加のエスケープ文字を適用する必要があります。この要件は、Windowsオペレーティング・システムには適用さ

           たとえば、オプション引数Test\Escape\CharacterにあるUNIXオペレーティング・システムのメタ文字であるバックスラッシュ(\)は、UNIXシステムとWindowsシステムでそれぞれ次のように指定されます。

           ·   UNIXシステムでは、各バックスラッシュは2つ目のバックスラッシュでエスケープする必要があります。

                   Test\\Escape\\Character

           ·   Windowsシステムでは、エスケープ文字は必要ありません。

                   Test\Escape\Character

               注記
               ┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
               │注意                                                                                                                                                                                                                                                                                                                                                                                                     │
               │UNIXオペレーティング・システムのメタ文字が明白なコンテキストでは、これらの文字にエスケープ文字は不要です。たとえば、set(1)サブコマンドでは、設定する値が名
               └─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘

       ·   空白。空白はコマンド行インタフェースでの区切り文字です。コマンド行引数の空白とコマンド行インタフェースの区切り文字を区別するために、空白は次のようにエスケープする必要があります。

           ·   シングル・モードとマルチモードのUNIXオペレーティング・システム、およびマルチモードのすべてのオペレーティング・システムでは、バックスラッシュ(\)エスケープ文字を使用するか、コマンド行引数全体を単一引用符(')文字または二重引用符(")文字で囲みます。

           ·   シングル・モードのWindowsオペレーティング・システムでは、コマンド行引数全体を二重引用符(")文字で囲みます。

       ·   オプションのデリミタ。asadminユーティリティは、一部のオプションのデリミタとしてコロン(:)を使用します。コロンが次のいずれかの項目の中に含まれている場合、バックスラッシュ(\)エスケープ文字が必要となります。

           ·   プロパティ

           ·   Javaプラットフォームの仮想マシン(Java仮想マシンまたはJVMマシン)のオプション「Java仮想マシン」と「JVM」という用語は、Javaプラットフォームの仮想マシンを意味しています。

           たとえば、create-jvm-options(1)サブコマンドのオペランドは、次の形式でJVMマシンのオプションを指定します。

               (jvm-option-name[=jvm-option-value])
               [:jvm-option-name[=jvm-option-value]]*
           create-jvm-optionsサブコマンドのオペランドにある複数のJVMマシンのオプションは、コロン(:)のデリミタによって区切られています。jvm-option-nameまたはjvm-option-valueにコロンが含まれている場合、バックスラッシュ(\)エスケープ文字をコロンの前に配置する必要があります。

           コロンをデリミタとして使用するオプションでは、単一引用符(')文字または二重引用符(")文字の前にもバックスラッシュ(\)エスケープ文字が必須です。

           単一引用符(')文字なしで使用すると、エスケープ文字はコマンド行インタフェースのオプションのデリミタを無効にします。

           シングル・モードとマルチモードのUNIXオペレーティング・システム、およびマルチモードのすべてのオペレーティング・システムの場合、コロンをデリミタとして使用するオプションでは、コロン文字およびバックスラッシュ文字は、次のように指定する必要があります。

           ·   リテラル・バックスラッシュをサブコマンドに渡すには、2つのバックスラッシュが必要になります。そのため、コロン(:)を2つのバックスラッシュ(\\)でエスケープする必要があります。

           ·   サブコマンドがバックスラッシュを特殊文字として扱うことを防ぐために、バックスラッシュをエスケープする必要があります。その結果、サブコマンドには2つのリテラル・バックスラッシュ(\\)を渡す必要があります。シェルがこれらのバックスラッシュを特殊文字として解釈することを防ぐために、各バックスラッシュをエスケープする必要があります。そのため、バックスラッシュには合計4つのバックスラッシュ(\\\\)を指定する必要があります。

           シングル・モードのWindowsオペレーティング・システムの場合、コロンをデリミタとして使用するオプションでは、コロン(:)とバックスラッシュ(\)をエスケープするために、バックスラッシュ(\)が必須になります。

       バックスラッシュ(\)エスケープ文字を使用するかわりに、二重引用符(")文字または単一引用符(')文字を使用することができます。様々なタイプの引用符文字がバックスラッシュ(\)文字に与える影響を次に示します。

       ·   二重引用符(")文字間では、バックスラッシュ(\)文字は特殊文字となります。

       ·   単一引用符(')文字間では、バックスラッシュ(\)文字は特殊文字にはな

   --secureオプションを使用するための要件
       --secureオプションを使用するための要件を次に示します。

       ·   管理しているドメインがセキュリティ用に構成されている必要があります。

       ·   DAS構成のhttp-listener要素のsecurity-enabled属性はtrueに設定されている必要があります。

           この属性を設定するには、set サブコマンドを使用します。

   作成後または削除後のサーバーの再起動
       asadminサブコマンドを使用して構成項目を作成または削除する場合、変更を有効にするためにDASを再起動する必要があります。DASを再起動するには、restart-domain(1)サブコマンドを使用します。

   サブコマンドとasadminユーティリティのヘルプ情報
       asadminユーティリティのサブコマンドのヘルプ情報を取得するには、目的のサブコマンドをhelpサブコマンドのオペランドとして指定します。たとえば、start-domain(1)サブコマンドのヘルプ情報を取得するには、次のように入力します。

           asadmin help start-domain

       オペランドを指定せずにhelpサブコマンドを実行した場合、asadminユーティリティのヘルプ情報が表示されます。

       使用可能なasadminサブコマンドの一覧を取得するには、list-commands(1)サブコマンドを使用します。

オプション
       --host, -H
           DASが稼働中のマシン名。デフォルト値は、localhostです。

       --port, -p
           管理用のHTTPポートまたはHTTPSポート。このポートは、ドメインを管理するためにWebブラウザで指定するURL内のポートです。たとえば、URLがhttp://localhost:4949の場合、ポート番号は4949になります。

           管理用のデフォルトのポート番号は4848です。

       --user, -u
           DASの承認された管理ユーザーのユーザー名。

           asadmin
           loginコマンドを使用してドメインに対して認証を行った場合、ドメインでのその後の操作で--userオプションを指定する必要はありません。

       --passwordfile, -W
           パスワード・エントリが特定の形式で格納されているファイルの名前をフルパスで指定します。

           パスワードのエントリには、AS_ADMIN_接頭辞とそれに続く大文字のパスワード名、等号記号、およびパスワードが含まれている必要があります。

           asadminユーティリティによって読み取られるファイルのエントリを次に示します。

           ·   AS_ADMIN_PASSWORD=administration-password

           ·   AS_ADMIN_MASTERPASSWORD=master-password

           サブコマンドによって読み取られるこのファイルのエントリを次に示します。

           ·   AS_ADMIN_NEWPASSWORD=new-administration-password
               (start-domain(1)サブコマンドによって読み取られます)

           ·   AS_ADMIN_USERPASSWORD=user-password
               (create-file-user(1)サブコマンドによって読み取られます)

           ·   AS_ADMIN_ALIASPASSWORD=alias-password
               (create-password-alias(1)サブコマンドによって読み取られます)

           ·   AS_ADMIN_MAPPEDPASSWORD=mapped-password
               (create-connector-security-map(1)サブコマンドによって読み取られます)

           ·   AS_ADMIN_WINDOWSPASSWORD=windows-password
               (create-node-dcom(1)、install-node-dcom(1)およびupdate-node-dcom(1)サブコマンドによって読み取られます)

           ·   AS_ADMIN_SSHPASSWORD=sshd-password
               (create-node-ssh(1)、install-node(1)、install-node-ssh(1)およびupdate-node-ssh(1)サブコマンドによって読み取られます)

           ·   AS_ADMIN_SSHKEYPASSPHRASE=sshd-passphrase
               (create-node-ssh(1)、install-node(1)、install-node-ssh(1)およびupdate-node-ssh(1)サブコマンドによって読み取られます)

           ·   AS_ADMIN_JMSDBPASSWORD= jdbc-user-password
               (configure-jms-cluster(1)サブコマンドによって読み取られます)

           これらのパスワード・エントリはパスワード・ファイル内にクリア・テキストで格納されます。セキュリティを強化するには、create-password-aliasサブコマンドを使用して、リモート・サブコマンドが使用するパスワードに対して別名を作成できます。別名が作成されたパスワードは暗号化形式で格納されます。パスワードの別名が存在する場合、次のようにパスワードのエントリで別名が指定されます。

               AS_ADMIN_password-name=${ALIAS=password-alias-name}
           例:

               AS_ADMIN_SSHPASSWORD=${ALIAS=ssh-password-alias}
               AS_ADMIN_SSHKEYPASSPHRASE=${ALIAS=ssh-key-passphrase-alias}
           承認されていないログインを許可しないドメインでは、すべてのリモート・サブコマンドは、DASに対する認証で管理パスワードを指定する必要があります。パスワードは次のいずれかの方法で指定できます。

           ·   --passwordfileオプションを使用する

           ·   login(1)サブコマンドを使用する

           ·   コマンド・プロンプトで対話形式で指定する

           loginサブコマンドは、管理パスワードのみを指定するために使用できます。リモート・サブコマンドで要求されるその他のパスワードについては、--passwordfileオプションを使用するか、コマンド・プロンプトでパスワードを指定してください。

           asadmin
           loginコマンドを使用してドメインに対して認証を行った後は、ドメインでのその後の操作で--passwordfileオプションを使用して管理パスワードを指定する必要はありません。ただし、AS_ADMIN_PASSWORDオプションのみ不要となります。update-file-user(1)などの個々のサブコマンドで入力を求められる場合は、AS_ADMIN_USERPASSWORDなどの他のパスワードを指定する必要があります。

           セキュリティ上の理由により、環境変数として指定されたパスワードはasadminユーティリティで読み取られません。

           マスター・パスワードは、コマンド行または環境変数では伝播されませんが、--passwordfileオプションで指定したファイルで指定できます。

           AS_ADMIN_MASTERPASSWORDのデフォルト値はchangeitです。

       --terse, -t
           trueの場合、出力データは非常に簡潔で、ユーザーにとって読みやすい形式ではなく、スクリプトで使用するために最適化された形式となります。通常、出力データでは、説明テキストと詳細なステータス・メッセージも省略されています。デフォルトはfalseです。

       --secure, -s
           trueに設定した場合、SSL/TLSを使用してDASと通信します。

           デフォルトはfalseです。

       --echo, -e
           trueに設定すると、コマンド行の文が標準出力にエコーされます。デフォルトはfalseです。

       --interactive, -I
           trueに設定すると、必須オプションの入力のみが要求されます。

           デフォルト値は、asadminユーティリティが実行されている方法に依存します。

           ·   asadminユーティリティがコンソール・ウィンドウから実行されている場合、デフォルト値はtrueになります。

           ·   asadminユーティリティがコンソール・ウィンドウを使用せずに、スクリプト内などで実行されている場合、デフォルト値はfalseになります。

       --help, -?
           asadminユーティリティに関するヘルプ・テキストを表示します。

例
       例 1, シングル・モードでのasadminユーティリティのサブコマンド実行
           この例は、シングル・モードでサブコマンドlist-applications(1)を実行します。この例では、すべてのオプションでデフォルト値を使用します。

           この例は、ローカル・ホストでアプリケーションhelloがデプロイされていることを示します。

               asadmin list-applications
               hello <web>

               Command list-applications executed successfully.

       例 2, サブコマンドを使用したasadminユーティリティ・オプションの指定
           この例では、シングル・モードでlist-applicationsサブコマンドを使用して、--host
           asadminユーティリティ・オプションを指定します。この例では、DASはホストsrvr1.example.comで稼働中です。

           この例は、アプリケーションbasic-ezcomp、scrumtoys、ejb31-war、およびautomatic-timer-ejbがホストsrvr1.example.comにデプロイされていることを示します。

               asadmin --host srvr1.example.com list-applications
               basic-ezcomp <web>
               scrumtoys <web>
               ejb31-war <ejb, web>
               automatic-timer-ejb <ejb>

               Command list-applications executed successfully.

       例 3, asadminユーティリティ・オプションとサブコマンド・オプションの指定
           この例では、シングル・モードでlist-applicationsサブコマンドを使用して、--host
           asadminユーティリティ・オプションおよび--typeサブコマンド・オプションを指定します。この例では、DASがホストsrvr1.example.comで稼働し、webタイプのアプリケーションが一覧表示されます。

               asadmin --host srvr1.example.com list-applications --type web
               basic-ezcomp <web>
               scrumtoys <web>
               ejb31-war <ejb, web>

               Command list-applications executed successfully.

       例 4, 単一引用符文字を使用したコマンド行引数のエスケープ
           この例のコマンドでは、プロパティ値c:\extras\pmdappにおいて、UNIXオペレーティング・システムのメタ文字であるバックスラッシュ(\)とオプションのデリミタであるコロン(:)が指定されています。

           シングル・モードとマルチモードのUNIXオペレーティング・システム、およびマルチモードのすべてのオペレーティング・システムでは、メタ文字であるバックスラッシュ(\)とオプションのデリミタであるコロン(:)をエスケープするために、バックスラッシュ(\)が必要になります。

               asadmin deploy --property extras.home='c\:\\extras\\pmdapp' pmdapp.war
               Application deployed with name pmdapp.
               Command deploy executed successfully
           シングル・モードのWindowsオペレーティング・システムでは、単一引用符(
           ')文字を使用すれば、他のエスケープ文字は必要ありません。

               asadmin deploy --property extras.home='c:\extras\pmdapp' pmdapp.war
               Application deployed with name pmdapp.
               Command deploy executed successfully

       例 5, オプションにあるUNIXオペレーティング・システムのメタ文字の指定
           この例のコマンドでは、オプション引数Test\Escape\Characterにおいて、UNIXオペレーティング・システムのメタ文字であるバックスラッシュ(\)が指定されています。

           シングル・モードとマルチモードのUNIXオペレーティング・システム、およびマルチモードのすべてのオペレーティング・システムでは、メタ文字であるバックスラッシュ(\)をエスケープするために、バックスラッシュ(\)が必要になります。

               asadmin --user admin --passwordfile gfpass create-jdbc-connection-pool
               --datasourceclassname sampleClassName
               --description Test\\Escape\\Character
               sampleJDBCConnectionPool
           シングル・モードのWindowsオペレーティング・システムでは、エスケープ文字は必要ありません。

               asadmin --user admin --passwordfile gfpass create-jdbc-connection-pool
               --datasourceclassname sampleClassName
               --description Test\Escape\Character
               sampleJDBCConnectionPool

       例 6, 空白が含まれたコマンド行引数の指定
           この例のコマンドでは、オペランドC:\Documents and
           Settings\gfuser\apps\hello.warに空白が指定されています。

           シングル・モードまたはマルチモードのすべてのオペレーティング・システムでは、オペランド全体を二重引用符(")文字で囲むことができます。

               asadmin deploy "C:\Documents and Settings\gfuser\apps\hello.war"
               Application deployed with name hello.
               Command deploy executed successfully.
           シングル・モードとマルチモードのUNIXオペレーティング・システム、およびマルチモードのすべてのオペレーティング・システムでは、コマンド行引数全体を単一引用符(')文字で囲むことができます。

               asadmin> deploy 'C:\Documents and Settings\gfuser\apps\hello.war'
               Application deployed with name hello.
               Command deploy executed successfully.
           別の方法として、シングル・モードとマルチモードのUNIXオペレーティング・システム、およびマルチモードのすべてのオペレーティング・システムでは、オペランドの各空白の前に、バックスラッシュ(\)エスケープ文字を使用することもできます。この場合、バックスラッシュ(\)エスケープ文字は、オペランドの各バックスラッシュの前に必須です。

               asadmin> deploy C:\\Documents\ and\ Settings\\gfuser\\apps\\hello.war
               Application deployed with name hello.
               Command deploy executed successfully.

       例 7, プロパティにあるメタ文字とオプションのデリミタ文字の指定
           この例のコマンドでは、create-jdbc-connection-pool(1)サブコマンドの--propertyオプションにおいて、UNIXオペレーティング・システムのメタ文字であるバックスラッシュ(\)とオプションのデリミタであるコロン(:)が指定されています。

           --propertyオプションの名前/値のペアを次に示します。

               user=dbuser
               passwordfile=dbpasswordfile
               DatabaseName=jdbc:derby
               server=http://localhost:9092
           シングル・モードとマルチモードのUNIXオペレーティング・システム、およびマルチモードのすべてのオペレーティング・システムでは、コロン(:)とバックスラッシュ(\)をエスケープするために、バックスラッシュ(\)が必要になります。

               asadmin --user admin --passwordfile gfpass create-jdbc-connection-pool
               --datasourceclassname com.derby.jdbc.jdbcDataSource
               --property user=dbuser:passwordfile=dbpasswordfile:
               DatabaseName=jdbc\\:derby:server=http\\://localhost\\:9092 javadb-pool
           別の方法として、--propertyオプションの引数全体を単一引用符(')文字で囲むこともできます。

               asadmin --user admin --passwordfile gfpass create-jdbc-connection-pool
               --datasourceclassname com.derby.jdbc.jdbcDataSource
               --property 'user=dbuser:passwordfile=dbpasswordfile:
               DatabaseName="jdbc:derby":server="http://localhost:9092"' javadb-pool
           シングル・モードのWindowsオペレーティング・システムでは、コロン(:)をエスケープするために、バックスラッシュ(\)が必要ですが、バックスラッシュ(\)をエスケープする必

               asadmin --user admin --passwordfile gfpass create-jdbc-connection-pool
               --datasourceclassname com.derby.jdbc.jdbcDataSource
               --property user-dbuser:passwordfile-dbpasswordfile:
               DatabaseName=jdbc\:derby:server=http\://localhost\:9092 javadb-pool
           すべてのオペレーティング・システムでは、二重引用符文字または単一引用符文字で値を囲むことにより、値のコロン(:)をエスケープする必要性を回避できます。

               asadmin --user admin --passwordfile gfpass create-jdbc-connection-pool
               --datasourceclassname com.derby.jdbc.jdbcDataSource
               --property user=dbuser:passwordfile=dbpasswordfile:
               DatabaseName=\"jdbc:derby\":server=\"http://localhost:9092\" javadb-pool

       例 8,
       JVMマシンのオプションにあるオプション・デリミタとエスケープ文字の指定
           この例のコマンドでは、-Dlocation=c:\sun\appserver
           JVMマシンのオプションに次の文字が指定されています。

           ·   コロン(:)・オプション・デリミタ

           ·   バックスラッシュ(\)エスケープ文字

           シングル・モードとマルチモードのUNIXオペレーティング・システム、およびマルチモードのすべてのオペレーティング・システムでは、これらの文字を次のように指定する必要があります。

           ·   リテラル・バックスラッシュをサブコマンドに渡すには、2つのバックスラッシュが必要になります。そのため、コロン(:)を2つのバックスラッシュ(\\)でエスケープする必要があります。

           ·   サブコマンドがバックスラッシュを特殊文字として扱うことを防ぐために、バックスラッシュをエスケープする必要があります。その結果、サブコマンドには2つのリテラル・バックスラッシュ(\\)を渡す必要があります。シェルがこれらのバックスラッシュを特殊文字として解釈することを防ぐために、各バックスラッシュをエスケープする必要があります。そのため、バックスラッシュには合計4つのバックスラッシュ(\\\\)を指定する必要があります。

           結果のコマンドを次に示します。

               asadmin create-jvm-options --target test-server
               -e -Dlocation=c\\:\\\\sun\\\\appserver
           シングル・モードのWindowsオペレーティング・システムでは、コロン(:)とバックスラッシュ(\)をエスケープするために、バックスラッシュ(\)が必要になります。

               asadmin create-jvm-options --target test-server
               -e -Dlocation=c\:\\sun\\appserver

       例 9, エスケープ文字が含まれたオプションの指定
           この例のコマンドでは、"Hello\App"\authenticationオプション引数において、バックスラッシュ(\)文字と二重引用符(")文字が指定されています。

           シングル・モードとマルチモードのUNIXオペレーティング・システム、およびマルチモードのすべてのオペレーティング・システムでは、二重引用符(")文字とバックスラッシュ(\)をエスケープするために、バックスラッシュ(\)が必要になります。

               asadmin set-web-env-entry --name="Hello User" --type=java.lang.String
               --value=techscribe --description=\"Hello\\App\"\\authentication hello
           シングル・モードのWindowsオペレーティング・システムでは、二重引用符(")をエスケープするために、バックスラッシュ(\)が必要ですが、バックスラッシュ(\)をエスケープする必

               asadmin set-web-env-entry --name="Hello User" --type=java.lang.String
               --value=techscribe --description=\"Hello\App\"\authentication hello

環境変数
       次の表に示すように、環境変数は、asadminユーティリティ・オプションのデフォルト値を変更します。

       ┌─────────────────────────────┬──────────────────────────────────────────┐
       │                             │                                          │
       │       環境変数              │        asadminユーティリティ・オプション │
       ├─────────────────────────────┼──────────────────────────────────────────┤
       │                             │                                          │
       │       AS_ADMIN_TERSE        │        --terse                           │
       ├─────────────────────────────┼──────────────────────────────────────────┤
       │                             │                                          │
       │       AS_ADMIN_ECHO         │        --echo                            │
       ├─────────────────────────────┼──────────────────────────────────────────┤
       │                             │                                          │
       │       AS_ADMIN_INTERACTIVE  │        --interactive                     │
       ├─────────────────────────────┼──────────────────────────────────────────┤
       │                             │                                          │
       │       AS_ADMIN_HOST         │        --host                            │
       ├─────────────────────────────┼──────────────────────────────────────────┤
       │                             │                                          │
       │       AS_ADMIN_PORT         │        --port                            │
       ├─────────────────────────────┼──────────────────────────────────────────┤
       │                             │                                          │
       │       AS_ADMIN_SECURE       │        --secure                          │
       ├─────────────────────────────┼──────────────────────────────────────────┤
       │                             │                                          │
       │       AS_ADMIN_USER         │        --user                            │
       ├─────────────────────────────┼──────────────────────────────────────────┤
       │                             │                                          │
       │       AS_ADMIN_PASSWORDFILE │        --passwordfile                    │
       ├─────────────────────────────┼──────────────────────────────────────────┤
       │                             │                                          │
       │       AS_ADMIN_HELP         │        --help                            │
       └─────────────────────────────┴──────────────────────────────────────────┘

属性
       次の属性の詳細は、attributes(5)を参照してください。

       ┌──────────────────────────────┬───────────────┐
       │                              │               │
       │       属性タイプ             │        属性値 │
       ├──────────────────────────────┼───────────────┤
       │                              │               │
       │       インタフェースの安定性 │        不安定 │
       └──────────────────────────────┴───────────────┘

関連項目
       configure-jms-cluster(1), create-connector-security-map(1),
       create-file-user(1), create-jdbc-connection-pool(1),
       create-jvm-options(1), create-node-dcom(1), create-node-ssh(1),
       create-password-alias(1), deploy(1), install-node(1),
       install-node-dcom(1), install-node-ssh(1), list-applications(1),
       list-commands(1), login(1), restart-domain(1), set(1),
       set-web-env-entry(1), start-domain(1), update-file-user(1),
       update-node-dcom(1), update-node-ssh(1)

       attributes(5)

                                 2012年1月6日                      ASADMIN(1M)
