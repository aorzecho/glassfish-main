CREATE-CLUSTER(1)                                            CREATE-CLUSTER(1)

名前
       create-cluster - GlassFish Serverクラスタを作成します

概要
           create-cluster [--help] [--config config-name]
           [--systemproperties (name=value)[:name=value]*]
           [--properties (name=value)[:name=value]*]
           [--gmsenabled={true|false}]
           [--multicastport multicast-port]
           [--multicastaddress multicast-address]
           [--bindaddress bind-address]
           [--hosts hadb-host-list]
           [--haagentport port-number]
           [--haadminpassword password]
           [--haadminpasswordfile file-name] [--devicesize devicesize ]
           [--haproperty (name=value)[:name=value]*]
           [--autohadb=false] [--portbase port-number]
           cluster-name

説明
       create-clusterサブコマンドは、GlassFish
       Serverクラスタを作成します。クラスタには、GlassFish
       Serverインスタンス、アプリケーション、またはリソースが最初から含まれていません。

       クラスタには、クラスタに追加するすべてのインスタンスの構成を定義する名前付き構成への参照が必要です。コマンドで構成を指定してクラスタを作成することができますが、必須ではありません。構成を指定しないと、cluster-name-configという名前の構成がクラスタに対して作成されます。別のクラスタやスタンドアロン・インスタンスとクラスタの構成が共有されていないため、クラスタはスタンドアロン・クラスタとして作成されます。

       クラスタにインスタンスを追加するには、次のいずれかのサブコマンドを使用する際に、--clusterオプションでクラスタ名を設定します。

       ·   create-instance(1)

       ·   create-local-instance(1)

       後でクラスタからサーバー・インスタンスを削除するには、次のいずれかのサブコマンドを使用します。

       ·   delete-instance(1)

       ·   delete-local-instance(1)

       クラスタ内のすべてのインスタンスにアプリケーションやリソースを関連付けるには、次の操作を実行する際に、--targetオプションでクラスタ名を設定します。

       ·   deploy(1)サブコマンドを使用してアプリケーションをデプロイする

       ·   create-jdbc-resource(1)などのサブコマンドを使用してリソースを作成する

       ·   create-application-ref(1)サブコマンドを使用して、別のターゲットにデプロイ済のアプリケーションに対する参照を作成する

       ·   create-resource-ref(1)サブコマンドを使用して、別のターゲットに作成済のリソースに対する参照を作成する

       このサブコマンドは、リモート・モードでのみサポートされています。

オプション
       --help, -?
           サブコマンドに関するヘルプ・テキストが表示されます。

       --config
           クラスタが参照する名前付き構成を指定します。構成が存在していて、その名前がdefault-configまたはserver-configでないことが必要です。--configオプションを指定すると、共有クラスタが作成されます。このオプションを省略すると、スタンドアロン・クラスタが作成されます。

       --systemproperties
           クラスタに対して作成される構成のシステム・プロパティを定義します。これらのプロパティは、default-config構成のプロパティ値をオーバーライドします。次のプロパティが使用可能です:

           ASADMIN_LISTENER_PORT
               このプロパティは、DASがインスタンスを管理するためにインスタンスにアクセスするHTTPポートまたはHTTPSポートのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           HTTP_LISTENER_PORT
               このプロパティは、HTTPリクエストのリスニングに使用するポートのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           HTTP_SSL_LISTENER_PORT
               このプロパティは、HTTPSリクエストのリスニングに使用するポートのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           IIOP_LISTENER_PORT
               このプロパティは、IIOP接続に使用するポートのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           IIOP_SSL_LISTENER_PORT
               このプロパティは、セキュリティ保護されたIIOP接続に使用するポートのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           IIOP_SSL_MUTUALAUTH_PORT
               このプロパティは、クライアント認証でセキュリティ保護されたIIOP接続に使用するポートのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           JAVA_DEBUGGER_PORT
               このプロパティは、Java Platform Debugger
               Architecture(JPDA)への接続に使用するポートのポート番号を指定します

               デバッガ。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           JMS_PROVIDER_PORT
               このプロパティは、Java Message
               Serviceプロバイダのポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           JMX_SYSTEM_CONNECTOR_PORT
               このプロパティでは、JMXコネクタがリスニングするポート番号を指定します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

           OSGI_SHELL_TELNET_PORT
               このプロパティは、Apache Felix Remote
               Shellへの接続に使用するポートのポート番号を指定します .
               このシェルは、Felixシェル・サービスを使用してOSGiモジュール管理サブシステムと相互作用します。有効な値は1から65535です。UNIXでは、ポート1から1024でリスニングするソケットを作成するには、スーパーユーザー権限が必要です。

       --properties
           クラスタのプロパティを定義します。次のプロパティが使用可能です:

           GMS_DISCOVERY_URI_LIST
               クラスタを検出するために使用する、クラスタ内のGlassFish
               Serverインスタンスの場所。このプロパティは、グループ管理サービス(GMS)がメッセージのブロードキャストにマルチキャストを使用していない場合にのみ必要です。

               このプロパティの有効な値は、次のとおりです。

               ·   Uniform Resource
                   Identifier(URI)のカンマ区切りリスト。各URIは、GlassFish
                   ServerインスタンスまたはDASの位置を特定する必要があります。複数のGlassFish
                   Serverインスタンスが同じホスト上で実行されている場合は、この形式が必要です。

                   リスト内の各URIの形式は、次のとおりです。

                   scheme://host-name-or -IP-address:port

                   ·   schemeはURIスキームであり、これはtcpです。

                   ·   host-name-or
                       -IP-addressは、インスタンスが実行されているホストのホスト名またはIPアドレスです。

                   ·   portは、インスタンスがGMSからのメッセージをリスニングするポートのポート番号です。インスタンスに対して、システム・プロパティGMS_LISTENER_PORT-clusternameを設定する必要があります。インスタンスに対してこのシステム・プロパティを設定する方法については、Oracle
                       GlassFish
                       Server高

               ·   DASまたはインスタンスが実行されているIPアドレスまたはホスト名のカンマ区切りリスト。リストには、IPアドレスおよびホスト名の両方を含めることができます。この形式を使用できるのは、各ホストで1つのクラスタ化インスタンスが実行されている場合のみです。GMS_LISTENER_PORTプロパティの値は、ドメイン内のクラスタごとに一意である必要があります。

               ·   キーワードgenerate。この形式を使用できるのは、各ホストでクラスタ内の1つのインスタンスが実行され、別のホストでDASが実行されている場合のみです。同じホスト上の複数のインスタンスは、同じクラスタのメンバーにはできません。GMS_LISTENER_PORTプロパティの値は、ドメイン内のクラスタごとに一意である必要があります。

           GMS_LISTENER_PORT
               クラスタがGMSからのメッセージをリスニングするポートのポート番号。

               デフォルト値は、GMS_LISTENER_PORT-cluster-nameシステム・プロパティへの参照です。デフォルトでは、このシステム・プロパティは設定されていません。この場合、GMSは、プロパティのGMS_TCPSTARTPORTおよびGMS_TCPENDPORTで定義されている範囲から未使用のポートを選択します。デフォルトでは、この範囲は9090から9200の間です。ほとんどの場合、デフォルトの動作で問題ありません。

               ただし、GMSがメッセージのブロードキャストにマルチキャストを使用していない場合は、GMS_LISTENER_PORTプロパティで、クラスタ内のすべてのGlassFish
               Serverインスタンスに対して有効であるポート番号を指定する必要があります。この要件を満たすためにデフォルト値を使用するには、システム・プロパティを使用して、各インスタンスに個別のポート番号を設定します。

               たとえば、create-system-propertiesサブコマンドを使用して、DASに対してGMS_LISTENER_PORT-cluster-nameというシステム・プロパティを作成します。次に、クラスタ内の各インスタンスに対して、GMS_LISTENER_PORT-cluster-nameシステム・プロパティをインスタンスがGMSからのメッセージをリスニングするポート番号に設定します。クラスタのGMS_LISTENER_PORTプロパティのデフォルト値は、このシステム・プロパティを参照します。

           GMS_LOOPBACK
               インスタンスがクラスタにブロードキャストしたアプリケーション・レベルのメッセージを、そのインスタンス自身が受信できるかどうかを指定します。

               使用可能な値は次のとおりです:

               false
                   インスタンスは自身からメッセージを受信で

               true
                   インスタンスは自身からメッセージを受信できます。インスタンスがクラスタ内の唯一のインスタンスである場合にインスタンスをテストするには、この設定を使用します。

           GMS_MULTICAST_TIME_TO_LIVE
               次のイベントのタイプのマルチキャスト・メッセージを反復処理または伝送する最大数。この数を超えるとメッセージは破棄されます。

               ·   グループの検出

               ·   メンバーのハートビート

               ·   メンバーシップの変更

               DASおよびクラスタ化されたインスタンスがデプロイされているネットワークの構成に一致させるには、この値をできる限り小さく設定します。システムの設定可能な最小値を判定するには、validate-multicast(1)サブコマンドを使用します。

               値0を指定すると、マルチキャスト・メッセージはブロードキャスト元のホストから送信されません。

               値1を指定すると、スイッチまたはルーターで接続された同じサブネット上のホスト間でメッセージがブロードキャストされなくなる場合があります。

               デフォルトの4を指定すると、ホストがスイッチまたはルーターで接続されているネットワークのすべてのクラスタ・メンバーにメッセージが正常にブロードキャストされます。

           GMS_TCPENDPORT
               GMS_LISTENER_PORT-cluster-nameシステム・プロパティが設定されていない場合に、GMSが未使用のポートを選択する範囲内の最大ポート番号。デフォルトは9200です。

           GMS_TCPSTARTPORT
               GMS_LISTENER_PORT-cluster-nameシステム・プロパティが設定されていない場合に、GMSが未使用のポートを選択する範囲内の最小ポート番号。デフォルトは9090です。

       --gmsenabled
           クラスタでGMSを有効にするかを指定します。

           使用可能な値は次のとおりです:

           true
               クラスタでGMSが有効になります(デフォルト)。

               クラスタでGMSを有効にすると、クラスタ内の各サーバー・インスタンスとDASでGMSが開始されます。DASは、このオプションがtrueに設定された各クラスタに参加します。

           false
               クラスタでGMSが無効になります。

       --multicastaddress
           GMSがグループ・イベントをリスニングするアドレス。224.0.0.0 -
           239.255.255.255の間のマルチキャスト・アドレスを指定する必要があります。デフォルト値は228.9.XX.YYです。XXとYYは、自動的に生成される0
           - 255の間の独立した値です。

       --multicastport
           GMSがグループ・イベントをリスニングする通信ポートのポート番号。2048から49151の間の有効なポート番号を指定する必要があります。デフォルト値は、この範囲から自動的に生成されます。

       --bindaddress
           GMSがバインドされるネットワーク・インタフェースのインターネット・プロトコル(IP)アドレス。ローカル・ネットワーク・インタフェースのIPアドレスを指定する必要があります。デフォルト値は、すべてのパブリック・ネットワーク・インタフェースのアドレスです。

           マルチホーム・マシンでは、このオプションで、GMSに使用するネットワーク・インタフェースを構成します。マルチホーム・マシンには複数のネットワーク・インタフェースがあります。

           クラスタ内のすべてのGlassFish
           Serverインスタンスに対して有効なアドレスを指定するには、システム・プロパティを使用してそのアドレスを各インスタンスに個別に設定します。

           たとえば、create-system-propertiesサブコマンドを使用してGMS-BIND-INTERFACE-ADDRESS-cluster-nameというシステム・プロパティを作成します。次に、このサブコマンドの--bindaddressオプションを${GMS-BIND-INTERFACE-ADDRESS-cluster-name}に設定して、そのシステム・プロパティを指定します。最後に、クラスタ内の各インスタンスについて、GMS-BIND-INTERFACE-ADDRESS-cluster-nameシステム・プロパティをそのインスタンスのマシンで必要なネットワーク・インタフェースのアドレスに設定します。

       --hosts
           このオプションは指定しないでください。このオプションは以前のリリースとの互換性を維持するために使用されます。このオプションを指定すると、構文エラーが発生しません。かわりに、サブコマンドは正常に実行され、オプションが無視されたという警告メッセージが表示されます。

       --haagentport
           このオプションは指定しないでください。このオプションは以前のリリースとの互換性を維持するために使用されます。このオプションを指定すると、構文エラーが発生しません。かわりに、サブコマンドは正常に実行され、オプションが無視されたという警告メッセージが表示されます。

       --haadminpassword
           このオプションは指定しないでください。このオプションは以前のリリースとの互換性を維持するために使用されます。このオプションを指定すると、構文エラーが発生しません。かわりに、サブコマンドは正常に実行され、オプションが無視されたという警告メッセージが表示されます。

       --haadminpasswordfile
           このオプションは指定しないでください。このオプションは以前のリリースとの互換性を維持するために使用されます。このオプションを指定すると、構文エラーが発生しません。かわりに、サブコマンドは正常に実行され、オプションが無視されたという警告メッセージが表示されます。

       --devicesize
           このオプションは指定しないでください。このオプションは以前のリリースとの互換性を維持するために使用されます。このオプションを指定すると、構文エラーが発生しません。かわりに、サブコマンドは正常に実行され、オプションが無視されたという警告メッセージが表示されます。

       --haproperty
           このオプションは指定しないでください。このオプションは以前のリリースとの互換性を維持するために使用されます。このオプションを指定すると、構文エラーが発生しません。かわりに、サブコマンドは正常に実行され、オプションが無視されたという警告メッセージが表示されます。

       --autohadb
           このオプションは指定しないでください。このオプションは以前のリリースとの互換性を維持するために使用されます。このオプションを指定すると、構文エラーが発生しません。かわりに、サブコマンドは正常に実行され、オプションが無視されたという警告メッセージが表示されます。

       --portbase
           このオプションは指定しないでください。このオプションは以前のリリースとの互換性を維持するために使用されます。このオプションを指定すると、構文エラーが発生しません。かわりに、サブコマンドは正常に実行され、オプションが無視されたという警告メッセージが表示されます。

オペランド
       cluster-name
           クラスタの名前。

           名前は次の要件を満たしてください。

           ·   ASCII文字のみ使用します。

           ·   名前は英数字またはアンダースコアで始めます。

           ·   名前に含めることができるのは次の文字のみです。

               ·   小文字

               ·   大文字

               ·   数値

               ·   ハイフン

               ·   ピリオド

               ·   アンダースコア

           ·   名前はドメイン内で一意にします。また、別のクラスタ、名前付き構成、GlassFish
               Serverインスタンス、またはノードの名前にすることはできません。

           ·   ド
               Serverで予約されている他のキーワードを名前に使用しないでください。

例
       例 1, クラスタの作成
           この例では、セキュリティ保護されたIIOP接続にポート1169を使用するltsclusterというクラスタを作成します。--configオプションを指定しないため、クラスタは名前付き構成default-configのコピーを参照します。このコピーの名前はltscluster-configです。

               asadmin> create-cluster
               --systemproperties IIOP_SSL_LISTENER_PORT=1169
               ltscluster
               Command create-cluster executed successfully.

       例 2, クラスタを検出するための、URIのリストを使用したクラスタの作成
           この例では、tcpclusterという名前のクラスタを作成します。この例では、GMSはメッセージをブロードキャストするためにマルチキャストを使用せず、複数のインスタンスが同じホスト上に存在しています。したがって、GMS_DISCOVERY_URI_LISTプロパティは、クラスタの検出に使用するGlassFish
           Serverインスタンスの場所に設定されています。これらのインスタンスは、IPアドレスが10.152.23.224のホスト上に存在し、ポート9090、9091、および9092でGMSイベントをリスニングします。

           URIに含まれるコロン(:)文字とプロパティ・リストの区切り文字として使用するコロンを識別するために、URIに含まれるコロンは一重引用符(')およびバックスラッシュ(\)文字を使用してエスケープされます。asadminユーティリティのオプションで使用するエスケープ文字の詳細は、asadmin(1M)ヘルプ・ページを参照してください。

           この例では、各インスタンスがGMSメッセージをリスニングするポートは、GMS_LISTENER_PORT-tcpclusterシステム・プロパティを使用してインスタンスに対して個別に設定されることを前提としています。インスタンスがGMSメッセージをリスニングするポートの設定方法については、Oracle
           GlassFish
           Server高

               asadmin> create-cluster --properties GMS_DISCOVERY_URI_LIST=
               tcp'\\:'//10.152.23.224'\\:'9090,
               tcp'\\:'//10.152.23.224'\\:'9091,
               tcp'\\:'//10.152.23.224'\\:'9092 tcpcluster
               Command create-cluster executed successfully.

       例 3,
       クラスタを検出するための、IPアドレスのリストを使用したクラスタの作成
           この例では、ipclusterという名前のクラスタを作成します。この例では、GMSはメッセージをブロードキャストするためにマルチキャストを使用せず、各ホストにはクラスタ化されたインスタンスが1つのみ存在しています。したがって、GMS_DISCOVERY_URI_LISTプロパティは、クラスタの検出に使用するインスタンスが実行されているホストのIPアドレスに設定されています。クラスタは、GMSからのメッセージをポート9090でリスニングします。

               asadmin> create-cluster --properties 'GMS_DISCOVERY_URI_LIST=
               10.152.23.225,10.152.23.226,10.152.23.227,10.152.23.228:
               GMS_LISTENER_PORT=9090' ipcluster
               Command create-cluster executed successfully.

       例 4,
       クラスタを検出するための、生成されたインスタンスのリストを使用したクラスタの作成
           この例では、genclusterという名前のクラスタを作成します。この例では、GMSはメッセージをブロードキャストするためにマルチキャストを使用せず、各ホストではクラスタ内の1つのインスタンスが実行され、DASは別のホストで実行されています。したがって、GMS_DISCOVERY_URI_LISTプロパティは、クラスタの検出に使用するインスタンスのリストを生成するキーワードのgenerateに設定されています。クラスタは、GMSからのメッセージをポート9090でリスニングします。

               asadmin> create-cluster --properties 'GMS_DISCOVERY_URI_LIST=generate:
               GMS_LISTENER_PORT=9090' gencluster
               Command create-cluster executed successfully.

終了ステータス
       0
           コマンドは正常に実行されました

       1
           コマンドの実行時にエラーが発生しました

関連項目
       create-application-ref(1), create-instance(1), create-jdbc-resource(1),
       create-local-instance(1), create-resource-ref(1), delete-cluster(1),
       delete-instance(1), delete-local-instance(1), deploy(1),
       list-clusters(1), start-cluster(1), stop-cluster(1),
       validate-multicast(1)

       asadmin(1M)

       Oracle GlassFish
       Server高

       Apache Felix Remote
       Shell(http://felix.apache.org/site/apache-felix-remote-shell.html)、Java
       Platform Debugger
       Architecture(JPDA)(http://java.sun.com/javase/technologies/core/toolsapis/jpda/)

                                 2012年1月4日                CREATE-CLUSTER(1)
