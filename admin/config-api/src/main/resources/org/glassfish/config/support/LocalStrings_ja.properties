#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#EN InstanceReaderFilter.CantFindConfig=Can''t find the config element for the instance {0}
InstanceReaderFilter.CantFindConfig=\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 {0} \u306e config \u8981\u7d20\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093
#EN InstanceReaderFilter.UnknownException=Got an unknown error while parsing domain.xml: {0}
InstanceReaderFilter.UnknownException=domain.xml \u306e\u89e3\u6790\u4e2d\u306b\u4e0d\u660e\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: {0}
#EN InstanceReaderFilter.ReparseNeeded=Doman.xml had to be parsed twice instead of \
#EN once because the order of elements is non-optimal.  \n\
#EN The optimal order is <clusters>...<<servers>...<configs>
InstanceReaderFilter.ReparseNeeded=\u8981\u7d20\u306e\u9806\u5e8f\u304c\u6700\u9069\u3067\u306a\u3044\u305f\u3081\u3001domain.xml \u306e\u89e3\u6790\u3092\u3082\u3046\u4e00\u5ea6\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u6700\u9069\u306a\u9806\u5e8f\u306f <clusters>...<<servers>...<configs> \u3067\u3059
#EN time=Total time to parse domain.xml: {0}
time=domain.xml \u306e\u89e3\u6790\u306b\u304b\u304b\u308b\u5408\u8a08\u6642\u9593: {0}
#EN dxpp.serverNotFound=Couldn''t find the server element for the instance: {0}
dxpp.serverNotFound=\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e server \u8981\u7d20\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f: {0}
#EN dxpp.configrefnotmatch=The instance, {0}, belongs to the cluster, {1}, but the config-ref''s don''t match.
dxpp.configrefnotmatch=\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 {0} \u306f\u30af\u30e9\u30b9\u30bf {1} \u306b\u5c5e\u3057\u3066\u3044\u307e\u3059\u304c\u3001config-ref \u304c\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002
#EN dxpp.confignotfound=The config element, {1} for the instance, {0} was not found.
dxpp.confignotfound=\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 {0} \u306e config \u8981\u7d20 {1} \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002

#EN ConfigParsingFailed=Failed to parse domain.xml
ConfigParsingFailed=domain.xml \u306e\u89e3\u6790\u306b\u5931\u6557\u3057\u307e\u3057\u305f
#EN NoConfigFile={0} does not exist or is empty, will use backup
NoConfigFile={0} \u304c\u5b58\u5728\u3057\u306a\u3044\u304b\u7a7a\u3067\u3059\u3002\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u4f7f\u7528\u3057\u307e\u3059
#EN NoBackupFile={0} does not exist or is empty, cannot use backup
NoBackupFile={0} \u304c\u5b58\u5728\u3057\u306a\u3044\u304b\u7a7a\u3067\u3059\u3002\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3082\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093
#EN NoUsableConfigFile=No usable configuration file at {0}
NoUsableConfigFile=\u4f7f\u7528\u3067\u304d\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c {0} \u306b\u3042\u308a\u307e\u305b\u3093
#EN SystemPropertyUpgrade.Failure=Failure while upgrading config {0} system-property from v2.1.1 to 3.1"
SystemPropertyUpgrade.Failure=\u8a2d\u5b9a {0} \u306e system-property \u3092 v2.1.1 \u304b\u3089 3.1 \u306b\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f

#EN GlassFishDocument.IOException=Exception {0} while persisting domain.xml, changes will not be available on server restart
GlassFishDocument.IOException=domain.xml \u306e\u6301\u7d9a\u4e2d\u306b\u4f8b\u5916 {0} \u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u30b5\u30fc\u30d0\u30fc\u306e\u518d\u8d77\u52d5\u6642\u306b\u5909\u66f4\u3092\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093
#EN GlassFishDocument.XMLException=Exception {0} while persisting domain.xml, file a bug at glassfish.dev.java.net
GlassFishDocument.XMLException=domain.xml \u306e\u6301\u7d9a\u4e2d\u306b\u4f8b\u5916 {0} \u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002glassfish.dev.java.net \u306b\u30d0\u30b0\u3092\u5831\u544a\u3057\u3066\u304f\u3060\u3055\u3044
#EN GenericCrudCommand.invalid_type=Invalid annotated type {0} passed to InjectionResolver:getValue()
GenericCrudCommand.invalid_type=\u7121\u52b9\u306a\u6ce8\u91c8\u4ed8\u304d\u306e\u578b {0} \u304c InjectionResolver:getValue() \u306b\u6e21\u3055\u308c\u307e\u3057\u305f
#EN GenericCrudCommand.invocation_failure=Failure {0} while getting List<?> values from component;
GenericCrudCommand.invocation_failure=\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304b\u3089 List<?> \u306e\u5024\u306e\u53d6\u5f97\u4e2d\u306b\u969c\u5bb3 {0} \u304c\u767a\u751f\u3057\u307e\u3057\u305f
#EN GenericCrudCommand.nongeneric_type=The List type returned by {0} must be a generic type
GenericCrudCommand.nongeneric_type={0} \u306b\u3088\u3063\u3066\u8fd4\u3055\u308c\u308b\u4e00\u89a7\u306e\u578b\u306f\u6c4e\u7528\u578b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059
#EN GenericCrudCommand.wrong_type=The generic type {0} is not supported, only List<? extends ConfigBeanProxy> is"
GenericCrudCommand.wrong_type=\u6c4e\u7528\u578b {0} \u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002List<? extends ConfigBeanProxy>\u306e\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u307f\u30b5\u3059 "
#EN GenericCrudCommand.introspection_failure=Failure {0} while instrospecting {1} to find all getters and setters
GenericCrudCommand.introspection_failure=\u3059\u3079\u3066\u306e\u53d6\u5f97\u30e1\u30bd\u30c3\u30c9\u3068\u8a2d\u5b9a\u30e1\u30bd\u30c3\u30c9\u3092\u63a2\u3059\u305f\u3081\u306b {1} \u3092\u30a4\u30f3\u30c8\u30ed\u30b9\u30da\u30af\u30c8\u3057\u3066\u3044\u308b\u3068\u304d\u306b\u969c\u5bb3 {0} \u304c\u767a\u751f\u3057\u307e\u3057\u305f
#EN GenericCrudCommand.too_many_indexes=The metadata for this generic implementation has more than one index {0}
GenericCrudCommand.too_many_indexes=\u3053\u306e\u6c4e\u7528\u306e\u5b9f\u88c5\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 {0} \u304c\u8907\u6570\u3042\u308a\u307e\u3059
#EN GenericCrudCommand.unamed_service=The service {0} is un-named, for generic command, the service name is the command name and must be provided
GenericCrudCommand.unamed_service=\u30b5\u30fc\u30d3\u30b9 {0} \u306e\u540d\u524d\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u6c4e\u7528\u30b3\u30de\u30f3\u30c9\u306e\u5834\u5408\u3001\u30b5\u30fc\u30d3\u30b9\u540d\u304c\u30b3\u30de\u30f3\u30c9\u540d\u3067\u3042\u308a\u3001\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059
#EN GenericCrudCommand.transactionException=Transaction exception {0} while injecting {1}
GenericCrudCommand.transactionException={1} \u306e\u6ce8\u5165\u4e2d\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u4f8b\u5916 {0} \u304c\u767a\u751f\u3057\u307e\u3057\u305f
#EN GenericCrudCommand.method_invocation_exception=Exception while invoking {0} method : {1}
GenericCrudCommand.method_invocation_exception={0} \u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u4e2d\u306b\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f: {1}
#EN GenericCrudCommand.annotation_not_found=Cannot find annotation {0} with value {1} on method {2}
GenericCrudCommand.annotation_not_found=\u30e1\u30bd\u30c3\u30c9 {2} \u306b\u5024\u304c {1} \u306e\u6ce8\u91c8 {0} \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093
#EN GenericCreateCommand.configbean_not_found=The Config Bean {0} cannot be loaded by the generic command implementation : {1}
GenericCreateCommand.configbean_not_found=\u6c4e\u7528\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u88c5\u3067\u8a2d\u5b9a Bean {0} \u3092\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093: {1}
#EN GenericCreateCommand.command_model_exception=Exception while creating the command model for the generic command {0} : {1}
GenericCreateCommand.command_model_exception=\u6c4e\u7528\u30b3\u30de\u30f3\u30c9 {0} \u306e\u30b3\u30de\u30f3\u30c9\u30e2\u30c7\u30eb\u306e\u4f5c\u6210\u4e2d\u306b\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f: {1}
#EN GenericCreateCommand.target_object_not_found=The ConfigResolver {0} could not find the configuration object of type {1} where instances of {2} should be added
GenericCreateCommand.target_object_not_found=ConfigResolver {0} \u3067\u3001{2} \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8ffd\u52a0\u3059\u308b {1} \u578b\u306e\u8a2d\u5b9a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f
#EN GenericCreateCommand.decorator_not_found=The CreationDecorator {0} could not be found in the habitat,is it annotated with @Service ?
GenericCreateCommand.decorator_not_found=CreationDecorator {0} \u304c\u30cf\u30d3\u30bf\u30c3\u30c8\u306b\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002@Service \u306e\u6ce8\u91c8\u304c\u4ed8\u3044\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002
#EN GenericCreateCommand.deletion_decorator_not_found=The DeletionDecorator {0} could not be found in the habitat,is it annotated with @Service ?
GenericCreateCommand.deletion_decorator_not_found=DeletionDecorator {0} \u304c\u30cf\u30d3\u30bf\u30c3\u30c8\u306b\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002@Service \u306e\u6ce8\u91c8\u304c\u4ed8\u3044\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002
#EN GenericCreateCommand.transaction_exception=Exception while adding the new configuration : {0}
GenericCreateCommand.transaction_exception=\u65b0\u3057\u3044\u8a2d\u5b9a\u306e\u8ffd\u52a0\u4e2d\u306b\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f: {0}
#EN GenericCreateCommand.already_existing_instance=A {0} instance with a "{1}" name already exist in the configuration
GenericCreateCommand.already_existing_instance="{1}" \u3068\u3044\u3046\u540d\u524d\u306e {0} \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3059\u3067\u306b\u8a2d\u5b9a\u306b\u5b58\u5728\u3057\u307e\u3059
#EN GenericDeleteCommand.transaction_exception=Exception while deleting the configuration {0} : {1}
GenericDeleteCommand.transaction_exception=\u8a2d\u5b9a {0} \u306e\u524a\u9664\u4e2d\u306b\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f: {1}
#EN GenericDeleteCommand.target_object_not_found=The ConfigResolver {0} could not find the configuration object of type {1} where instances of {2} should be removed
GenericDeleteCommand.target_object_not_found=ConfigResolver {0} \u3067\u3001{2} \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u524a\u9664\u3059\u308b {1} \u578b\u306e\u8a2d\u5b9a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f
#EN TypeAndNameResolver.target_object_not_found=Cannot find a {0} with a name {1}
TypeAndNameResolver.target_object_not_found={1} \u3068\u3044\u3046\u540d\u524d\u306e {0} \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093
#EN TypeResolver.target_object_not_found=Cannot find a single component instance of type {0}
TypeResolver.target_object_not_found={0} \u578b\u306e\u5358\u4e00\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093
#EN TypeResolver.no_element_of_that_type=The Domain configuration does not have a sub-element of the type {0}
TypeResolver.no_element_of_that_type=\u30c9\u30e1\u30a4\u30f3\u8a2d\u5b9a\u306b {0} \u578b\u306e\u30b5\u30d6\u8981\u7d20\u304c\u3042\u308a\u307e\u305b\u3093
#EN GenericListCommand.element_has_no_key=The element {0} has not key attribute
GenericListCommand.element_has_no_key=\u8981\u7d20 {0} \u306b\u30ad\u30fc\u5c5e\u6027\u304c\u3042\u308a\u307e\u305b\u3093
